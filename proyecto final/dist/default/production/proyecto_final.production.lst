

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Dec 01 18:36:38 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4550 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _ADRESL	set	4035
    91   000000                     _ADRESH	set	4036
    92   000000                     _TRISDbits	set	3989
    93   000000                     _PORTBbits	set	3969
    94   000000                     _TRISAbits	set	3986
    95   000000                     _TRISD	set	3989
    96   000000                     _ADCON2bits	set	4032
    97   000000                     _ADCON1bits	set	4033
    98   000000                     _ADCON0bits	set	4034
    99   000000                     _TRISBbits	set	3987
   100   000000                     _PORTD	set	3971
   101   000000                     _LATAbits	set	3977
   102   000000                     _LATBbits	set	3978
   103   000000                     _LATDbits	set	3980
   104                           
   105                           	psect	smallconst
   106   000800                     __psmallconst:
   107                           	callstack 0
   108   000800  00                 	db	0
   109   000801                     STR_1:
   110   000801  56                 	db	86	;'V'
   111   000802  41                 	db	65	;'A'
   112   000803  4C                 	db	76	;'L'
   113   000804  4F                 	db	79	;'O'
   114   000805  52                 	db	82	;'R'
   115   000806  45                 	db	69	;'E'
   116   000807  53                 	db	83	;'S'
   117   000808  3A                 	db	58	;':'
   118   000809  20                 	db	32
   119   00080A  00                 	db	0
   120   00080B                     STR_5:
   121   00080B  42                 	db	66	;'B'
   122   00080C  31                 	db	49	;'1'
   123   00080D  20                 	db	32
   124   00080E  4F                 	db	79	;'O'
   125   00080F  46                 	db	70	;'F'
   126   000810  00                 	db	0
   127   000811                     STR_6:
   128   000811  42                 	db	66	;'B'
   129   000812  32                 	db	50	;'2'
   130   000813  20                 	db	32
   131   000814  4F                 	db	79	;'O'
   132   000815  46                 	db	70	;'F'
   133   000816  00                 	db	0
   134   000817                     STR_7:
   135   000817  42                 	db	66	;'B'
   136   000818  31                 	db	49	;'1'
   137   000819  20                 	db	32
   138   00081A  4F                 	db	79	;'O'
   139   00081B  4E                 	db	78	;'N'
   140   00081C  00                 	db	0
   141   00081D                     STR_8:
   142   00081D  42                 	db	66	;'B'
   143   00081E  32                 	db	50	;'2'
   144   00081F  20                 	db	32
   145   000820  4F                 	db	79	;'O'
   146   000821  4E                 	db	78	;'N'
   147   000822  00                 	db	0
   148   000823                     STR_2:
   149   000823  25                 	db	37
   150   000824  30                 	db	48	;'0'
   151   000825  2E                 	db	46
   152   000826  32                 	db	50	;'2'
   153   000827  66                 	db	102	;'f'
   154   000828  00                 	db	0
   155   000829                     STR_3:
   156   000829  50                 	db	80	;'P'
   157   00082A  68                 	db	104	;'h'
   158   00082B  3A                 	db	58	;':'
   159   00082C  20                 	db	32
   160   00082D  00                 	db	0
   161   00082E                     STR_13:
   162   00082E  69                 	db	105	;'i'
   163   00082F  6E                 	db	110	;'n'
   164   000830  66                 	db	102	;'f'
   165   000831  00                 	db	0
   166   000832                     STR_16:
   167   000832  6E                 	db	110	;'n'
   168   000833  61                 	db	97	;'a'
   169   000834  6E                 	db	110	;'n'
   170   000835  00                 	db	0
   171   000836  00                 	db	0	; dummy byte at the end
   172   000000                     
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176   0033FA                     __pcinit:
   177                           	callstack 0
   178   0033FA                     start_initialization:
   179                           	callstack 0
   180   0033FA                     __initialization:
   181                           	callstack 0
   182                           
   183                           ; Clear objects allocated to BANK1 (80 bytes)
   184   0033FA  EE01  F000         	lfsr	0,__pbssBANK1
   185   0033FE  0E50               	movlw	80
   186   003400                     clear_0:
   187   003400  6AEE               	clrf	postinc0,c
   188   003402  06E8               	decf	wreg,f,c
   189   003404  E1FD               	bnz	clear_0
   190                           
   191                           ; Clear objects allocated to BANK0 (23 bytes)
   192   003406  EE00  F0C9         	lfsr	0,__pbssBANK0
   193   00340A  0E17               	movlw	23
   194   00340C                     clear_1:
   195   00340C  6AEE               	clrf	postinc0,c
   196   00340E  06E8               	decf	wreg,f,c
   197   003410  E1FD               	bnz	clear_1
   198   003412                     end_of_initialization:
   199                           	callstack 0
   200   003412                     __end_of__initialization:
   201                           	callstack 0
   202   003412  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203   003414  6EF8               	movwf	tblptru,c
   204   003416  0100               	movlb	0
   205   003418  EFA5  F00B         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssBANK0
   208   0000C9                     __pbssBANK0:
   209                           	callstack 0
   210   0000C9                     floorf@F521:
   211                           	callstack 0
   212   0000C9                     	ds	4
   213   0000CD                     ___fpclassifyf@F465:
   214                           	callstack 0
   215   0000CD                     	ds	4
   216   0000D1                     _volt:
   217                           	callstack 0
   218   0000D1                     	ds	4
   219   0000D5                     _width:
   220                           	callstack 0
   221   0000D5                     	ds	2
   222   0000D7                     _prec:
   223                           	callstack 0
   224   0000D7                     	ds	2
   225   0000D9                     _ValorADC_L:
   226                           	callstack 0
   227   0000D9                     	ds	2
   228   0000DB                     _ValorADC_H:
   229                           	callstack 0
   230   0000DB                     	ds	2
   231   0000DD                     _ValorleidoADC:
   232                           	callstack 0
   233   0000DD                     	ds	2
   234   0000DF                     _flags:
   235                           	callstack 0
   236   0000DF                     	ds	1
   237                           
   238                           	psect	bssBANK1
   239   000100                     __pbssBANK1:
   240                           	callstack 0
   241   000100                     _dbuf:
   242                           	callstack 0
   243   000100                     	ds	80
   244                           
   245                           	psect	cstackBANK0
   246   000060                     __pcstackBANK0:
   247                           	callstack 0
   248   000060                     efgtoa@ne:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x0
   252   000060                     	ds	2
   253   000062                     efgtoa@p:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x2
   257   000062                     	ds	2
   258   000064                     efgtoa@t:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x4
   262   000064                     	ds	2
   263   000066                     _efgtoa$1193:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x6
   267   000066                     	ds	2
   268   000068                     efgtoa@pp:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x8
   272   000068                     	ds	1
   273   000069                     efgtoa@mode:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x9
   277   000069                     	ds	1
   278   00006A                     efgtoa@nmode:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0xA
   282   00006A                     	ds	1
   283   00006B                     efgtoa@d:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0xB
   287   00006B                     	ds	2
   288   00006D                     efgtoa@m:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0xD
   292   00006D                     	ds	2
   293   00006F                     efgtoa@e:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0xF
   297   00006F                     	ds	2
   298   000071                     efgtoa@ou:
   299                           	callstack 0
   300                           
   301                           ; 4 bytes @ 0x11
   302   000071                     	ds	4
   303   000075                     efgtoa@w:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x15
   307   000075                     	ds	2
   308   000077                     efgtoa@h:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x17
   312   000077                     	ds	4
   313   00007B                     efgtoa@l:
   314                           	callstack 0
   315                           
   316                           ; 4 bytes @ 0x1B
   317   00007B                     	ds	4
   318   00007F                     efgtoa@i:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x1F
   322   00007F                     	ds	2
   323   000081                     efgtoa@sign:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x21
   327   000081                     	ds	1
   328   000082                     efgtoa@g:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x22
   332   000082                     	ds	4
   333   000086                     efgtoa@n:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x26
   337   000086                     	ds	2
   338   000088                     efgtoa@u:
   339                           	callstack 0
   340                           
   341                           ; 4 bytes @ 0x28
   342   000088                     	ds	4
   343   00008C                     ?_sprintf:
   344                           	callstack 0
   345   00008C                     sprintf@s:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x2C
   349   00008C                     	ds	1
   350   00008D                     sprintf@fmt:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x2D
   354   00008D                     	ds	5
   355   000092                     sprintf@ap:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0x32
   359   000092                     	ds	1
   360   000093                     sprintf@f:
   361                           	callstack 0
   362                           
   363                           ; 12 bytes @ 0x33
   364   000093                     	ds	12
   365   00009F                     ??_main:
   366                           
   367                           ; 1 bytes @ 0x3F
   368   00009F                     	ds	2
   369   0000A1                     main@string_volt:
   370                           	callstack 0
   371                           
   372                           ; 40 bytes @ 0x41
   373   0000A1                     	ds	40
   374                           
   375                           	psect	cstackCOMRAM
   376   000001                     __pcstackCOMRAM:
   377                           	callstack 0
   378   000001                     ??_DelayPORXLCD:
   379   000001                     ??_DelayXLCD:
   380   000001                     ??_SetDDRamAddr:
   381   000001                     ?___fpclassifyf:
   382                           	callstack 0
   383   000001                     ?___wmul:
   384                           	callstack 0
   385   000001                     ?___fladd:
   386                           	callstack 0
   387   000001                     ?___flmul:
   388                           	callstack 0
   389   000001                     ?_labs:
   390                           	callstack 0
   391   000001                     ?___flneg:
   392                           	callstack 0
   393   000001                     ?___fltol:
   394                           	callstack 0
   395   000001                     ?___xxtofl:
   396                           	callstack 0
   397   000001                     WriteCmdXLCD@cmd:
   398                           	callstack 0
   399   000001                     WriteDataXLCD@data:
   400                           	callstack 0
   401   000001                     ___wmul@multiplier:
   402                           	callstack 0
   403   000001                     memcpy@d1:
   404                           	callstack 0
   405   000001                     fputc@c:
   406                           	callstack 0
   407   000001                     strcpy@dest:
   408                           	callstack 0
   409   000001                     ___fleq@ff1:
   410                           	callstack 0
   411   000001                     ___flneg@f1:
   412                           	callstack 0
   413   000001                     ___fltol@f1:
   414                           	callstack 0
   415   000001                     ___fladd@b:
   416                           	callstack 0
   417   000001                     ___flmul@b:
   418                           	callstack 0
   419   000001                     ___xxtofl@val:
   420                           	callstack 0
   421   000001                     ___fpclassifyf@x:
   422                           	callstack 0
   423   000001                     labs@a:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0x0
   427   000001                     	ds	1
   428   000002                     putsXLCD@buffer:
   429                           	callstack 0
   430   000002                     putrsXLCD@buffer:
   431                           	callstack 0
   432   000002                     XLCDgotoXY@x:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x1
   436   000002                     	ds	1
   437   000003                     fputc@fp:
   438                           	callstack 0
   439   000003                     strcpy@src:
   440                           	callstack 0
   441   000003                     ___wmul@multiplicand:
   442                           	callstack 0
   443   000003                     memcpy@s1:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2
   447   000003                     	ds	1
   448   000004                     ??_fputc:
   449   000004                     ??_strcpy:
   450   000004                     SetDDRamAddr@DDaddr:
   451                           	callstack 0
   452   000004                     XLCDgotoXY@y:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x3
   456   000004                     	ds	1
   457   000005                     ??___fpclassifyf:
   458   000005                     ??_labs:
   459   000005                     ??___fltol:
   460   000005                     ??___xxtofl:
   461   000005                     OpenXLCD@lcdtype:
   462                           	callstack 0
   463   000005                     ___wmul@product:
   464                           	callstack 0
   465   000005                     memcpy@n:
   466                           	callstack 0
   467   000005                     strcpy@d:
   468                           	callstack 0
   469   000005                     ___fleq@ff2:
   470                           	callstack 0
   471   000005                     ___fladd@a:
   472                           	callstack 0
   473   000005                     ___flmul@a:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x4
   477   000005                     	ds	1
   478   000006                     
   479                           ; 1 bytes @ 0x5
   480   000006                     	ds	1
   481   000007                     ?_read_prec_or_width:
   482                           	callstack 0
   483   000007                     read_prec_or_width@fmt:
   484                           	callstack 0
   485   000007                     memcpy@tmp:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x6
   489   000007                     	ds	1
   490   000008                     read_prec_or_width@ap:
   491                           	callstack 0
   492   000008                     memcpy@d:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x7
   496   000008                     	ds	1
   497   000009                     ??___fladd:
   498   000009                     ??___flmul:
   499   000009                     ??___fleq:
   500   000009                     ___fltol@sign1:
   501                           	callstack 0
   502   000009                     ___xxtofl@sign:
   503                           	callstack 0
   504   000009                     read_prec_or_width@c:
   505                           	callstack 0
   506   000009                     ___fpclassifyf@e:
   507                           	callstack 0
   508   000009                     fputs@s:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x8
   512   000009                     	ds	1
   513   00000A                     ___fltol@exp1:
   514                           	callstack 0
   515   00000A                     ___xxtofl@exp:
   516                           	callstack 0
   517   00000A                     read_prec_or_width@n:
   518                           	callstack 0
   519   00000A                     memcpy@s:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x9
   523   00000A                     	ds	1
   524   00000B                     fputs@fp:
   525                           	callstack 0
   526   00000B                     ___xxtofl@arg:
   527                           	callstack 0
   528   00000B                     ___fpclassifyf@u:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0xA
   532   00000B                     	ds	1
   533   00000C                     fputs@c:
   534                           	callstack 0
   535                           
   536                           ; 1 bytes @ 0xB
   537   00000C                     	ds	1
   538   00000D                     ___fladd@signs:
   539                           	callstack 0
   540   00000D                     ___flmul@sign:
   541                           	callstack 0
   542   00000D                     fputs@i:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0xC
   546   00000D                     	ds	1
   547   00000E                     ___fladd@aexp:
   548                           	callstack 0
   549   00000E                     ___flmul@grs:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0xD
   553   00000E                     	ds	1
   554   00000F                     ___fladd@bexp:
   555                           	callstack 0
   556   00000F                     pad@fp:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0xE
   560   00000F                     	ds	1
   561   000010                     ___fladd@grs:
   562                           	callstack 0
   563   000010                     pad@buf:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0xF
   567   000010                     	ds	2
   568   000012                     ___flmul@aexp:
   569                           	callstack 0
   570   000012                     pad@p:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x11
   574   000012                     	ds	1
   575   000013                     ___flmul@bexp:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x12
   579   000013                     	ds	1
   580   000014                     ??_pad:
   581   000014                     ___flmul@prod:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x13
   585   000014                     	ds	1
   586   000015                     pad@i:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x14
   590   000015                     	ds	3
   591   000018                     ___flmul@temp:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x17
   595   000018                     	ds	2
   596   00001A                     ?___fldiv:
   597                           	callstack 0
   598   00001A                     ?___flsub:
   599                           	callstack 0
   600   00001A                     ___flge@ff1:
   601                           	callstack 0
   602   00001A                     ___flsub@b:
   603                           	callstack 0
   604   00001A                     ___fldiv@b:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x19
   608   00001A                     	ds	4
   609   00001E                     ___flge@ff2:
   610                           	callstack 0
   611   00001E                     ___flsub@a:
   612                           	callstack 0
   613   00001E                     ___fldiv@a:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x1D
   617   00001E                     	ds	4
   618   000022                     ??___fldiv:
   619   000022                     ??___flge:
   620                           
   621                           ; 1 bytes @ 0x21
   622   000022                     	ds	4
   623   000026                     ___fldiv@rem:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x25
   627   000026                     	ds	4
   628   00002A                     ___fldiv@sign:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x29
   632   00002A                     	ds	1
   633   00002B                     ___fldiv@new_exp:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x2A
   637   00002B                     	ds	2
   638   00002D                     ___fldiv@grs:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x2C
   642   00002D                     	ds	4
   643   000031                     ___fldiv@bexp:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x30
   647   000031                     	ds	1
   648   000032                     ___fldiv@aexp:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x31
   652   000032                     	ds	1
   653   000033                     ?_floorf:
   654                           	callstack 0
   655   000033                     floorf@x:
   656                           	callstack 0
   657                           
   658                           ; 4 bytes @ 0x32
   659   000033                     	ds	4
   660   000037                     ??_floorf:
   661                           
   662                           ; 1 bytes @ 0x36
   663   000037                     	ds	6
   664   00003D                     floorf@m:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x3C
   668   00003D                     	ds	4
   669   000041                     floorf@e:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x40
   673   000041                     	ds	2
   674   000043                     floorf@u:
   675                           	callstack 0
   676                           
   677                           ; 4 bytes @ 0x42
   678   000043                     	ds	4
   679   000047                     efgtoa@fp:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x46
   683   000047                     	ds	1
   684   000048                     efgtoa@f:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x47
   688   000048                     	ds	4
   689   00004C                     efgtoa@c:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x4B
   693   00004C                     	ds	1
   694   00004D                     ??_efgtoa:
   695                           
   696                           ; 1 bytes @ 0x4C
   697   00004D                     	ds	2
   698   00004F                     vfpfcnvrt@fp:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x4E
   702   00004F                     	ds	1
   703   000050                     vfpfcnvrt@fmt:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x4F
   707   000050                     	ds	1
   708   000051                     vfpfcnvrt@ap:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x50
   712   000051                     	ds	1
   713   000052                     ??_vfpfcnvrt:
   714                           
   715                           ; 1 bytes @ 0x51
   716   000052                     	ds	2
   717   000054                     vfpfcnvrt@convarg:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x53
   721   000054                     	ds	4
   722   000058                     vfpfcnvrt@done:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x57
   726   000058                     	ds	1
   727   000059                     vfpfcnvrt@c:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x58
   731   000059                     	ds	1
   732   00005A                     vfpfcnvrt@cp:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x59
   736   00005A                     	ds	1
   737   00005B                     ?_vfprintf:
   738                           	callstack 0
   739   00005B                     vfprintf@fp:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x5A
   743   00005B                     	ds	1
   744   00005C                     vfprintf@fmt:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x5B
   748   00005C                     	ds	1
   749   00005D                     vfprintf@ap:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x5C
   753   00005D                     	ds	1
   754   00005E                     vfprintf@cfmt:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x5D
   758   00005E                     	ds	1
   759   00005F                     
   760                           ; 1 bytes @ 0x5E
   761 ;;
   762 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   763 ;;
   764 ;; *************** function _main *****************
   765 ;; Defined at:
   766 ;;		line 35 in file "ADC_main.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  string_volt    40   65[BANK0 ] float [10]
   771 ;;  string_tmp     10    0        unsigned char [10]
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   781 ;;      Params:         0       0       0       0       0       0       0       0       0
   782 ;;      Locals:         0      40       0       0       0       0       0       0       0
   783 ;;      Temps:          0       2       0       0       0       0       0       0       0
   784 ;;      Totals:         0      42       0       0       0       0       0       0       0
   785 ;;Total ram usage:       42 bytes
   786 ;; Hardware stack levels required when called: 8
   787 ;; This function calls:
   788 ;;		_InitPort
   789 ;;		_XLCDInit
   790 ;;		_XLCDgotoXY
   791 ;;		___fldiv
   792 ;;		___flge
   793 ;;		___flmul
   794 ;;		___xxtofl
   795 ;;		_adc_Init
   796 ;;		_putrsXLCD
   797 ;;		_putsXLCD
   798 ;;		_sprintf
   799 ;; This function is called by:
   800 ;;		Startup code after reset
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text0
   805   00174A                     __ptext0:
   806                           	callstack 0
   807   00174A                     _main:
   808                           	callstack 23
   809   00174A                     
   810                           ;ADC_main.c: 36:     uint8_t string_tmp[10];;ADC_main.c: 37:     float string_volt[10];;
      +                          ADC_main.c: 39:     InitPort();
   811   00174A  EC2F  F01A         	call	_InitPort	;wreg free
   812   00174E                     
   813                           ;ADC_main.c: 40:     XLCDInit();
   814   00174E  EC0E  F01A         	call	_XLCDInit	;wreg free
   815   001752                     
   816                           ;ADC_main.c: 41:     adc_Init();
   817   001752  ECBE  F019         	call	_adc_Init	;wreg free
   818   001756                     l4714:
   819                           
   820                           ;ADC_main.c: 44:       ADCON0bits.GO_DONE=1;
   821   001756  82C2               	bsf	194,1,c	;volatile
   822   001758                     l54:
   823   001758  B2C2               	btfsc	194,1,c	;volatile
   824   00175A  EFB1  F00B         	goto	u4481
   825   00175E  EFB3  F00B         	goto	u4480
   826   001762                     u4481:
   827   001762  EFAC  F00B         	goto	l54
   828   001766                     u4480:
   829   001766                     
   830                           ;ADC_main.c: 46:       ValorADC_H = ADRESH<<2;
   831   001766  50C4               	movf	196,w,c	;volatile
   832   001768  0100               	movlb	0	; () banked
   833   00176A  6F9F               	movwf	??_main& (0+255),b
   834   00176C  6BA0               	clrf	(??_main+1)& (0+255),b
   835   00176E  90D8               	bcf	status,0,c
   836   001770  379F               	rlcf	??_main& (0+255),f,b
   837   001772  37A0               	rlcf	(??_main+1)& (0+255),f,b
   838   001774  90D8               	bcf	status,0,c
   839   001776  379F               	rlcf	??_main& (0+255),f,b
   840   001778  37A0               	rlcf	(??_main+1)& (0+255),f,b
   841   00177A  C09F  F0DB         	movff	??_main,_ValorADC_H
   842   00177E  C0A0  F0DC         	movff	??_main+1,_ValorADC_H+1
   843                           
   844                           ;ADC_main.c: 47:       ValorADC_L = ADRESL>>6;
   845   001782  CFC3 F09F          	movff	4035,??_main	;volatile
   846   001786  0E06               	movlw	6
   847   001788  6FA0               	movwf	(??_main+1)& (0+255),b
   848   00178A                     u4495:
   849   00178A  90D8               	bcf	status,0,c
   850   00178C  339F               	rrcf	??_main& (0+255),f,b
   851   00178E  2FA0               	decfsz	(??_main+1)& (0+255),f,b
   852   001790  EFC5  F00B         	goto	u4495
   853   001794  519F               	movf	??_main& (0+255),w,b
   854   001796  6FD9               	movwf	_ValorADC_L& (0+255),b
   855   001798  6BDA               	clrf	(_ValorADC_L+1)& (0+255),b
   856                           
   857                           ;ADC_main.c: 48:       ValorleidoADC = ValorADC_H + ValorADC_L;
   858   00179A  51D9               	movf	_ValorADC_L& (0+255),w,b
   859   00179C  25DB               	addwf	_ValorADC_H& (0+255),w,b
   860   00179E  6FDD               	movwf	_ValorleidoADC& (0+255),b
   861   0017A0  51DA               	movf	(_ValorADC_L+1)& (0+255),w,b
   862   0017A2  21DC               	addwfc	(_ValorADC_H+1)& (0+255),w,b
   863   0017A4  6FDE               	movwf	(_ValorleidoADC+1)& (0+255),b
   864   0017A6                     
   865                           ; BSR set to: 0
   866                           ;ADC_main.c: 49:       volt=ValorleidoADC;
   867   0017A6  C0DD  F001         	movff	_ValorleidoADC,___xxtofl@val
   868   0017AA  C0DE  F002         	movff	_ValorleidoADC+1,___xxtofl@val+1
   869   0017AE  6A03               	clrf	(___xxtofl@val+2)^0,c
   870   0017B0  6A04               	clrf	(___xxtofl@val+3)^0,c
   871   0017B2  0E00               	movlw	0
   872   0017B4  ECFE  F013         	call	___xxtofl
   873   0017B8  C001  F0D1         	movff	?___xxtofl,_volt
   874   0017BC  C002  F0D2         	movff	?___xxtofl+1,_volt+1
   875   0017C0  C003  F0D3         	movff	?___xxtofl+2,_volt+2
   876   0017C4  C004  F0D4         	movff	?___xxtofl+3,_volt+3
   877   0017C8                     
   878                           ;ADC_main.c: 50:       XLCDgotoXY(0,0);
   879   0017C8  0E00               	movlw	0
   880   0017CA  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
   881   0017CC  0E00               	movlw	0
   882   0017CE  6E02               	movwf	XLCDgotoXY@x^0,c
   883   0017D0  0E00               	movlw	0
   884   0017D2  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
   885   0017D4  0E00               	movlw	0
   886   0017D6  6E04               	movwf	XLCDgotoXY@y^0,c
   887   0017D8  ECA6  F019         	call	_XLCDgotoXY	;wreg free
   888   0017DC                     
   889                           ;ADC_main.c: 51:       putrsXLCD("VALORES: ");
   890   0017DC  0E01               	movlw	low STR_1
   891   0017DE  6E02               	movwf	putrsXLCD@buffer^0,c
   892   0017E0  EC8C  F019         	call	_putrsXLCD	;wreg free
   893   0017E4                     
   894                           ;ADC_main.c: 52:       XLCDgotoXY(0,11);
   895   0017E4  0E00               	movlw	0
   896   0017E6  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
   897   0017E8  0E00               	movlw	0
   898   0017EA  6E02               	movwf	XLCDgotoXY@x^0,c
   899   0017EC  0E00               	movlw	0
   900   0017EE  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
   901   0017F0  0E0B               	movlw	11
   902   0017F2  6E04               	movwf	XLCDgotoXY@y^0,c
   903   0017F4  ECA6  F019         	call	_XLCDgotoXY	;wreg free
   904   0017F8                     
   905                           ;ADC_main.c: 53:       volt=((volt*14)/1023);
   906   0017F8  0E00               	movlw	0
   907   0017FA  6E05               	movwf	___flmul@a^0,c
   908   0017FC  0E00               	movlw	0
   909   0017FE  6E06               	movwf	(___flmul@a+1)^0,c
   910   001800  0E60               	movlw	96
   911   001802  6E07               	movwf	(___flmul@a+2)^0,c
   912   001804  0E41               	movlw	65
   913   001806  6E08               	movwf	(___flmul@a+3)^0,c
   914   001808  C0D1  F001         	movff	_volt,___flmul@b
   915   00180C  C0D2  F002         	movff	_volt+1,___flmul@b+1
   916   001810  C0D3  F003         	movff	_volt+2,___flmul@b+2
   917   001814  C0D4  F004         	movff	_volt+3,___flmul@b+3
   918   001818  ECDC  F00D         	call	___flmul	;wreg free
   919   00181C  C001  F01A         	movff	?___flmul,___fldiv@b
   920   001820  C002  F01B         	movff	?___flmul+1,___fldiv@b+1
   921   001824  C003  F01C         	movff	?___flmul+2,___fldiv@b+2
   922   001828  C004  F01D         	movff	?___flmul+3,___fldiv@b+3
   923   00182C  0E00               	movlw	0
   924   00182E  6E1E               	movwf	___fldiv@a^0,c
   925   001830  0EC0               	movlw	192
   926   001832  6E1F               	movwf	(___fldiv@a+1)^0,c
   927   001834  0E7F               	movlw	127
   928   001836  6E20               	movwf	(___fldiv@a+2)^0,c
   929   001838  0E44               	movlw	68
   930   00183A  6E21               	movwf	(___fldiv@a+3)^0,c
   931   00183C  ECF1  F00F         	call	___fldiv	;wreg free
   932   001840  C01A  F0D1         	movff	?___fldiv,_volt
   933   001844  C01B  F0D2         	movff	?___fldiv+1,_volt+1
   934   001848  C01C  F0D3         	movff	?___fldiv+2,_volt+2
   935   00184C  C01D  F0D4         	movff	?___fldiv+3,_volt+3
   936   001850                     
   937                           ;ADC_main.c: 54:       sprintf(string_volt,"%0.2f",volt);
   938   001850  0EA1               	movlw	low main@string_volt
   939   001852  0100               	movlb	0	; () banked
   940   001854  6F8C               	movwf	sprintf@s& (0+255),b
   941   001856  0E23               	movlw	low STR_2
   942   001858  6F8D               	movwf	sprintf@fmt& (0+255),b
   943   00185A  C0D1  F08E         	movff	_volt,?_sprintf+2
   944   00185E  C0D2  F08F         	movff	_volt+1,?_sprintf+3
   945   001862  C0D3  F090         	movff	_volt+2,?_sprintf+4
   946   001866  C0D4  F091         	movff	_volt+3,?_sprintf+5
   947   00186A  EC54  F019         	call	_sprintf	;wreg free
   948   00186E                     
   949                           ;ADC_main.c: 55:       XLCDgotoXY(1,0);
   950   00186E  0E00               	movlw	0
   951   001870  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
   952   001872  0E01               	movlw	1
   953   001874  6E02               	movwf	XLCDgotoXY@x^0,c
   954   001876  0E00               	movlw	0
   955   001878  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
   956   00187A  0E00               	movlw	0
   957   00187C  6E04               	movwf	XLCDgotoXY@y^0,c
   958   00187E  ECA6  F019         	call	_XLCDgotoXY	;wreg free
   959   001882                     
   960                           ;ADC_main.c: 56:       putrsXLCD("Ph: ");
   961   001882  0E29               	movlw	low STR_3
   962   001884  6E02               	movwf	putrsXLCD@buffer^0,c
   963   001886  EC8C  F019         	call	_putrsXLCD	;wreg free
   964   00188A                     
   965                           ;ADC_main.c: 57:       putsXLCD(string_volt);
   966   00188A  0EA1               	movlw	low main@string_volt
   967   00188C  6E02               	movwf	putsXLCD@buffer^0,c
   968   00188E  ECD5  F019         	call	_putsXLCD	;wreg free
   969   001892                     
   970                           ;ADC_main.c: 58:       putrsXLCD(" ");
   971   001892  0E09               	movlw	low (STR_1+8)
   972   001894  6E02               	movwf	putrsXLCD@buffer^0,c
   973   001896  EC8C  F019         	call	_putrsXLCD	;wreg free
   974   00189A                     
   975                           ;ADC_main.c: 59:       _delay((unsigned long)((200)*(20000000/4000.0)));
   976   00189A  0E06               	movlw	6
   977   00189C  0100               	movlb	0	; () banked
   978   00189E  6FA0               	movwf	(??_main+1)& (0+255),b
   979   0018A0  0E13               	movlw	19
   980   0018A2  6F9F               	movwf	??_main& (0+255),b
   981   0018A4  0EAD               	movlw	173
   982   0018A6                     u4607:
   983   0018A6  2EE8               	decfsz	wreg,f,c
   984   0018A8  D7FE               	bra	u4607
   985   0018AA  2F9F               	decfsz	??_main& (0+255),f,b
   986   0018AC  D7FC               	bra	u4607
   987   0018AE  2FA0               	decfsz	(??_main+1)& (0+255),f,b
   988   0018B0  D7FA               	bra	u4607
   989   0018B2  D000               	nop2	
   990   0018B4                     
   991                           ;ADC_main.c: 61:                if( 6.5>=volt || volt<7.5 ){
   992   0018B4  0E00               	movlw	0
   993   0018B6  6E1A               	movwf	___flge@ff1^0,c
   994   0018B8  0E00               	movlw	0
   995   0018BA  6E1B               	movwf	(___flge@ff1+1)^0,c
   996   0018BC  0ED0               	movlw	208
   997   0018BE  6E1C               	movwf	(___flge@ff1+2)^0,c
   998   0018C0  0E40               	movlw	64
   999   0018C2  6E1D               	movwf	(___flge@ff1+3)^0,c
  1000   0018C4  C0D1  F01E         	movff	_volt,___flge@ff2
  1001   0018C8  C0D2  F01F         	movff	_volt+1,___flge@ff2+1
  1002   0018CC  C0D3  F020         	movff	_volt+2,___flge@ff2+2
  1003   0018D0  C0D4  F021         	movff	_volt+3,___flge@ff2+3
  1004   0018D4  EC5B  F015         	call	___flge	;wreg free
  1005   0018D8  B0D8               	btfsc	status,0,c
  1006   0018DA  EF71  F00C         	goto	u4501
  1007   0018DE  EF73  F00C         	goto	u4500
  1008   0018E2                     u4501:
  1009   0018E2  EF8C  F00C         	goto	l59
  1010   0018E6                     u4500:
  1011   0018E6  C0D1  F01A         	movff	_volt,___flge@ff1
  1012   0018EA  C0D2  F01B         	movff	_volt+1,___flge@ff1+1
  1013   0018EE  C0D3  F01C         	movff	_volt+2,___flge@ff1+2
  1014   0018F2  C0D4  F01D         	movff	_volt+3,___flge@ff1+3
  1015   0018F6  0E00               	movlw	0
  1016   0018F8  6E1E               	movwf	___flge@ff2^0,c
  1017   0018FA  0E00               	movlw	0
  1018   0018FC  6E1F               	movwf	(___flge@ff2+1)^0,c
  1019   0018FE  0EF0               	movlw	240
  1020   001900  6E20               	movwf	(___flge@ff2+2)^0,c
  1021   001902  0E40               	movlw	64
  1022   001904  6E21               	movwf	(___flge@ff2+3)^0,c
  1023   001906  EC5B  F015         	call	___flge	;wreg free
  1024   00190A  B0D8               	btfsc	status,0,c
  1025   00190C  EF8A  F00C         	goto	u4511
  1026   001910  EF8C  F00C         	goto	u4510
  1027   001914                     u4511:
  1028   001914  EFC0  F00C         	goto	l4754
  1029   001918                     u4510:
  1030   001918                     l59:
  1031                           
  1032                           ;ADC_main.c: 62:              if(PORTBbits.RB4==0){
  1033   001918  B881               	btfsc	129,4,c	;volatile
  1034   00191A  EF91  F00C         	goto	u4521
  1035   00191E  EF93  F00C         	goto	u4520
  1036   001922                     u4521:
  1037   001922  EF18  F00D         	goto	l4772
  1038   001926                     u4520:
  1039   001926                     
  1040                           ;ADC_main.c: 64:             LATBbits.LATB6=0;
  1041   001926  9C8A               	bcf	138,6,c	;volatile
  1042                           
  1043                           ;ADC_main.c: 65:            LATAbits.LATA1=0;
  1044   001928  9289               	bcf	137,1,c	;volatile
  1045   00192A                     
  1046                           ;ADC_main.c: 66:             XLCDgotoXY(0,11);
  1047   00192A  0E00               	movlw	0
  1048   00192C  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
  1049   00192E  0E00               	movlw	0
  1050   001930  6E02               	movwf	XLCDgotoXY@x^0,c
  1051   001932  0E00               	movlw	0
  1052   001934  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
  1053   001936  0E0B               	movlw	11
  1054   001938  6E04               	movwf	XLCDgotoXY@y^0,c
  1055   00193A  ECA6  F019         	call	_XLCDgotoXY	;wreg free
  1056   00193E                     
  1057                           ;ADC_main.c: 67:     putrsXLCD("B1 OF");
  1058   00193E  0E0B               	movlw	low STR_5
  1059   001940  6E02               	movwf	putrsXLCD@buffer^0,c
  1060   001942  EC8C  F019         	call	_putrsXLCD	;wreg free
  1061   001946                     
  1062                           ;ADC_main.c: 68:      XLCDgotoXY(1,11);
  1063   001946  0E00               	movlw	0
  1064   001948  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
  1065   00194A  0E01               	movlw	1
  1066   00194C  6E02               	movwf	XLCDgotoXY@x^0,c
  1067   00194E  0E00               	movlw	0
  1068   001950  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
  1069   001952  0E0B               	movlw	11
  1070   001954  6E04               	movwf	XLCDgotoXY@y^0,c
  1071   001956  ECA6  F019         	call	_XLCDgotoXY	;wreg free
  1072                           
  1073                           ;ADC_main.c: 69:       putrsXLCD("B2 OF");
  1074   00195A  0E11               	movlw	low STR_6
  1075   00195C  6E02               	movwf	putrsXLCD@buffer^0,c
  1076   00195E  EC8C  F019         	call	_putrsXLCD	;wreg free
  1077   001962                     
  1078                           ;ADC_main.c: 70:             _delay((unsigned long)((500)*(20000000/4000.0)));}
  1079   001962  0E0D               	movlw	13
  1080   001964  0100               	movlb	0	; () banked
  1081   001966  6FA0               	movwf	(??_main+1)& (0+255),b
  1082   001968  0EAF               	movlw	175
  1083   00196A  6F9F               	movwf	??_main& (0+255),b
  1084   00196C  0EB6               	movlw	182
  1085   00196E                     u4617:
  1086   00196E  2EE8               	decfsz	wreg,f,c
  1087   001970  D7FE               	bra	u4617
  1088   001972  2F9F               	decfsz	??_main& (0+255),f,b
  1089   001974  D7FC               	bra	u4617
  1090   001976  2FA0               	decfsz	(??_main+1)& (0+255),f,b
  1091   001978  D7FA               	bra	u4617
  1092   00197A  0000               	nop	
  1093   00197C  EF18  F00D         	goto	l4772
  1094   001980                     l4754:
  1095   001980  0E00               	movlw	0
  1096   001982  6E1A               	movwf	___flge@ff1^0,c
  1097   001984  0E00               	movlw	0
  1098   001986  6E1B               	movwf	(___flge@ff1+1)^0,c
  1099   001988  0EF0               	movlw	240
  1100   00198A  6E1C               	movwf	(___flge@ff1+2)^0,c
  1101   00198C  0E40               	movlw	64
  1102   00198E  6E1D               	movwf	(___flge@ff1+3)^0,c
  1103   001990  C0D1  F01E         	movff	_volt,___flge@ff2
  1104   001994  C0D2  F01F         	movff	_volt+1,___flge@ff2+1
  1105   001998  C0D3  F020         	movff	_volt+2,___flge@ff2+2
  1106   00199C  C0D4  F021         	movff	_volt+3,___flge@ff2+3
  1107   0019A0  EC5B  F015         	call	___flge	;wreg free
  1108   0019A4  B0D8               	btfsc	status,0,c
  1109   0019A6  EFD7  F00C         	goto	u4531
  1110   0019AA  EFD9  F00C         	goto	u4530
  1111   0019AE                     u4531:
  1112   0019AE  EF18  F00D         	goto	l4772
  1113   0019B2                     u4530:
  1114   0019B2                     
  1115                           ;ADC_main.c: 72:             if(PORTBbits.RB4==0){
  1116   0019B2  B881               	btfsc	129,4,c	;volatile
  1117   0019B4  EFDE  F00C         	goto	u4541
  1118   0019B8  EFE0  F00C         	goto	u4540
  1119   0019BC                     u4541:
  1120   0019BC  EF18  F00D         	goto	l4772
  1121   0019C0                     u4540:
  1122   0019C0                     
  1123                           ;ADC_main.c: 74:            LATBbits.LATB6=1;
  1124   0019C0  8C8A               	bsf	138,6,c	;volatile
  1125   0019C2                     
  1126                           ;ADC_main.c: 75:             _delay((unsigned long)((100)*(20000000/4000.0)));
  1127   0019C2  0E03               	movlw	3
  1128   0019C4  0100               	movlb	0	; () banked
  1129   0019C6  6FA0               	movwf	(??_main+1)& (0+255),b
  1130   0019C8  0E8A               	movlw	138
  1131   0019CA  6F9F               	movwf	??_main& (0+255),b
  1132   0019CC  0E55               	movlw	85
  1133   0019CE                     u4627:
  1134   0019CE  2EE8               	decfsz	wreg,f,c
  1135   0019D0  D7FE               	bra	u4627
  1136   0019D2  2F9F               	decfsz	??_main& (0+255),f,b
  1137   0019D4  D7FC               	bra	u4627
  1138   0019D6  2FA0               	decfsz	(??_main+1)& (0+255),f,b
  1139   0019D8  D7FA               	bra	u4627
  1140   0019DA  D000               	nop2	
  1141   0019DC                     
  1142                           ;ADC_main.c: 76:            LATAbits.LATA1=1;
  1143   0019DC  8289               	bsf	137,1,c	;volatile
  1144   0019DE                     
  1145                           ;ADC_main.c: 77:            XLCDgotoXY(0,11);
  1146   0019DE  0E00               	movlw	0
  1147   0019E0  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
  1148   0019E2  0E00               	movlw	0
  1149   0019E4  6E02               	movwf	XLCDgotoXY@x^0,c
  1150   0019E6  0E00               	movlw	0
  1151   0019E8  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
  1152   0019EA  0E0B               	movlw	11
  1153   0019EC  6E04               	movwf	XLCDgotoXY@y^0,c
  1154   0019EE  ECA6  F019         	call	_XLCDgotoXY	;wreg free
  1155   0019F2                     
  1156                           ;ADC_main.c: 78:     putrsXLCD("B1 ON");
  1157   0019F2  0E17               	movlw	low STR_7
  1158   0019F4  6E02               	movwf	putrsXLCD@buffer^0,c
  1159   0019F6  EC8C  F019         	call	_putrsXLCD	;wreg free
  1160   0019FA                     
  1161                           ;ADC_main.c: 79:      XLCDgotoXY(1,11);
  1162   0019FA  0E00               	movlw	0
  1163   0019FC  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
  1164   0019FE  0E01               	movlw	1
  1165   001A00  6E02               	movwf	XLCDgotoXY@x^0,c
  1166   001A02  0E00               	movlw	0
  1167   001A04  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
  1168   001A06  0E0B               	movlw	11
  1169   001A08  6E04               	movwf	XLCDgotoXY@y^0,c
  1170   001A0A  ECA6  F019         	call	_XLCDgotoXY	;wreg free
  1171   001A0E                     
  1172                           ;ADC_main.c: 80:       putrsXLCD("B2 ON");
  1173   001A0E  0E1D               	movlw	low STR_8
  1174   001A10  6E02               	movwf	putrsXLCD@buffer^0,c
  1175   001A12  EC8C  F019         	call	_putrsXLCD	;wreg free
  1176                           
  1177                           ;ADC_main.c: 81:       _delay((unsigned long)((500)*(20000000/4000.0)));
  1178   001A16  0E0D               	movlw	13
  1179   001A18  0100               	movlb	0	; () banked
  1180   001A1A  6FA0               	movwf	(??_main+1)& (0+255),b
  1181   001A1C  0EAF               	movlw	175
  1182   001A1E  6F9F               	movwf	??_main& (0+255),b
  1183   001A20  0EB6               	movlw	182
  1184   001A22                     u4637:
  1185   001A22  2EE8               	decfsz	wreg,f,c
  1186   001A24  D7FE               	bra	u4637
  1187   001A26  2F9F               	decfsz	??_main& (0+255),f,b
  1188   001A28  D7FC               	bra	u4637
  1189   001A2A  2FA0               	decfsz	(??_main+1)& (0+255),f,b
  1190   001A2C  D7FA               	bra	u4637
  1191   001A2E  0000               	nop	
  1192   001A30                     l4772:
  1193                           
  1194                           ;ADC_main.c: 85:         if( 6.5>=volt || volt<7.5 ){
  1195   001A30  0E00               	movlw	0
  1196   001A32  6E1A               	movwf	___flge@ff1^0,c
  1197   001A34  0E00               	movlw	0
  1198   001A36  6E1B               	movwf	(___flge@ff1+1)^0,c
  1199   001A38  0ED0               	movlw	208
  1200   001A3A  6E1C               	movwf	(___flge@ff1+2)^0,c
  1201   001A3C  0E40               	movlw	64
  1202   001A3E  6E1D               	movwf	(___flge@ff1+3)^0,c
  1203   001A40  C0D1  F01E         	movff	_volt,___flge@ff2
  1204   001A44  C0D2  F01F         	movff	_volt+1,___flge@ff2+1
  1205   001A48  C0D3  F020         	movff	_volt+2,___flge@ff2+2
  1206   001A4C  C0D4  F021         	movff	_volt+3,___flge@ff2+3
  1207   001A50  EC5B  F015         	call	___flge	;wreg free
  1208   001A54  B0D8               	btfsc	status,0,c
  1209   001A56  EF2F  F00D         	goto	u4551
  1210   001A5A  EF31  F00D         	goto	u4550
  1211   001A5E                     u4551:
  1212   001A5E  EF4A  F00D         	goto	l66
  1213   001A62                     u4550:
  1214   001A62  C0D1  F01A         	movff	_volt,___flge@ff1
  1215   001A66  C0D2  F01B         	movff	_volt+1,___flge@ff1+1
  1216   001A6A  C0D3  F01C         	movff	_volt+2,___flge@ff1+2
  1217   001A6E  C0D4  F01D         	movff	_volt+3,___flge@ff1+3
  1218   001A72  0E00               	movlw	0
  1219   001A74  6E1E               	movwf	___flge@ff2^0,c
  1220   001A76  0E00               	movlw	0
  1221   001A78  6E1F               	movwf	(___flge@ff2+1)^0,c
  1222   001A7A  0EF0               	movlw	240
  1223   001A7C  6E20               	movwf	(___flge@ff2+2)^0,c
  1224   001A7E  0E40               	movlw	64
  1225   001A80  6E21               	movwf	(___flge@ff2+3)^0,c
  1226   001A82  EC5B  F015         	call	___flge	;wreg free
  1227   001A86  B0D8               	btfsc	status,0,c
  1228   001A88  EF48  F00D         	goto	u4561
  1229   001A8C  EF4A  F00D         	goto	u4560
  1230   001A90                     u4561:
  1231   001A90  EF7E  F00D         	goto	l4786
  1232   001A94                     u4560:
  1233   001A94                     l66:
  1234                           
  1235                           ;ADC_main.c: 86:             if(PORTBbits.RB4==1){
  1236   001A94  A881               	btfss	129,4,c	;volatile
  1237   001A96  EF4F  F00D         	goto	u4571
  1238   001A9A  EF51  F00D         	goto	u4570
  1239   001A9E                     u4571:
  1240   001A9E  EFAB  F00B         	goto	l4714
  1241   001AA2                     u4570:
  1242   001AA2                     
  1243                           ;ADC_main.c: 88:             LATBbits.LATB6=0;
  1244   001AA2  9C8A               	bcf	138,6,c	;volatile
  1245                           
  1246                           ;ADC_main.c: 89:            LATAbits.LATA1=0;
  1247   001AA4  9289               	bcf	137,1,c	;volatile
  1248   001AA6                     
  1249                           ;ADC_main.c: 90:             XLCDgotoXY(0,11);
  1250   001AA6  0E00               	movlw	0
  1251   001AA8  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
  1252   001AAA  0E00               	movlw	0
  1253   001AAC  6E02               	movwf	XLCDgotoXY@x^0,c
  1254   001AAE  0E00               	movlw	0
  1255   001AB0  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
  1256   001AB2  0E0B               	movlw	11
  1257   001AB4  6E04               	movwf	XLCDgotoXY@y^0,c
  1258   001AB6  ECA6  F019         	call	_XLCDgotoXY	;wreg free
  1259   001ABA                     
  1260                           ;ADC_main.c: 91:     putrsXLCD("B1 OF");
  1261   001ABA  0E0B               	movlw	low STR_5
  1262   001ABC  6E02               	movwf	putrsXLCD@buffer^0,c
  1263   001ABE  EC8C  F019         	call	_putrsXLCD	;wreg free
  1264   001AC2                     
  1265                           ;ADC_main.c: 92:      XLCDgotoXY(1,11);
  1266   001AC2  0E00               	movlw	0
  1267   001AC4  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
  1268   001AC6  0E01               	movlw	1
  1269   001AC8  6E02               	movwf	XLCDgotoXY@x^0,c
  1270   001ACA  0E00               	movlw	0
  1271   001ACC  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
  1272   001ACE  0E0B               	movlw	11
  1273   001AD0  6E04               	movwf	XLCDgotoXY@y^0,c
  1274   001AD2  ECA6  F019         	call	_XLCDgotoXY	;wreg free
  1275                           
  1276                           ;ADC_main.c: 93:       putrsXLCD("B2 OF");
  1277   001AD6  0E11               	movlw	low STR_6
  1278   001AD8  6E02               	movwf	putrsXLCD@buffer^0,c
  1279   001ADA  EC8C  F019         	call	_putrsXLCD	;wreg free
  1280   001ADE                     
  1281                           ;ADC_main.c: 94:             _delay((unsigned long)((500)*(20000000/4000.0)));}
  1282   001ADE  0E0D               	movlw	13
  1283   001AE0  0100               	movlb	0	; () banked
  1284   001AE2  6FA0               	movwf	(??_main+1)& (0+255),b
  1285   001AE4  0EAF               	movlw	175
  1286   001AE6  6F9F               	movwf	??_main& (0+255),b
  1287   001AE8  0EB6               	movlw	182
  1288   001AEA                     u4647:
  1289   001AEA  2EE8               	decfsz	wreg,f,c
  1290   001AEC  D7FE               	bra	u4647
  1291   001AEE  2F9F               	decfsz	??_main& (0+255),f,b
  1292   001AF0  D7FC               	bra	u4647
  1293   001AF2  2FA0               	decfsz	(??_main+1)& (0+255),f,b
  1294   001AF4  D7FA               	bra	u4647
  1295   001AF6  0000               	nop	
  1296   001AF8  EFAB  F00B         	goto	l4714
  1297   001AFC                     l4786:
  1298   001AFC  0E00               	movlw	0
  1299   001AFE  6E1A               	movwf	___flge@ff1^0,c
  1300   001B00  0E00               	movlw	0
  1301   001B02  6E1B               	movwf	(___flge@ff1+1)^0,c
  1302   001B04  0EF0               	movlw	240
  1303   001B06  6E1C               	movwf	(___flge@ff1+2)^0,c
  1304   001B08  0E40               	movlw	64
  1305   001B0A  6E1D               	movwf	(___flge@ff1+3)^0,c
  1306   001B0C  C0D1  F01E         	movff	_volt,___flge@ff2
  1307   001B10  C0D2  F01F         	movff	_volt+1,___flge@ff2+1
  1308   001B14  C0D3  F020         	movff	_volt+2,___flge@ff2+2
  1309   001B18  C0D4  F021         	movff	_volt+3,___flge@ff2+3
  1310   001B1C  EC5B  F015         	call	___flge	;wreg free
  1311   001B20  B0D8               	btfsc	status,0,c
  1312   001B22  EF95  F00D         	goto	u4581
  1313   001B26  EF97  F00D         	goto	u4580
  1314   001B2A                     u4581:
  1315   001B2A  EFAB  F00B         	goto	l4714
  1316   001B2E                     u4580:
  1317   001B2E                     
  1318                           ;ADC_main.c: 96:             if(PORTBbits.RB4==1){
  1319   001B2E  A881               	btfss	129,4,c	;volatile
  1320   001B30  EF9C  F00D         	goto	u4591
  1321   001B34  EF9E  F00D         	goto	u4590
  1322   001B38                     u4591:
  1323   001B38  EFD8  F00D         	goto	l68
  1324   001B3C                     u4590:
  1325   001B3C                     
  1326                           ;ADC_main.c: 97:            LATBbits.LATB6=0;
  1327   001B3C  9C8A               	bcf	138,6,c	;volatile
  1328   001B3E                     
  1329                           ;ADC_main.c: 98:             _delay((unsigned long)((100)*(20000000/4000.0)));
  1330   001B3E  0E03               	movlw	3
  1331   001B40  0100               	movlb	0	; () banked
  1332   001B42  6FA0               	movwf	(??_main+1)& (0+255),b
  1333   001B44  0E8A               	movlw	138
  1334   001B46  6F9F               	movwf	??_main& (0+255),b
  1335   001B48  0E55               	movlw	85
  1336   001B4A                     u4657:
  1337   001B4A  2EE8               	decfsz	wreg,f,c
  1338   001B4C  D7FE               	bra	u4657
  1339   001B4E  2F9F               	decfsz	??_main& (0+255),f,b
  1340   001B50  D7FC               	bra	u4657
  1341   001B52  2FA0               	decfsz	(??_main+1)& (0+255),f,b
  1342   001B54  D7FA               	bra	u4657
  1343   001B56  D000               	nop2	
  1344   001B58                     
  1345                           ;ADC_main.c: 99:            LATAbits.LATA1=1;
  1346   001B58  8289               	bsf	137,1,c	;volatile
  1347   001B5A                     
  1348                           ;ADC_main.c: 100:            XLCDgotoXY(0,11);
  1349   001B5A  0E00               	movlw	0
  1350   001B5C  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
  1351   001B5E  0E00               	movlw	0
  1352   001B60  6E02               	movwf	XLCDgotoXY@x^0,c
  1353   001B62  0E00               	movlw	0
  1354   001B64  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
  1355   001B66  0E0B               	movlw	11
  1356   001B68  6E04               	movwf	XLCDgotoXY@y^0,c
  1357   001B6A  ECA6  F019         	call	_XLCDgotoXY	;wreg free
  1358   001B6E                     
  1359                           ;ADC_main.c: 101:     putrsXLCD("B1 OF");
  1360   001B6E  0E0B               	movlw	low STR_5
  1361   001B70  6E02               	movwf	putrsXLCD@buffer^0,c
  1362   001B72  EC8C  F019         	call	_putrsXLCD	;wreg free
  1363   001B76                     
  1364                           ;ADC_main.c: 102:      XLCDgotoXY(1,11);
  1365   001B76  0E00               	movlw	0
  1366   001B78  6E03               	movwf	(XLCDgotoXY@x+1)^0,c
  1367   001B7A  0E01               	movlw	1
  1368   001B7C  6E02               	movwf	XLCDgotoXY@x^0,c
  1369   001B7E  0E00               	movlw	0
  1370   001B80  6E05               	movwf	(XLCDgotoXY@y+1)^0,c
  1371   001B82  0E0B               	movlw	11
  1372   001B84  6E04               	movwf	XLCDgotoXY@y^0,c
  1373   001B86  ECA6  F019         	call	_XLCDgotoXY	;wreg free
  1374   001B8A                     
  1375                           ;ADC_main.c: 103:       putrsXLCD("B2 ON");
  1376   001B8A  0E1D               	movlw	low STR_8
  1377   001B8C  6E02               	movwf	putrsXLCD@buffer^0,c
  1378   001B8E  EC8C  F019         	call	_putrsXLCD	;wreg free
  1379                           
  1380                           ;ADC_main.c: 104:       _delay((unsigned long)((500)*(20000000/4000.0)));}
  1381   001B92  0E0D               	movlw	13
  1382   001B94  0100               	movlb	0	; () banked
  1383   001B96  6FA0               	movwf	(??_main+1)& (0+255),b
  1384   001B98  0EAF               	movlw	175
  1385   001B9A  6F9F               	movwf	??_main& (0+255),b
  1386   001B9C  0EB6               	movlw	182
  1387   001B9E                     u4667:
  1388   001B9E  2EE8               	decfsz	wreg,f,c
  1389   001BA0  D7FE               	bra	u4667
  1390   001BA2  2F9F               	decfsz	??_main& (0+255),f,b
  1391   001BA4  D7FC               	bra	u4667
  1392   001BA6  2FA0               	decfsz	(??_main+1)& (0+255),f,b
  1393   001BA8  D7FA               	bra	u4667
  1394   001BAA  0000               	nop	
  1395   001BAC  EFAB  F00B         	goto	l4714
  1396   001BB0                     l68:
  1397   001BB0  EFAB  F00B         	goto	l4714
  1398   001BB4  EF00  F000         	goto	start
  1399   001BB8                     __end_of_main:
  1400                           	callstack 0
  1401                           
  1402 ;; *************** function _sprintf *****************
  1403 ;; Defined at:
  1404 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  s               1   44[BANK0 ] PTR unsigned char 
  1407 ;;		 -> main@string_volt(40), 
  1408 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1409 ;;		 -> STR_2(6), 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  f              12   51[BANK0 ] struct _IO_FILE
  1412 ;;  ret             2    0        int 
  1413 ;;  ap              1   50[BANK0 ] PTR void [1]
  1414 ;;		 -> ?_sprintf(2), 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  2   44[BANK0 ] int 
  1417 ;; Registers used:
  1418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1424 ;;      Params:         0       6       0       0       0       0       0       0       0
  1425 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1427 ;;      Totals:         0      19       0       0       0       0       0       0       0
  1428 ;;Total ram usage:       19 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 7
  1431 ;; This function calls:
  1432 ;;		_vfprintf
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text1
  1439   0032A8                     __ptext1:
  1440                           	callstack 0
  1441   0032A8                     _sprintf:
  1442                           	callstack 23
  1443   0032A8  0E8E               	movlw	low (?_sprintf+2)
  1444   0032AA  0100               	movlb	0	; () banked
  1445   0032AC  6F92               	movwf	sprintf@ap& (0+255),b
  1446   0032AE  C08C  F093         	movff	sprintf@s,sprintf@f
  1447   0032B2                     
  1448                           ; BSR set to: 0
  1449   0032B2  0E00               	movlw	0
  1450   0032B4  6F97               	movwf	(sprintf@f+4)& (0+255),b
  1451   0032B6  0E00               	movlw	0
  1452   0032B8  6F96               	movwf	(sprintf@f+3)& (0+255),b
  1453   0032BA                     
  1454                           ; BSR set to: 0
  1455   0032BA  0E00               	movlw	0
  1456   0032BC  6F9E               	movwf	(sprintf@f+11)& (0+255),b
  1457   0032BE  0E00               	movlw	0
  1458   0032C0  6F9D               	movwf	(sprintf@f+10)& (0+255),b
  1459   0032C2                     
  1460                           ; BSR set to: 0
  1461   0032C2  0E93               	movlw	low sprintf@f
  1462   0032C4  6E5B               	movwf	vfprintf@fp^0,c
  1463   0032C6  C08D  F05C         	movff	sprintf@fmt,vfprintf@fmt
  1464   0032CA  0E92               	movlw	low sprintf@ap
  1465   0032CC  6E5D               	movwf	vfprintf@ap^0,c
  1466   0032CE  EC18  F019         	call	_vfprintf	;wreg free
  1467   0032D2  0100               	movlb	0	; () banked
  1468   0032D4  518C               	movf	sprintf@s& (0+255),w,b
  1469   0032D6  2596               	addwf	(sprintf@f+3)& (0+255),w,b
  1470   0032D8  6ED9               	movwf	fsr2l,c
  1471   0032DA  6ADA               	clrf	fsr2h,c
  1472   0032DC  6ADF               	clrf	indf2,c
  1473   0032DE                     
  1474                           ; BSR set to: 0
  1475   0032DE  0012               	return		;funcret
  1476   0032E0                     __end_of_sprintf:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _vfprintf *****************
  1480 ;; Defined at:
  1481 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  fp              1   90[COMRAM] PTR struct _IO_FILE
  1484 ;;		 -> sprintf@f(12), 
  1485 ;;  fmt             1   91[COMRAM] PTR const unsigned char 
  1486 ;;		 -> STR_2(6), 
  1487 ;;  ap              1   92[COMRAM] PTR PTR void 
  1488 ;;		 -> sprintf@ap(1), 
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;  cfmt            1   93[COMRAM] PTR unsigned char 
  1491 ;;		 -> STR_2(6), 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2   90[COMRAM] int 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1501 ;;      Params:         3       0       0       0       0       0       0       0       0
  1502 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1504 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1505 ;;Total ram usage:        4 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; Hardware stack levels required when called: 6
  1508 ;; This function calls:
  1509 ;;		_vfpfcnvrt
  1510 ;; This function is called by:
  1511 ;;		_sprintf
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text2
  1516   003230                     __ptext2:
  1517                           	callstack 0
  1518   003230                     _vfprintf:
  1519                           	callstack 23
  1520   003230                     
  1521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1522   003230  C05C  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1525   003234  EF24  F019         	goto	l4690
  1526   003238                     l4688:
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1529   003238  C05B  F04F         	movff	vfprintf@fp,vfpfcnvrt@fp
  1530   00323C  0E5E               	movlw	low vfprintf@cfmt
  1531   00323E  6E50               	movwf	vfpfcnvrt@fmt^0,c
  1532   003240  C05D  F051         	movff	vfprintf@ap,vfpfcnvrt@ap
  1533   003244  ECBE  F011         	call	_vfpfcnvrt	;wreg free
  1534   003248                     l4690:
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1537   003248  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  1538   00324C                     	if	1	;There is more than 1 active tblptr byte
  1539   00324C  0E08               	movlw	high __smallconst
  1540   00324E  6EF7               	movwf	tblptrh,c
  1541   003250                     	endif
  1542   003250                     	if	0	;tblptru may be non-zero
  1543   003250                     	endif
  1544   003250                     	if	0	;tblptru may be non-zero
  1545   003250                     	endif
  1546   003250  0008               	tblrd		*
  1547   003252  50F5               	movf	tablat,w,c
  1548   003254  0900               	iorlw	0
  1549   003256  A4D8               	btfss	status,2,c
  1550   003258  EF30  F019         	goto	u4471
  1551   00325C  EF32  F019         	goto	u4470
  1552   003260                     u4471:
  1553   003260  EF1C  F019         	goto	l4688
  1554   003264                     u4470:
  1555   003264                     
  1556                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1557   003264  0E00               	movlw	0
  1558   003266  6E5C               	movwf	(?_vfprintf+1)^0,c
  1559   003268  0E00               	movlw	0
  1560   00326A  6E5B               	movwf	?_vfprintf^0,c
  1561   00326C  0012               	return		;funcret
  1562   00326E                     __end_of_vfprintf:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _vfpfcnvrt *****************
  1566 ;; Defined at:
  1567 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  fp              1   78[COMRAM] PTR struct _IO_FILE
  1570 ;;		 -> sprintf@f(12), 
  1571 ;;  fmt             1   79[COMRAM] PTR PTR unsigned char 
  1572 ;;		 -> vfprintf@cfmt(1), 
  1573 ;;  ap              1   80[COMRAM] PTR PTR void 
  1574 ;;		 -> sprintf@ap(1), 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  convarg         4   83[COMRAM] struct .
  1577 ;;  cp              1   89[COMRAM] PTR unsigned char 
  1578 ;;		 -> STR_2(6), 
  1579 ;;  c               1   88[COMRAM] unsigned char 
  1580 ;;  done            1   87[COMRAM] _Bool 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1590 ;;      Params:         3       0       0       0       0       0       0       0       0
  1591 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1592 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1593 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1594 ;;Total ram usage:       12 bytes
  1595 ;; Hardware stack levels used: 1
  1596 ;; Hardware stack levels required when called: 5
  1597 ;; This function calls:
  1598 ;;		_efgtoa
  1599 ;;		_fputc
  1600 ;;		_read_prec_or_width
  1601 ;; This function is called by:
  1602 ;;		_vfprintf
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text3
  1607   00237C                     __ptext3:
  1608                           	callstack 0
  1609   00237C                     _vfpfcnvrt:
  1610                           	callstack 23
  1611   00237C                     
  1612                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1613   00237C  5050               	movf	vfpfcnvrt@fmt^0,w,c
  1614   00237E  6ED9               	movwf	fsr2l,c
  1615   002380  6ADA               	clrf	fsr2h,c
  1616   002382  CFDF FFF6          	movff	indf2,tblptrl
  1617   002386                     	if	1	;There is more than 1 active tblptr byte
  1618   002386  0E08               	movlw	high __smallconst
  1619   002388  6EF7               	movwf	tblptrh,c
  1620   00238A                     	endif
  1621   00238A                     	if	0	;tblptru may be non-zero
  1622   00238A                     	endif
  1623   00238A                     	if	0	;tblptru may be non-zero
  1624   00238A                     	endif
  1625   00238A  0008               	tblrd		*
  1626   00238C  50F5               	movf	tablat,w,c
  1627   00238E  0A25               	xorlw	37
  1628   002390  A4D8               	btfss	status,2,c
  1629   002392  EFCD  F011         	goto	u4431
  1630   002396  EFCF  F011         	goto	u4430
  1631   00239A                     u4431:
  1632   00239A  EFE3  F012         	goto	l4664
  1633   00239E                     u4430:
  1634   00239E                     
  1635                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1636   00239E  5050               	movf	vfpfcnvrt@fmt^0,w,c
  1637   0023A0  6ED9               	movwf	fsr2l,c
  1638   0023A2  6ADA               	clrf	fsr2h,c
  1639   0023A4  2ADF               	incf	indf2,f,c
  1640   0023A6                     
  1641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1642   0023A6  0E00               	movlw	0
  1643   0023A8  0100               	movlb	0	; () banked
  1644   0023AA  6FD6               	movwf	(_width+1)& (0+255),b
  1645   0023AC  0E00               	movlw	0
  1646   0023AE  6FD5               	movwf	_width& (0+255),b
  1647   0023B0  C0D5  F0DF         	movff	_width,_flags
  1648   0023B4                     
  1649                           ; BSR set to: 0
  1650                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1651   0023B4  69D7               	setf	_prec& (0+255),b
  1652   0023B6  69D8               	setf	(_prec+1)& (0+255),b
  1653   0023B8                     
  1654                           ; BSR set to: 0
  1655                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1656   0023B8  0E00               	movlw	0
  1657   0023BA  6E58               	movwf	vfpfcnvrt@done^0,c
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1660   0023BC  EF05  F012         	goto	l4618
  1661   0023C0                     l4608:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1664   0023C0  0100               	movlb	0	; () banked
  1665   0023C2  83DF               	bsf	_flags& (0+255),1,b
  1666   0023C4                     
  1667                           ; BSR set to: 0
  1668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1669   0023C4  5050               	movf	vfpfcnvrt@fmt^0,w,c
  1670   0023C6  6ED9               	movwf	fsr2l,c
  1671   0023C8  6ADA               	clrf	fsr2h,c
  1672   0023CA  2ADF               	incf	indf2,f,c
  1673                           
  1674                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1675   0023CC  EF05  F012         	goto	l4618
  1676   0023D0                     l4612:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1679   0023D0  0E01               	movlw	1
  1680   0023D2  6E58               	movwf	vfpfcnvrt@done^0,c
  1681                           
  1682                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1683   0023D4  EF05  F012         	goto	l4618
  1684   0023D8                     l4616:
  1685   0023D8  5050               	movf	vfpfcnvrt@fmt^0,w,c
  1686   0023DA  6ED9               	movwf	fsr2l,c
  1687   0023DC  6ADA               	clrf	fsr2h,c
  1688   0023DE  CFDF FFF6          	movff	indf2,tblptrl
  1689   0023E2                     	if	1	;There is more than 1 active tblptr byte
  1690   0023E2  0E08               	movlw	high __smallconst
  1691   0023E4  6EF7               	movwf	tblptrh,c
  1692   0023E6                     	endif
  1693   0023E6                     	if	0	;tblptru may be non-zero
  1694   0023E6                     	endif
  1695   0023E6                     	if	0	;tblptru may be non-zero
  1696   0023E6                     	endif
  1697   0023E6  0008               	tblrd		*
  1698   0023E8  50F5               	movf	tablat,w,c
  1699   0023EA  6E52               	movwf	??_vfpfcnvrt^0,c
  1700   0023EC  6A53               	clrf	(??_vfpfcnvrt+1)^0,c
  1701                           
  1702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1703                           ; Switch size 1, requested type "simple"
  1704                           ; Number of cases is 1, Range of values is 0 to 0
  1705                           ; switch strategies available:
  1706                           ; Name         Instructions Cycles
  1707                           ; simple_byte            4     3 (average)
  1708                           ;	Chosen strategy is simple_byte
  1709   0023EE  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  1710   0023F0  0A00               	xorlw	0	; case 0
  1711   0023F2  B4D8               	btfsc	status,2,c
  1712   0023F4  EFFE  F011         	goto	l4884
  1713   0023F8  EFE8  F011         	goto	l4612
  1714   0023FC                     l4884:
  1715                           
  1716                           ; Switch size 1, requested type "simple"
  1717                           ; Number of cases is 1, Range of values is 48 to 48
  1718                           ; switch strategies available:
  1719                           ; Name         Instructions Cycles
  1720                           ; simple_byte            4     3 (average)
  1721                           ;	Chosen strategy is simple_byte
  1722   0023FC  5052               	movf	??_vfpfcnvrt^0,w,c
  1723   0023FE  0A30               	xorlw	48	; case 48
  1724   002400  B4D8               	btfsc	status,2,c
  1725   002402  EFE0  F011         	goto	l4608
  1726   002406  EFE8  F011         	goto	l4612
  1727   00240A                     l4618:
  1728                           
  1729                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1730   00240A  5058               	movf	vfpfcnvrt@done^0,w,c
  1731   00240C  B4D8               	btfsc	status,2,c
  1732   00240E  EF0B  F012         	goto	u4441
  1733   002412  EF0D  F012         	goto	u4440
  1734   002416                     u4441:
  1735   002416  EFEC  F011         	goto	l4616
  1736   00241A                     u4440:
  1737   00241A                     
  1738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1739   00241A  5050               	movf	vfpfcnvrt@fmt^0,w,c
  1740   00241C  6ED9               	movwf	fsr2l,c
  1741   00241E  6ADA               	clrf	fsr2h,c
  1742   002420  CFDF FFF6          	movff	indf2,tblptrl
  1743   002424                     	if	1	;There is more than 1 active tblptr byte
  1744   002424  0E08               	movlw	high __smallconst
  1745   002426  6EF7               	movwf	tblptrh,c
  1746   002428                     	endif
  1747   002428                     	if	0	;tblptru may be non-zero
  1748   002428                     	endif
  1749   002428                     	if	0	;tblptru may be non-zero
  1750   002428                     	endif
  1751   002428  0008               	tblrd		*
  1752   00242A  50F5               	movf	tablat,w,c
  1753   00242C  0A2E               	xorlw	46
  1754   00242E  A4D8               	btfss	status,2,c
  1755   002430  EF1C  F012         	goto	u4451
  1756   002434  EF1E  F012         	goto	u4450
  1757   002438                     u4451:
  1758   002438  EF2C  F012         	goto	l4626
  1759   00243C                     u4450:
  1760   00243C                     
  1761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1762   00243C  5050               	movf	vfpfcnvrt@fmt^0,w,c
  1763   00243E  6ED9               	movwf	fsr2l,c
  1764   002440  6ADA               	clrf	fsr2h,c
  1765   002442  2ADF               	incf	indf2,f,c
  1766   002444                     
  1767                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1768   002444  C050  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1769   002448  C051  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1770   00244C  EC06  F017         	call	_read_prec_or_width	;wreg free
  1771   002450  C007  F0D7         	movff	?_read_prec_or_width,_prec
  1772   002454  C008  F0D8         	movff	?_read_prec_or_width+1,_prec+1
  1773   002458                     l4626:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1776   002458  5050               	movf	vfpfcnvrt@fmt^0,w,c
  1777   00245A  6ED9               	movwf	fsr2l,c
  1778   00245C  6ADA               	clrf	fsr2h,c
  1779   00245E  50DF               	movf	indf2,w,c
  1780   002460  6E5A               	movwf	vfpfcnvrt@cp^0,c
  1781   002462                     
  1782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1783   002462  C05A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1784   002466                     	if	1	;There is more than 1 active tblptr byte
  1785   002466  0E08               	movlw	high __smallconst
  1786   002468  6EF7               	movwf	tblptrh,c
  1787   00246A                     	endif
  1788   00246A                     	if	0	;tblptru may be non-zero
  1789   00246A                     	endif
  1790   00246A                     	if	0	;tblptru may be non-zero
  1791   00246A                     	endif
  1792   00246A  0008               	tblrd		*
  1793   00246C  CFF5 F059          	movff	tablat,vfpfcnvrt@c
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1796   002470  EF45  F012         	goto	l4638
  1797   002474                     l4630:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  1800   002474  2A5A               	incf	vfpfcnvrt@cp^0,f,c
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  1803   002476  EF5E  F012         	goto	l4640
  1804   00247A                     l4632:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  1807   00247A  0E6C               	movlw	108
  1808   00247C  6E59               	movwf	vfpfcnvrt@c^0,c
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  1811   00247E  EF5E  F012         	goto	l4640
  1812   002482                     l4634:
  1813                           
  1814                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  1815   002482  0E00               	movlw	0
  1816   002484  6E59               	movwf	vfpfcnvrt@c^0,c
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  1819   002486  EF5E  F012         	goto	l4640
  1820   00248A                     l4638:
  1821   00248A  5059               	movf	vfpfcnvrt@c^0,w,c
  1822   00248C  6E52               	movwf	??_vfpfcnvrt^0,c
  1823   00248E  6A53               	clrf	(??_vfpfcnvrt+1)^0,c
  1824                           
  1825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1826                           ; Switch size 1, requested type "simple"
  1827                           ; Number of cases is 1, Range of values is 0 to 0
  1828                           ; switch strategies available:
  1829                           ; Name         Instructions Cycles
  1830                           ; simple_byte            4     3 (average)
  1831                           ;	Chosen strategy is simple_byte
  1832   002490  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  1833   002492  0A00               	xorlw	0	; case 0
  1834   002494  B4D8               	btfsc	status,2,c
  1835   002496  EF4F  F012         	goto	l4886
  1836   00249A  EF41  F012         	goto	l4634
  1837   00249E                     l4886:
  1838                           
  1839                           ; Switch size 1, requested type "simple"
  1840                           ; Number of cases is 3, Range of values is 76 to 108
  1841                           ; switch strategies available:
  1842                           ; Name         Instructions Cycles
  1843                           ; simple_byte           10     6 (average)
  1844                           ;	Chosen strategy is simple_byte
  1845   00249E  5052               	movf	??_vfpfcnvrt^0,w,c
  1846   0024A0  0A4C               	xorlw	76	; case 76
  1847   0024A2  B4D8               	btfsc	status,2,c
  1848   0024A4  EF3A  F012         	goto	l4630
  1849   0024A8  0A2A               	xorlw	42	; case 102
  1850   0024AA  B4D8               	btfsc	status,2,c
  1851   0024AC  EF3D  F012         	goto	l4632
  1852   0024B0  0A0A               	xorlw	10	; case 108
  1853   0024B2  B4D8               	btfsc	status,2,c
  1854   0024B4  EF3A  F012         	goto	l4630
  1855   0024B8  EF41  F012         	goto	l4634
  1856   0024BC                     l4640:
  1857   0024BC  C05A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1858   0024C0                     	if	1	;There is more than 1 active tblptr byte
  1859   0024C0  0E08               	movlw	high __smallconst
  1860   0024C2  6EF7               	movwf	tblptrh,c
  1861   0024C4                     	endif
  1862   0024C4                     	if	0	;tblptru may be non-zero
  1863   0024C4                     	endif
  1864   0024C4                     	if	0	;tblptru may be non-zero
  1865   0024C4                     	endif
  1866   0024C4  0008               	tblrd		*
  1867   0024C6  50F5               	movf	tablat,w,c
  1868   0024C8  0A66               	xorlw	102
  1869   0024CA  A4D8               	btfss	status,2,c
  1870   0024CC  EF6A  F012         	goto	u4461
  1871   0024D0  EF6C  F012         	goto	u4460
  1872   0024D4                     u4461:
  1873   0024D4  EFDD  F012         	goto	l4660
  1874   0024D8                     u4460:
  1875   0024D8  EF96  F012         	goto	l4648
  1876   0024DC                     l4642:
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1879   0024DC  5051               	movf	vfpfcnvrt@ap^0,w,c
  1880   0024DE  6ED9               	movwf	fsr2l,c
  1881   0024E0  6ADA               	clrf	fsr2h,c
  1882   0024E2  CFDF F052          	movff	indf2,??_vfpfcnvrt
  1883   0024E6  0E04               	movlw	4
  1884   0024E8  26DF               	addwf	indf2,f,c
  1885   0024EA  5052               	movf	??_vfpfcnvrt^0,w,c
  1886   0024EC  6ED9               	movwf	fsr2l,c
  1887   0024EE  6ADA               	clrf	fsr2h,c
  1888   0024F0  CFDE F054          	movff	postinc2,vfpfcnvrt@convarg
  1889   0024F4  CFDE F055          	movff	postinc2,vfpfcnvrt@convarg+1
  1890   0024F8  CFDE F056          	movff	postinc2,vfpfcnvrt@convarg+2
  1891   0024FC  CFDE F057          	movff	postinc2,vfpfcnvrt@convarg+3
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  1894   002500  EFAB  F012         	goto	l4650
  1895   002504                     l4644:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1898   002504  5051               	movf	vfpfcnvrt@ap^0,w,c
  1899   002506  6ED9               	movwf	fsr2l,c
  1900   002508  6ADA               	clrf	fsr2h,c
  1901   00250A  CFDF F052          	movff	indf2,??_vfpfcnvrt
  1902   00250E  0E04               	movlw	4
  1903   002510  26DF               	addwf	indf2,f,c
  1904   002512  5052               	movf	??_vfpfcnvrt^0,w,c
  1905   002514  6ED9               	movwf	fsr2l,c
  1906   002516  6ADA               	clrf	fsr2h,c
  1907   002518  CFDE F054          	movff	postinc2,vfpfcnvrt@convarg
  1908   00251C  CFDE F055          	movff	postinc2,vfpfcnvrt@convarg+1
  1909   002520  CFDE F056          	movff	postinc2,vfpfcnvrt@convarg+2
  1910   002524  CFDE F057          	movff	postinc2,vfpfcnvrt@convarg+3
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  1913   002528  EFAB  F012         	goto	l4650
  1914   00252C                     l4648:
  1915   00252C  5059               	movf	vfpfcnvrt@c^0,w,c
  1916   00252E  6E52               	movwf	??_vfpfcnvrt^0,c
  1917   002530  6A53               	clrf	(??_vfpfcnvrt+1)^0,c
  1918                           
  1919                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1920                           ; Switch size 1, requested type "simple"
  1921                           ; Number of cases is 1, Range of values is 0 to 0
  1922                           ; switch strategies available:
  1923                           ; Name         Instructions Cycles
  1924                           ; simple_byte            4     3 (average)
  1925                           ;	Chosen strategy is simple_byte
  1926   002532  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  1927   002534  0A00               	xorlw	0	; case 0
  1928   002536  B4D8               	btfsc	status,2,c
  1929   002538  EFA0  F012         	goto	l4888
  1930   00253C  EFAB  F012         	goto	l4650
  1931   002540                     l4888:
  1932                           
  1933                           ; Switch size 1, requested type "simple"
  1934                           ; Number of cases is 2, Range of values is 76 to 108
  1935                           ; switch strategies available:
  1936                           ; Name         Instructions Cycles
  1937                           ; simple_byte            7     4 (average)
  1938                           ;	Chosen strategy is simple_byte
  1939   002540  5052               	movf	??_vfpfcnvrt^0,w,c
  1940   002542  0A4C               	xorlw	76	; case 76
  1941   002544  B4D8               	btfsc	status,2,c
  1942   002546  EF82  F012         	goto	l4644
  1943   00254A  0A20               	xorlw	32	; case 108
  1944   00254C  B4D8               	btfsc	status,2,c
  1945   00254E  EF6E  F012         	goto	l4642
  1946   002552  EFAB  F012         	goto	l4650
  1947   002556                     l4650:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  1950   002556  5050               	movf	vfpfcnvrt@fmt^0,w,c
  1951   002558  6ED9               	movwf	fsr2l,c
  1952   00255A  6ADA               	clrf	fsr2h,c
  1953   00255C  285A               	incf	vfpfcnvrt@cp^0,w,c
  1954   00255E  6EDF               	movwf	indf2,c
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  1957   002560  EFC7  F012         	goto	l4658
  1958   002564                     l4652:
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1961   002564  C04F  F047         	movff	vfpfcnvrt@fp,efgtoa@fp
  1962   002568  C054  F048         	movff	vfpfcnvrt@convarg,efgtoa@f
  1963   00256C  C055  F049         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1964   002570  C056  F04A         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1965   002574  C057  F04B         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1966   002578  C05A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1967   00257C                     	if	1	;There is more than 1 active tblptr byte
  1968   00257C  0E08               	movlw	high __smallconst
  1969   00257E  6EF7               	movwf	tblptrh,c
  1970   002580                     	endif
  1971   002580                     	if	0	;tblptru may be non-zero
  1972   002580                     	endif
  1973   002580                     	if	0	;tblptru may be non-zero
  1974   002580                     	endif
  1975   002580  0008               	tblrd		*
  1976   002582  CFF5 F04C          	movff	tablat,efgtoa@c
  1977   002586  EC1C  F004         	call	_efgtoa	;wreg free
  1978   00258A  EFF4  F012         	goto	l983
  1979   00258E                     l4658:
  1980   00258E  C05A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1981   002592                     	if	1	;There is more than 1 active tblptr byte
  1982   002592  0E08               	movlw	high __smallconst
  1983   002594  6EF7               	movwf	tblptrh,c
  1984   002596                     	endif
  1985   002596                     	if	0	;tblptru may be non-zero
  1986   002596                     	endif
  1987   002596                     	if	0	;tblptru may be non-zero
  1988   002596                     	endif
  1989   002596  0008               	tblrd		*
  1990   002598  50F5               	movf	tablat,w,c
  1991   00259A  6E52               	movwf	??_vfpfcnvrt^0,c
  1992   00259C  6A53               	clrf	(??_vfpfcnvrt+1)^0,c
  1993                           
  1994                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1995                           ; Switch size 1, requested type "simple"
  1996                           ; Number of cases is 1, Range of values is 0 to 0
  1997                           ; switch strategies available:
  1998                           ; Name         Instructions Cycles
  1999                           ; simple_byte            4     3 (average)
  2000                           ;	Chosen strategy is simple_byte
  2001   00259E  5053               	movf	(??_vfpfcnvrt+1)^0,w,c
  2002   0025A0  0A00               	xorlw	0	; case 0
  2003   0025A2  B4D8               	btfsc	status,2,c
  2004   0025A4  EFD6  F012         	goto	l4890
  2005   0025A8  EFDD  F012         	goto	l4660
  2006   0025AC                     l4890:
  2007                           
  2008                           ; Switch size 1, requested type "simple"
  2009                           ; Number of cases is 1, Range of values is 102 to 102
  2010                           ; switch strategies available:
  2011                           ; Name         Instructions Cycles
  2012                           ; simple_byte            4     3 (average)
  2013                           ;	Chosen strategy is simple_byte
  2014   0025AC  5052               	movf	??_vfpfcnvrt^0,w,c
  2015   0025AE  0A66               	xorlw	102	; case 102
  2016   0025B0  B4D8               	btfsc	status,2,c
  2017   0025B2  EFB2  F012         	goto	l4652
  2018   0025B6  EFDD  F012         	goto	l4660
  2019   0025BA                     l4660:
  2020                           
  2021                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2022   0025BA  5050               	movf	vfpfcnvrt@fmt^0,w,c
  2023   0025BC  6ED9               	movwf	fsr2l,c
  2024   0025BE  6ADA               	clrf	fsr2h,c
  2025   0025C0  2ADF               	incf	indf2,f,c
  2026   0025C2  EFF4  F012         	goto	l983
  2027   0025C6                     l4664:
  2028                           
  2029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2030   0025C6  5050               	movf	vfpfcnvrt@fmt^0,w,c
  2031   0025C8  6ED9               	movwf	fsr2l,c
  2032   0025CA  6ADA               	clrf	fsr2h,c
  2033   0025CC  CFDF FFF6          	movff	indf2,tblptrl
  2034   0025D0                     	if	1	;There is more than 1 active tblptr byte
  2035   0025D0  0E08               	movlw	high __smallconst
  2036   0025D2  6EF7               	movwf	tblptrh,c
  2037   0025D4                     	endif
  2038   0025D4                     	if	0	;tblptru may be non-zero
  2039   0025D4                     	endif
  2040   0025D4                     	if	0	;tblptru may be non-zero
  2041   0025D4                     	endif
  2042   0025D4  0008               	tblrd		*
  2043   0025D6  50F5               	movf	tablat,w,c
  2044   0025D8  6E01               	movwf	fputc@c^0,c
  2045   0025DA  6A02               	clrf	(fputc@c+1)^0,c
  2046   0025DC  C04F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2047   0025E0  EC5C  F016         	call	_fputc	;wreg free
  2048   0025E4  EFDD  F012         	goto	l4660
  2049   0025E8                     l983:
  2050   0025E8  0012               	return		;funcret
  2051   0025EA                     __end_of_vfpfcnvrt:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _read_prec_or_width *****************
  2055 ;; Defined at:
  2056 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2059 ;;		 -> vfprintf@cfmt(1), 
  2060 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2061 ;;		 -> sprintf@ap(1), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  c               1    8[COMRAM] unsigned char 
  2064 ;;  n               2    9[COMRAM] int 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  2    6[COMRAM] int 
  2067 ;; Registers used:
  2068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2074 ;;      Params:         2       0       0       0       0       0       0       0       0
  2075 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2077 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2078 ;;Total ram usage:        5 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 1
  2081 ;; This function calls:
  2082 ;;		___wmul
  2083 ;; This function is called by:
  2084 ;;		_vfpfcnvrt
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text4
  2089   002E0C                     __ptext4:
  2090                           	callstack 0
  2091   002E0C                     _read_prec_or_width:
  2092                           	callstack 26
  2093   002E0C                     
  2094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2095   002E0C  0E00               	movlw	0
  2096   002E0E  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2097   002E10  0E00               	movlw	0
  2098   002E12  6E0A               	movwf	read_prec_or_width@n^0,c
  2099   002E14                     
  2100                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2101   002E14  5007               	movf	read_prec_or_width@fmt^0,w,c
  2102   002E16  6ED9               	movwf	fsr2l,c
  2103   002E18  6ADA               	clrf	fsr2h,c
  2104   002E1A  CFDF FFF6          	movff	indf2,tblptrl
  2105   002E1E                     	if	1	;There is more than 1 active tblptr byte
  2106   002E1E  0E08               	movlw	high __smallconst
  2107   002E20  6EF7               	movwf	tblptrh,c
  2108   002E22                     	endif
  2109   002E22                     	if	0	;tblptru may be non-zero
  2110   002E22                     	endif
  2111   002E22                     	if	0	;tblptru may be non-zero
  2112   002E22                     	endif
  2113   002E22  0008               	tblrd		*
  2114   002E24  50F5               	movf	tablat,w,c
  2115   002E26  0A2A               	xorlw	42
  2116   002E28  A4D8               	btfss	status,2,c
  2117   002E2A  EF19  F017         	goto	u3621
  2118   002E2E  EF1B  F017         	goto	u3620
  2119   002E32                     u3621:
  2120   002E32  EF41  F017         	goto	l3662
  2121   002E36                     u3620:
  2122   002E36                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2124   002E36  5007               	movf	read_prec_or_width@fmt^0,w,c
  2125   002E38  6ED9               	movwf	fsr2l,c
  2126   002E3A  6ADA               	clrf	fsr2h,c
  2127   002E3C  2ADF               	incf	indf2,f,c
  2128   002E3E                     
  2129                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2130   002E3E  5008               	movf	read_prec_or_width@ap^0,w,c
  2131   002E40  6ED9               	movwf	fsr2l,c
  2132   002E42  6ADA               	clrf	fsr2h,c
  2133   002E44  0E02               	movlw	2
  2134   002E46  26DF               	addwf	indf2,f,c
  2135   002E48  5CDF               	subwf	indf2,w,c
  2136   002E4A  6ED9               	movwf	fsr2l,c
  2137   002E4C  6ADA               	clrf	fsr2h,c
  2138   002E4E  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  2139   002E52  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  2140                           
  2141                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2142   002E56  EF54  F017         	goto	l952
  2143   002E5A                     l3658:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2146   002E5A  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2147   002E5E  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2148   002E62  0E00               	movlw	0
  2149   002E64  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2150   002E66  0E0A               	movlw	10
  2151   002E68  6E03               	movwf	___wmul@multiplicand^0,c
  2152   002E6A  ECEA  F019         	call	___wmul	;wreg free
  2153   002E6E  5009               	movf	read_prec_or_width@c^0,w,c
  2154   002E70  2401               	addwf	?___wmul^0,w,c
  2155   002E72  6E0A               	movwf	read_prec_or_width@n^0,c
  2156   002E74  0E00               	movlw	0
  2157   002E76  2002               	addwfc	(?___wmul+1)^0,w,c
  2158   002E78  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2159   002E7A                     
  2160                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2161   002E7A  5007               	movf	read_prec_or_width@fmt^0,w,c
  2162   002E7C  6ED9               	movwf	fsr2l,c
  2163   002E7E  6ADA               	clrf	fsr2h,c
  2164   002E80  2ADF               	incf	indf2,f,c
  2165   002E82                     l3662:
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2168   002E82  5007               	movf	read_prec_or_width@fmt^0,w,c
  2169   002E84  6ED9               	movwf	fsr2l,c
  2170   002E86  6ADA               	clrf	fsr2h,c
  2171   002E88  CFDF FFF6          	movff	indf2,tblptrl
  2172   002E8C                     	if	1	;There is more than 1 active tblptr byte
  2173   002E8C  0E08               	movlw	high __smallconst
  2174   002E8E  6EF7               	movwf	tblptrh,c
  2175   002E90                     	endif
  2176   002E90                     	if	0	;tblptru may be non-zero
  2177   002E90                     	endif
  2178   002E90                     	if	0	;tblptru may be non-zero
  2179   002E90                     	endif
  2180   002E90  0008               	tblrd		*
  2181   002E92  50F5               	movf	tablat,w,c
  2182   002E94  0FD0               	addlw	208
  2183   002E96  6E09               	movwf	read_prec_or_width@c^0,c
  2184   002E98  0E09               	movlw	9
  2185   002E9A  6409               	cpfsgt	read_prec_or_width@c^0,c
  2186   002E9C  EF52  F017         	goto	u3631
  2187   002EA0  EF54  F017         	goto	u3630
  2188   002EA4                     u3631:
  2189   002EA4  EF2D  F017         	goto	l3658
  2190   002EA8                     u3630:
  2191   002EA8                     l952:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2194   002EA8  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2195   002EAC  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2196   002EB0  0012               	return		;funcret
  2197   002EB2                     __end_of_read_prec_or_width:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function ___wmul *****************
  2201 ;; Defined at:
  2202 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  multiplier      2    0[COMRAM] unsigned int 
  2205 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  product         2    4[COMRAM] unsigned int 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  2    0[COMRAM] unsigned int 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0, prodl, prodh
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2217 ;;      Params:         4       0       0       0       0       0       0       0       0
  2218 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2220 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2221 ;;Total ram usage:        6 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_read_prec_or_width
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text5
  2231   0033D4                     __ptext5:
  2232                           	callstack 0
  2233   0033D4                     ___wmul:
  2234                           	callstack 26
  2235   0033D4  5001               	movf	___wmul@multiplier^0,w,c
  2236   0033D6  0203               	mulwf	___wmul@multiplicand^0,c
  2237   0033D8  CFF3 F005          	movff	prodl,___wmul@product
  2238   0033DC  CFF4 F006          	movff	prodh,___wmul@product+1
  2239   0033E0  5001               	movf	___wmul@multiplier^0,w,c
  2240   0033E2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2241   0033E4  50F3               	movf	243,w,c
  2242   0033E6  2606               	addwf	(___wmul@product+1)^0,f,c
  2243   0033E8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2244   0033EA  0203               	mulwf	___wmul@multiplicand^0,c
  2245   0033EC  50F3               	movf	243,w,c
  2246   0033EE  2606               	addwf	(___wmul@product+1)^0,f,c
  2247   0033F0  C005  F001         	movff	___wmul@product,?___wmul
  2248   0033F4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2249   0033F8  0012               	return		;funcret
  2250   0033FA                     __end_of___wmul:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _efgtoa *****************
  2254 ;; Defined at:
  2255 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  fp              1   70[COMRAM] PTR struct _IO_FILE
  2258 ;;		 -> sprintf@f(12), 
  2259 ;;  f               4   71[COMRAM] PTR struct _IO_FILE
  2260 ;;  c               1   75[COMRAM] unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  u               4   40[BANK0 ] struct flui
  2263 ;;  g               4   34[BANK0 ] struct flui
  2264 ;;  l               4   27[BANK0 ] struct flui
  2265 ;;  h               4   23[BANK0 ] struct flui
  2266 ;;  ou              4   17[BANK0 ] struct flui
  2267 ;;  n               2   38[BANK0 ] int 
  2268 ;;  i               2   31[BANK0 ] int 
  2269 ;;  w               2   21[BANK0 ] int 
  2270 ;;  e               2   15[BANK0 ] int 
  2271 ;;  m               2   13[BANK0 ] int 
  2272 ;;  d               2   11[BANK0 ] int 
  2273 ;;  t               2    4[BANK0 ] int 
  2274 ;;  p               2    2[BANK0 ] int 
  2275 ;;  ne              2    0[BANK0 ] int 
  2276 ;;  sign            1   33[BANK0 ] unsigned char 
  2277 ;;  nmode           1   10[BANK0 ] unsigned char 
  2278 ;;  mode            1    9[BANK0 ] unsigned char 
  2279 ;;  pp              1    8[BANK0 ] unsigned char 
  2280 ;;  esign           1    0        unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2290 ;;      Params:         6       0       0       0       0       0       0       0       0
  2291 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2292 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2293 ;;      Totals:         8      44       0       0       0       0       0       0       0
  2294 ;;Total ram usage:       52 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 4
  2297 ;; This function calls:
  2298 ;;		___fladd
  2299 ;;		___fldiv
  2300 ;;		___fleq
  2301 ;;		___flge
  2302 ;;		___flmul
  2303 ;;		___flneg
  2304 ;;		___flsub
  2305 ;;		___fltol
  2306 ;;		___fpclassifyf
  2307 ;;		_floorf
  2308 ;;		_labs
  2309 ;;		_memcpy
  2310 ;;		_pad
  2311 ;;		_strcpy
  2312 ;; This function is called by:
  2313 ;;		_vfpfcnvrt
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text6
  2318   000838                     __ptext6:
  2319                           	callstack 0
  2320   000838                     _efgtoa:
  2321                           	callstack 23
  2322   000838                     
  2323                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2324   000838  0E00               	movlw	0
  2325   00083A  0100               	movlb	0	; () banked
  2326   00083C  6F81               	movwf	efgtoa@sign& (0+255),b
  2327   00083E                     
  2328                           ; BSR set to: 0
  2329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2330   00083E  C048  F082         	movff	efgtoa@f,efgtoa@g
  2331   000842  C049  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2332   000846  C04A  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2333   00084A  C04B  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2334   00084E                     
  2335                           ; BSR set to: 0
  2336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2337   00084E  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2338   000850  EF2E  F004         	goto	u4080
  2339   000854  EF2C  F004         	goto	u4081
  2340   000858                     u4081:
  2341   000858  EF42  F004         	goto	l4374
  2342   00085C                     u4080:
  2343   00085C                     
  2344                           ; BSR set to: 0
  2345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2346   00085C  0E01               	movlw	1
  2347   00085E  6F81               	movwf	efgtoa@sign& (0+255),b
  2348   000860                     
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2351   000860  C082  F001         	movff	efgtoa@g,___flneg@f1
  2352   000864  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2353   000868  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2354   00086C  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2355   000870  EC70  F019         	call	___flneg	;wreg free
  2356   000874  C001  F082         	movff	?___flneg,efgtoa@g
  2357   000878  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2358   00087C  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2359   000880  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2360   000884                     l4374:
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2363   000884  0E00               	movlw	0
  2364   000886  0100               	movlb	0	; () banked
  2365   000888  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2366   00088A  0E00               	movlw	0
  2367   00088C  6F86               	movwf	efgtoa@n& (0+255),b
  2368   00088E                     
  2369                           ; BSR set to: 0
  2370                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2371   00088E  C0D5  F075         	movff	_width,efgtoa@w
  2372   000892  C0D6  F076         	movff	_width+1,efgtoa@w+1
  2373   000896                     
  2374                           ; BSR set to: 0
  2375                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2376   000896  5181               	movf	efgtoa@sign& (0+255),w,b
  2377   000898  B4D8               	btfsc	status,2,c
  2378   00089A  EF51  F004         	goto	u4091
  2379   00089E  EF53  F004         	goto	u4090
  2380   0008A2                     u4091:
  2381   0008A2  EF67  F004         	goto	l4388
  2382   0008A6                     u4090:
  2383   0008A6                     
  2384                           ; BSR set to: 0
  2385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2386   0008A6  5181               	movf	efgtoa@sign& (0+255),w,b
  2387   0008A8  A4D8               	btfss	status,2,c
  2388   0008AA  EF59  F004         	goto	u4101
  2389   0008AE  EF5B  F004         	goto	u4100
  2390   0008B2                     u4101:
  2391   0008B2  EF61  F004         	goto	l4384
  2392   0008B6                     u4100:
  2393   0008B6                     
  2394                           ; BSR set to: 0
  2395   0008B6  0E00               	movlw	0
  2396   0008B8  6F67               	movwf	(_efgtoa$1193+1)& (0+255),b
  2397   0008BA  0E2B               	movlw	43
  2398   0008BC  6F66               	movwf	_efgtoa$1193& (0+255),b
  2399   0008BE  EF65  F004         	goto	l4386
  2400   0008C2                     l4384:
  2401                           
  2402                           ; BSR set to: 0
  2403   0008C2  0E00               	movlw	0
  2404   0008C4  6F67               	movwf	(_efgtoa$1193+1)& (0+255),b
  2405   0008C6  0E2D               	movlw	45
  2406   0008C8  6F66               	movwf	_efgtoa$1193& (0+255),b
  2407   0008CA                     l4386:
  2408                           
  2409                           ; BSR set to: 0
  2410   0008CA  C066  F081         	movff	_efgtoa$1193,efgtoa@sign
  2411   0008CE                     l4388:
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2415   0008CE  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2416   0008D2  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2417   0008D6  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2418   0008DA  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2419   0008DE  ECDD  F015         	call	___fpclassifyf	;wreg free
  2420   0008E2  0401               	decf	?___fpclassifyf^0,w,c
  2421   0008E4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2422   0008E6  A4D8               	btfss	status,2,c
  2423   0008E8  EF78  F004         	goto	u4111
  2424   0008EC  EF7A  F004         	goto	u4110
  2425   0008F0                     u4111:
  2426   0008F0  EFA9  F004         	goto	l4406
  2427   0008F4                     u4110:
  2428   0008F4                     
  2429                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2430   0008F4  0100               	movlb	0	; () banked
  2431   0008F6  5181               	movf	efgtoa@sign& (0+255),w,b
  2432   0008F8  B4D8               	btfsc	status,2,c
  2433   0008FA  EF81  F004         	goto	u4121
  2434   0008FE  EF83  F004         	goto	u4120
  2435   000902                     u4121:
  2436   000902  EF8C  F004         	goto	l4398
  2437   000906                     u4120:
  2438   000906                     
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2441   000906  C081  F100         	movff	efgtoa@sign,_dbuf
  2442   00090A                     
  2443                           ; BSR set to: 0
  2444                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2445   00090A  0775               	decf	efgtoa@w& (0+255),f,b
  2446   00090C  A0D8               	btfss	status,0,c
  2447   00090E  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  2448   000910                     
  2449                           ; BSR set to: 0
  2450                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2451   000910  0E00               	movlw	0
  2452   000912  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2453   000914  0E01               	movlw	1
  2454   000916  6F86               	movwf	efgtoa@n& (0+255),b
  2455   000918                     l4398:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2459   000918  0E00               	movlw	low _dbuf
  2460   00091A  2586               	addwf	efgtoa@n& (0+255),w,b
  2461   00091C  6E01               	movwf	strcpy@dest^0,c
  2462   00091E  0E01               	movlw	high _dbuf
  2463   000920  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2464   000922  6E02               	movwf	(strcpy@dest+1)^0,c
  2465   000924  0E2E               	movlw	low STR_13
  2466   000926  6E03               	movwf	strcpy@src^0,c
  2467   000928  EC37  F019         	call	_strcpy	;wreg free
  2468   00092C                     l4400:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2471   00092C  0100               	movlb	0	; () banked
  2472   00092E  0EFD               	movlw	253
  2473   000930  2775               	addwf	efgtoa@w& (0+255),f,b
  2474   000932  0EFF               	movlw	255
  2475   000934  2376               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2476   000936                     
  2477                           ; BSR set to: 0
  2478                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2479   000936  C047  F00F         	movff	efgtoa@fp,pad@fp
  2480   00093A  0E00               	movlw	low _dbuf
  2481   00093C  6E10               	movwf	pad@buf^0,c
  2482   00093E  0E01               	movlw	high _dbuf
  2483   000940  6E11               	movwf	(pad@buf+1)^0,c
  2484   000942  C075  F012         	movff	efgtoa@w,pad@p
  2485   000946  C076  F013         	movff	efgtoa@w+1,pad@p+1
  2486   00094A  ECD4  F017         	call	_pad	;wreg free
  2487   00094E  EF44  F009         	goto	l901
  2488   000952                     l4406:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2491   000952  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2492   000956  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2493   00095A  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2494   00095E  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2495   000962  ECDD  F015         	call	___fpclassifyf	;wreg free
  2496   000966  5001               	movf	?___fpclassifyf^0,w,c
  2497   000968  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2498   00096A  A4D8               	btfss	status,2,c
  2499   00096C  EFBA  F004         	goto	u4131
  2500   000970  EFBC  F004         	goto	u4130
  2501   000974                     u4131:
  2502   000974  EFDA  F004         	goto	l4424
  2503   000978                     u4130:
  2504   000978                     
  2505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2506   000978  0100               	movlb	0	; () banked
  2507   00097A  5181               	movf	efgtoa@sign& (0+255),w,b
  2508   00097C  B4D8               	btfsc	status,2,c
  2509   00097E  EFC3  F004         	goto	u4141
  2510   000982  EFC5  F004         	goto	u4140
  2511   000986                     u4141:
  2512   000986  EFCE  F004         	goto	l4416
  2513   00098A                     u4140:
  2514   00098A                     
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2517   00098A  C081  F100         	movff	efgtoa@sign,_dbuf
  2518   00098E                     
  2519                           ; BSR set to: 0
  2520                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2521   00098E  0775               	decf	efgtoa@w& (0+255),f,b
  2522   000990  A0D8               	btfss	status,0,c
  2523   000992  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  2524   000994                     
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2527   000994  0E00               	movlw	0
  2528   000996  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2529   000998  0E01               	movlw	1
  2530   00099A  6F86               	movwf	efgtoa@n& (0+255),b
  2531   00099C                     l4416:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2535   00099C  0E00               	movlw	low _dbuf
  2536   00099E  2586               	addwf	efgtoa@n& (0+255),w,b
  2537   0009A0  6E01               	movwf	strcpy@dest^0,c
  2538   0009A2  0E01               	movlw	high _dbuf
  2539   0009A4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2540   0009A6  6E02               	movwf	(strcpy@dest+1)^0,c
  2541   0009A8  0E32               	movlw	low STR_16
  2542   0009AA  6E03               	movwf	strcpy@src^0,c
  2543   0009AC  EC37  F019         	call	_strcpy	;wreg free
  2544   0009B0  EF96  F004         	goto	l4400
  2545   0009B4                     l4424:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2548   0009B4  0E00               	movlw	0
  2549   0009B6  0100               	movlb	0	; () banked
  2550   0009B8  6F88               	movwf	efgtoa@u& (0+255),b
  2551   0009BA  0E00               	movlw	0
  2552   0009BC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2553   0009BE  0E80               	movlw	128
  2554   0009C0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2555   0009C2  0E3F               	movlw	63
  2556   0009C4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2559   0009C6  0E00               	movlw	0
  2560   0009C8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2561   0009CA  0E00               	movlw	0
  2562   0009CC  6F6F               	movwf	efgtoa@e& (0+255),b
  2563   0009CE                     
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2566   0009CE  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2567   0009D2  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2568   0009D6  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2569   0009DA  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2570   0009DE  0E00               	movlw	0
  2571   0009E0  6E05               	movwf	___fleq@ff2^0,c
  2572   0009E2  0E00               	movlw	0
  2573   0009E4  6E06               	movwf	(___fleq@ff2+1)^0,c
  2574   0009E6  0E00               	movlw	0
  2575   0009E8  6E07               	movwf	(___fleq@ff2+2)^0,c
  2576   0009EA  0E00               	movlw	0
  2577   0009EC  6E08               	movwf	(___fleq@ff2+3)^0,c
  2578   0009EE  ECB1  F016         	call	___fleq	;wreg free
  2579   0009F2  B0D8               	btfsc	status,0,c
  2580   0009F4  EFFE  F004         	goto	u4151
  2581   0009F8  EF00  F005         	goto	u4150
  2582   0009FC                     u4151:
  2583   0009FC  EFDF  F005         	goto	l904
  2584   000A00                     u4150:
  2585   000A00  EF0D  F005         	goto	l4432
  2586   000A04                     l906:
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2589   000A04  C071  F088         	movff	efgtoa@ou,efgtoa@u
  2590   000A08  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2591   000A0C  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2592   000A10  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2593   000A14                     
  2594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2595   000A14  0100               	movlb	0	; () banked
  2596   000A16  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2597   000A18  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2598   000A1A                     l4432:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2601   000A1A  C088  F001         	movff	efgtoa@u,___flmul@b
  2602   000A1E  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2603   000A22  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2604   000A26  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  2605   000A2A  0E00               	movlw	0
  2606   000A2C  6E05               	movwf	___flmul@a^0,c
  2607   000A2E  0E00               	movlw	0
  2608   000A30  6E06               	movwf	(___flmul@a+1)^0,c
  2609   000A32  0E20               	movlw	32
  2610   000A34  6E07               	movwf	(___flmul@a+2)^0,c
  2611   000A36  0E41               	movlw	65
  2612   000A38  6E08               	movwf	(___flmul@a+3)^0,c
  2613   000A3A  ECDC  F00D         	call	___flmul	;wreg free
  2614   000A3E  C001  F071         	movff	?___flmul,efgtoa@ou
  2615   000A42  C002  F072         	movff	?___flmul+1,efgtoa@ou+1
  2616   000A46  C003  F073         	movff	?___flmul+2,efgtoa@ou+2
  2617   000A4A  C004  F074         	movff	?___flmul+3,efgtoa@ou+3
  2618   000A4E  0100               	movlb	0	; () banked
  2619   000A50  5171               	movf	efgtoa@ou& (0+255),w,b
  2620   000A52  5D82               	subwf	efgtoa@g& (0+255),w,b
  2621   000A54  6E01               	movwf	labs@a^0,c
  2622   000A56  5172               	movf	(efgtoa@ou+1)& (0+255),w,b
  2623   000A58  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2624   000A5A  6E02               	movwf	(labs@a+1)^0,c
  2625   000A5C  5173               	movf	(efgtoa@ou+2)& (0+255),w,b
  2626   000A5E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2627   000A60  6E03               	movwf	(labs@a+2)^0,c
  2628   000A62  5174               	movf	(efgtoa@ou+3)& (0+255),w,b
  2629   000A64  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2630   000A66  6E04               	movwf	(labs@a+3)^0,c
  2631   000A68  EC34  F018         	call	_labs	;wreg free
  2632   000A6C  BE04               	btfsc	(?_labs+3)^0,7,c
  2633   000A6E  EF44  F005         	goto	u4161
  2634   000A72  5004               	movf	(?_labs+3)^0,w,c
  2635   000A74  1003               	iorwf	(?_labs+2)^0,w,c
  2636   000A76  1002               	iorwf	(?_labs+1)^0,w,c
  2637   000A78  E109               	bnz	u4160
  2638   000A7A  0E02               	movlw	2
  2639   000A7C  5C01               	subwf	?_labs^0,w,c
  2640   000A7E  A0D8               	btfss	status,0,c
  2641   000A80  EF44  F005         	goto	u4161
  2642   000A84  EF46  F005         	goto	u4160
  2643   000A88                     u4161:
  2644   000A88  EF02  F005         	goto	l906
  2645   000A8C                     u4160:
  2646   000A8C  C071  F01A         	movff	efgtoa@ou,___flge@ff1
  2647   000A90  C072  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  2648   000A94  C073  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  2649   000A98  C074  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  2650   000A9C  C082  F01E         	movff	efgtoa@g,___flge@ff2
  2651   000AA0  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  2652   000AA4  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  2653   000AA8  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  2654   000AAC  EC5B  F015         	call	___flge	;wreg free
  2655   000AB0  A0D8               	btfss	status,0,c
  2656   000AB2  EF5D  F005         	goto	u4171
  2657   000AB6  EF5F  F005         	goto	u4170
  2658   000ABA                     u4171:
  2659   000ABA  EF02  F005         	goto	l906
  2660   000ABE                     u4170:
  2661   000ABE                     
  2662                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2663   000ABE  0100               	movlb	0	; () banked
  2664   000AC0  5188               	movf	efgtoa@u& (0+255),w,b
  2665   000AC2  5D82               	subwf	efgtoa@g& (0+255),w,b
  2666   000AC4  6E01               	movwf	labs@a^0,c
  2667   000AC6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2668   000AC8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2669   000ACA  6E02               	movwf	(labs@a+1)^0,c
  2670   000ACC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2671   000ACE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2672   000AD0  6E03               	movwf	(labs@a+2)^0,c
  2673   000AD2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2674   000AD4  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2675   000AD6  6E04               	movwf	(labs@a+3)^0,c
  2676   000AD8  EC34  F018         	call	_labs	;wreg free
  2677   000ADC  BE04               	btfsc	(?_labs+3)^0,7,c
  2678   000ADE  EF7E  F005         	goto	u4180
  2679   000AE2  5004               	movf	(?_labs+3)^0,w,c
  2680   000AE4  1003               	iorwf	(?_labs+2)^0,w,c
  2681   000AE6  1002               	iorwf	(?_labs+1)^0,w,c
  2682   000AE8  E107               	bnz	u4181
  2683   000AEA  0E02               	movlw	2
  2684   000AEC  5C01               	subwf	?_labs^0,w,c
  2685   000AEE  B0D8               	btfsc	status,0,c
  2686   000AF0  EF7C  F005         	goto	u4181
  2687   000AF4  EF7E  F005         	goto	u4180
  2688   000AF8                     u4181:
  2689   000AF8  EFC6  F005         	goto	l4450
  2690   000AFC                     u4180:
  2691   000AFC                     l4440:
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2694   000AFC  C088  F082         	movff	efgtoa@u,efgtoa@g
  2695   000B00  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2696   000B04  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2697   000B08  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  2700   000B0C  EFDF  F005         	goto	l904
  2701   000B10                     l4442:
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2704   000B10  C088  F01A         	movff	efgtoa@u,___fldiv@b
  2705   000B14  C089  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  2706   000B18  C08A  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  2707   000B1C  C08B  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  2708   000B20  0E00               	movlw	0
  2709   000B22  6E1E               	movwf	___fldiv@a^0,c
  2710   000B24  0E00               	movlw	0
  2711   000B26  6E1F               	movwf	(___fldiv@a+1)^0,c
  2712   000B28  0E20               	movlw	32
  2713   000B2A  6E20               	movwf	(___fldiv@a+2)^0,c
  2714   000B2C  0E41               	movlw	65
  2715   000B2E  6E21               	movwf	(___fldiv@a+3)^0,c
  2716   000B30  ECF1  F00F         	call	___fldiv	;wreg free
  2717   000B34  C01A  F088         	movff	?___fldiv,efgtoa@u
  2718   000B38  C01B  F089         	movff	?___fldiv+1,efgtoa@u+1
  2719   000B3C  C01C  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2720   000B40  C01D  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2721   000B44                     
  2722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  2723   000B44  0100               	movlb	0	; () banked
  2724   000B46  076F               	decf	efgtoa@e& (0+255),f,b
  2725   000B48  A0D8               	btfss	status,0,c
  2726   000B4A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2727   000B4C                     
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2730   000B4C  5188               	movf	efgtoa@u& (0+255),w,b
  2731   000B4E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2732   000B50  6E01               	movwf	labs@a^0,c
  2733   000B52  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2734   000B54  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2735   000B56  6E02               	movwf	(labs@a+1)^0,c
  2736   000B58  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2737   000B5A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2738   000B5C  6E03               	movwf	(labs@a+2)^0,c
  2739   000B5E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2740   000B60  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2741   000B62  6E04               	movwf	(labs@a+3)^0,c
  2742   000B64  EC34  F018         	call	_labs	;wreg free
  2743   000B68  BE04               	btfsc	(?_labs+3)^0,7,c
  2744   000B6A  EFC4  F005         	goto	u4190
  2745   000B6E  5004               	movf	(?_labs+3)^0,w,c
  2746   000B70  1003               	iorwf	(?_labs+2)^0,w,c
  2747   000B72  1002               	iorwf	(?_labs+1)^0,w,c
  2748   000B74  E107               	bnz	u4191
  2749   000B76  0E02               	movlw	2
  2750   000B78  5C01               	subwf	?_labs^0,w,c
  2751   000B7A  B0D8               	btfsc	status,0,c
  2752   000B7C  EFC2  F005         	goto	u4191
  2753   000B80  EFC4  F005         	goto	u4190
  2754   000B84                     u4191:
  2755   000B84  EFC6  F005         	goto	l4450
  2756   000B88                     u4190:
  2757   000B88  EF7E  F005         	goto	l4440
  2758   000B8C                     l4450:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2761   000B8C  C082  F01A         	movff	efgtoa@g,___flge@ff1
  2762   000B90  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2763   000B94  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2764   000B98  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2765   000B9C  C088  F01E         	movff	efgtoa@u,___flge@ff2
  2766   000BA0  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2767   000BA4  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2768   000BA8  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2769   000BAC  EC5B  F015         	call	___flge	;wreg free
  2770   000BB0  A0D8               	btfss	status,0,c
  2771   000BB2  EFDD  F005         	goto	u4201
  2772   000BB6  EFDF  F005         	goto	u4200
  2773   000BBA                     u4201:
  2774   000BBA  EF88  F005         	goto	l4442
  2775   000BBE                     u4200:
  2776   000BBE                     l904:
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  2779   000BBE  C04C  F069         	movff	efgtoa@c,efgtoa@mode
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  2782   000BC2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2783   000BC6                     
  2784                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  2785   000BC6  0100               	movlb	0	; () banked
  2786   000BC8  BFD8               	btfsc	(_prec+1)& (0+255),7,b
  2787   000BCA  EFE9  F005         	goto	u4211
  2788   000BCE  EFEB  F005         	goto	u4210
  2789   000BD2                     u4211:
  2790   000BD2  EFF1  F005         	goto	l4456
  2791   000BD6                     u4210:
  2792   000BD6                     
  2793                           ; BSR set to: 0
  2794   000BD6  C0D7  F062         	movff	_prec,efgtoa@p
  2795   000BDA  C0D8  F063         	movff	_prec+1,efgtoa@p+1
  2796   000BDE  EFF5  F005         	goto	l4458
  2797   000BE2                     l4456:
  2798                           
  2799                           ; BSR set to: 0
  2800   000BE2  0E00               	movlw	0
  2801   000BE4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2802   000BE6  0E06               	movlw	6
  2803   000BE8  6F62               	movwf	efgtoa@p& (0+255),b
  2804   000BEA                     l4458:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  2808   000BEA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2809   000BEE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2810   000BF2                     
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  2813   000BF2  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2814   000BF4  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2815   000BF6                     
  2816                           ; BSR set to: 0
  2817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  2818   000BF6  0E66               	movlw	102
  2819   000BF8  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2820   000BFA  A4D8               	btfss	status,2,c
  2821   000BFC  EF02  F006         	goto	u4221
  2822   000C00  EF04  F006         	goto	u4220
  2823   000C04                     u4221:
  2824   000C04  EF24  F006         	goto	l4472
  2825   000C08                     u4220:
  2826   000C08                     
  2827                           ; BSR set to: 0
  2828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  2829   000C08  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2830   000C0A  EF0B  F006         	goto	u4230
  2831   000C0E  EF09  F006         	goto	u4231
  2832   000C12                     u4231:
  2833   000C12  EF17  F006         	goto	l4468
  2834   000C16                     u4230:
  2835   000C16                     
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  2838   000C16  0E00               	movlw	0
  2839   000C18  6F88               	movwf	efgtoa@u& (0+255),b
  2840   000C1A  0E00               	movlw	0
  2841   000C1C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2842   000C1E  0E80               	movlw	128
  2843   000C20  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2844   000C22  0E3F               	movlw	63
  2845   000C24  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2846                           
  2847                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  2848   000C26  0E00               	movlw	0
  2849   000C28  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2850   000C2A  0E00               	movlw	0
  2851   000C2C  6F6F               	movwf	efgtoa@e& (0+255),b
  2852   000C2E                     l4468:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  2856   000C2E  0E67               	movlw	103
  2857   000C30  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2858   000C32  B4D8               	btfsc	status,2,c
  2859   000C34  EF1E  F006         	goto	u4241
  2860   000C38  EF20  F006         	goto	u4240
  2861   000C3C                     u4241:
  2862   000C3C  EF24  F006         	goto	l4472
  2863   000C40                     u4240:
  2864   000C40                     
  2865                           ; BSR set to: 0
  2866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  2867   000C40  516F               	movf	efgtoa@e& (0+255),w,b
  2868   000C42  276D               	addwf	efgtoa@m& (0+255),f,b
  2869   000C44  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2870   000C46  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2871   000C48                     l4472:
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  2875   000C48  0E00               	movlw	0
  2876   000C4A  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2877   000C4C  0E00               	movlw	0
  2878   000C4E  6F7F               	movwf	efgtoa@i& (0+255),b
  2879   000C50                     
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  2882   000C50  C082  F077         	movff	efgtoa@g,efgtoa@h
  2883   000C54  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  2884   000C58  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  2885   000C5C  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  2886   000C60                     
  2887                           ; BSR set to: 0
  2888                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  2889   000C60  C088  F071         	movff	efgtoa@u,efgtoa@ou
  2890   000C64  C089  F072         	movff	efgtoa@u+1,efgtoa@ou+1
  2891   000C68  C08A  F073         	movff	efgtoa@u+2,efgtoa@ou+2
  2892   000C6C  C08B  F074         	movff	efgtoa@u+3,efgtoa@ou+3
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  2895   000C70  EFB5  F006         	goto	l4486
  2896   000C74                     l4478:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  2900   000C74  C077  F01A         	movff	efgtoa@h,___fldiv@b
  2901   000C78  C078  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  2902   000C7C  C079  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  2903   000C80  C07A  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  2904   000C84  C088  F01E         	movff	efgtoa@u,___fldiv@a
  2905   000C88  C089  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  2906   000C8C  C08A  F020         	movff	efgtoa@u+2,___fldiv@a+2
  2907   000C90  C08B  F021         	movff	efgtoa@u+3,___fldiv@a+3
  2908   000C94  ECF1  F00F         	call	___fldiv	;wreg free
  2909   000C98  C01A  F033         	movff	?___fldiv,floorf@x
  2910   000C9C  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  2911   000CA0  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  2912   000CA4  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  2913   000CA8  ECF5  F012         	call	_floorf	;wreg free
  2914   000CAC  C033  F07B         	movff	?_floorf,efgtoa@l
  2915   000CB0  C034  F07C         	movff	?_floorf+1,efgtoa@l+1
  2916   000CB4  C035  F07D         	movff	?_floorf+2,efgtoa@l+2
  2917   000CB8  C036  F07E         	movff	?_floorf+3,efgtoa@l+3
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  2920   000CBC  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2921   000CC0  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2922   000CC4  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2923   000CC8  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2924   000CCC  ECD8  F014         	call	___fltol	;wreg free
  2925   000CD0  C001  F06B         	movff	?___fltol,efgtoa@d
  2926   000CD4  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2927   000CD8                     
  2928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  2929   000CD8  C077  F01A         	movff	efgtoa@h,___flsub@b
  2930   000CDC  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2931   000CE0  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2932   000CE4  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2933   000CE8  C07B  F005         	movff	efgtoa@l,___flmul@a
  2934   000CEC  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  2935   000CF0  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  2936   000CF4  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  2937   000CF8  C088  F001         	movff	efgtoa@u,___flmul@b
  2938   000CFC  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2939   000D00  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2940   000D04  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  2941   000D08  ECDC  F00D         	call	___flmul	;wreg free
  2942   000D0C  C001  F01E         	movff	?___flmul,___flsub@a
  2943   000D10  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2944   000D14  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2945   000D18  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2946   000D1C  ECB2  F018         	call	___flsub	;wreg free
  2947   000D20  C01A  F077         	movff	?___flsub,efgtoa@h
  2948   000D24  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  2949   000D28  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  2950   000D2C  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  2951   000D30                     
  2952                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  2953   000D30  C088  F01A         	movff	efgtoa@u,___fldiv@b
  2954   000D34  C089  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  2955   000D38  C08A  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  2956   000D3C  C08B  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  2957   000D40  0E00               	movlw	0
  2958   000D42  6E1E               	movwf	___fldiv@a^0,c
  2959   000D44  0E00               	movlw	0
  2960   000D46  6E1F               	movwf	(___fldiv@a+1)^0,c
  2961   000D48  0E20               	movlw	32
  2962   000D4A  6E20               	movwf	(___fldiv@a+2)^0,c
  2963   000D4C  0E41               	movlw	65
  2964   000D4E  6E21               	movwf	(___fldiv@a+3)^0,c
  2965   000D50  ECF1  F00F         	call	___fldiv	;wreg free
  2966   000D54  C01A  F088         	movff	?___fldiv,efgtoa@u
  2967   000D58  C01B  F089         	movff	?___fldiv+1,efgtoa@u+1
  2968   000D5C  C01C  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2969   000D60  C01D  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2970   000D64                     
  2971                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  2972   000D64  0100               	movlb	0	; () banked
  2973   000D66  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  2974   000D68  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  2975   000D6A                     l4486:
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  2979   000D6A  516D               	movf	efgtoa@m& (0+255),w,b
  2980   000D6C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  2981   000D6E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  2982   000D70  0A80               	xorlw	128
  2983   000D72  6E4D               	movwf	??_efgtoa^0,c
  2984   000D74  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2985   000D76  0A80               	xorlw	128
  2986   000D78  584D               	subwfb	??_efgtoa^0,w,c
  2987   000D7A  A0D8               	btfss	status,0,c
  2988   000D7C  EFC2  F006         	goto	u4251
  2989   000D80  EFC4  F006         	goto	u4250
  2990   000D84                     u4251:
  2991   000D84  EF3A  F006         	goto	l4478
  2992   000D88                     u4250:
  2993   000D88                     
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  2996   000D88  C088  F001         	movff	efgtoa@u,___flmul@b
  2997   000D8C  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2998   000D90  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2999   000D94  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3000   000D98  0E00               	movlw	0
  3001   000D9A  6E05               	movwf	___flmul@a^0,c
  3002   000D9C  0E00               	movlw	0
  3003   000D9E  6E06               	movwf	(___flmul@a+1)^0,c
  3004   000DA0  0EA0               	movlw	160
  3005   000DA2  6E07               	movwf	(___flmul@a+2)^0,c
  3006   000DA4  0E40               	movlw	64
  3007   000DA6  6E08               	movwf	(___flmul@a+3)^0,c
  3008   000DA8  ECDC  F00D         	call	___flmul	;wreg free
  3009   000DAC  C001  F07B         	movff	?___flmul,efgtoa@l
  3010   000DB0  C002  F07C         	movff	?___flmul+1,efgtoa@l+1
  3011   000DB4  C003  F07D         	movff	?___flmul+2,efgtoa@l+2
  3012   000DB8  C004  F07E         	movff	?___flmul+3,efgtoa@l+3
  3013   000DBC                     
  3014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3015   000DBC  C077  F01A         	movff	efgtoa@h,___flge@ff1
  3016   000DC0  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3017   000DC4  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3018   000DC8  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3019   000DCC  C07B  F01E         	movff	efgtoa@l,___flge@ff2
  3020   000DD0  C07C  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3021   000DD4  C07D  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3022   000DD8  C07E  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3023   000DDC  EC5B  F015         	call	___flge	;wreg free
  3024   000DE0  B0D8               	btfsc	status,0,c
  3025   000DE2  EFF5  F006         	goto	u4261
  3026   000DE6  EFF7  F006         	goto	u4260
  3027   000DEA                     u4261:
  3028   000DEA  EF02  F007         	goto	l4494
  3029   000DEE                     u4260:
  3030   000DEE                     
  3031                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3032   000DEE  0E00               	movlw	0
  3033   000DF0  0100               	movlb	0	; () banked
  3034   000DF2  6F7B               	movwf	efgtoa@l& (0+255),b
  3035   000DF4  0E00               	movlw	0
  3036   000DF6  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3037   000DF8  0E00               	movlw	0
  3038   000DFA  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3039   000DFC  0E00               	movlw	0
  3040   000DFE  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  3043   000E00  EF2B  F007         	goto	l4500
  3044   000E04                     l4494:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3047   000E04  C077  F001         	movff	efgtoa@h,___fleq@ff1
  3048   000E08  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3049   000E0C  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3050   000E10  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3051   000E14  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  3052   000E18  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3053   000E1C  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3054   000E20  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3055   000E24  ECB1  F016         	call	___fleq	;wreg free
  3056   000E28  A0D8               	btfss	status,0,c
  3057   000E2A  EF19  F007         	goto	u4271
  3058   000E2E  EF1B  F007         	goto	u4270
  3059   000E32                     u4271:
  3060   000E32  EF2B  F007         	goto	l4500
  3061   000E36                     u4270:
  3062   000E36  0100               	movlb	0	; () banked
  3063   000E38  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3064   000E3A  EF21  F007         	goto	u4281
  3065   000E3E  EF23  F007         	goto	u4280
  3066   000E42                     u4281:
  3067   000E42  EF2B  F007         	goto	l4500
  3068   000E46                     u4280:
  3069   000E46                     
  3070                           ; BSR set to: 0
  3071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3072   000E46  0E00               	movlw	0
  3073   000E48  6F7B               	movwf	efgtoa@l& (0+255),b
  3074   000E4A  0E00               	movlw	0
  3075   000E4C  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3076   000E4E  0E00               	movlw	0
  3077   000E50  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3078   000E52  0E00               	movlw	0
  3079   000E54  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3080   000E56                     l4500:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3083   000E56  C082  F001         	movff	efgtoa@g,___fladd@b
  3084   000E5A  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  3085   000E5E  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  3086   000E62  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  3087   000E66  C07B  F005         	movff	efgtoa@l,___fladd@a
  3088   000E6A  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3089   000E6E  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3090   000E72  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3091   000E76  EC45  F009         	call	___fladd	;wreg free
  3092   000E7A  C001  F077         	movff	?___fladd,efgtoa@h
  3093   000E7E  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  3094   000E82  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  3095   000E86  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  3096   000E8A                     
  3097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3098   000E8A  C077  F01A         	movff	efgtoa@h,___flge@ff1
  3099   000E8E  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3100   000E92  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3101   000E96  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3102   000E9A  0E00               	movlw	0
  3103   000E9C  6E05               	movwf	___flmul@a^0,c
  3104   000E9E  0E00               	movlw	0
  3105   000EA0  6E06               	movwf	(___flmul@a+1)^0,c
  3106   000EA2  0E20               	movlw	32
  3107   000EA4  6E07               	movwf	(___flmul@a+2)^0,c
  3108   000EA6  0E41               	movlw	65
  3109   000EA8  6E08               	movwf	(___flmul@a+3)^0,c
  3110   000EAA  C071  F001         	movff	efgtoa@ou,___flmul@b
  3111   000EAE  C072  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3112   000EB2  C073  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3113   000EB6  C074  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3114   000EBA  ECDC  F00D         	call	___flmul	;wreg free
  3115   000EBE  C001  F01E         	movff	?___flmul,___flge@ff2
  3116   000EC2  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3117   000EC6  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3118   000ECA  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3119   000ECE  EC5B  F015         	call	___flge	;wreg free
  3120   000ED2  A0D8               	btfss	status,0,c
  3121   000ED4  EF6E  F007         	goto	u4291
  3122   000ED8  EF70  F007         	goto	u4290
  3123   000EDC                     u4291:
  3124   000EDC  EF99  F007         	goto	l4512
  3125   000EE0                     u4290:
  3126   000EE0                     
  3127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  3128   000EE0  0100               	movlb	0	; () banked
  3129   000EE2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3130   000EE4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3131   000EE6                     
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3134   000EE6  C071  F001         	movff	efgtoa@ou,___flmul@b
  3135   000EEA  C072  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3136   000EEE  C073  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3137   000EF2  C074  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3138   000EF6  0E00               	movlw	0
  3139   000EF8  6E05               	movwf	___flmul@a^0,c
  3140   000EFA  0E00               	movlw	0
  3141   000EFC  6E06               	movwf	(___flmul@a+1)^0,c
  3142   000EFE  0E20               	movlw	32
  3143   000F00  6E07               	movwf	(___flmul@a+2)^0,c
  3144   000F02  0E41               	movlw	65
  3145   000F04  6E08               	movwf	(___flmul@a+3)^0,c
  3146   000F06  ECDC  F00D         	call	___flmul	;wreg free
  3147   000F0A  C001  F071         	movff	?___flmul,efgtoa@ou
  3148   000F0E  C002  F072         	movff	?___flmul+1,efgtoa@ou+1
  3149   000F12  C003  F073         	movff	?___flmul+2,efgtoa@ou+2
  3150   000F16  C004  F074         	movff	?___flmul+3,efgtoa@ou+3
  3151   000F1A                     
  3152                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3153   000F1A  0E66               	movlw	102
  3154   000F1C  0100               	movlb	0	; () banked
  3155   000F1E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3156   000F20  A4D8               	btfss	status,2,c
  3157   000F22  EF95  F007         	goto	u4301
  3158   000F26  EF97  F007         	goto	u4300
  3159   000F2A                     u4301:
  3160   000F2A  EF99  F007         	goto	l4512
  3161   000F2E                     u4300:
  3162   000F2E                     
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  3165   000F2E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3166   000F30  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3167   000F32                     l4512:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3170   000F32  C071  F088         	movff	efgtoa@ou,efgtoa@u
  3171   000F36  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3172   000F3A  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3173   000F3E  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3174   000F42                     
  3175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3176   000F42  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3177   000F46  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3178   000F4A                     
  3179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3180   000F4A  0E00               	movlw	0
  3181   000F4C  0100               	movlb	0	; () banked
  3182   000F4E  6F68               	movwf	efgtoa@pp& (0+255),b
  3183   000F50                     
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3186   000F50  0E00               	movlw	0
  3187   000F52  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3188   000F54  0E00               	movlw	0
  3189   000F56  6F64               	movwf	efgtoa@t& (0+255),b
  3190   000F58                     
  3191                           ; BSR set to: 0
  3192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3193   000F58  0E00               	movlw	0
  3194   000F5A  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3195   000F5C  0E00               	movlw	0
  3196   000F5E  6F7F               	movwf	efgtoa@i& (0+255),b
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3199   000F60  EF97  F008         	goto	l4562
  3200   000F64                     l4522:
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3204   000F64  C077  F01A         	movff	efgtoa@h,___fldiv@b
  3205   000F68  C078  F01B         	movff	efgtoa@h+1,___fldiv@b+1
  3206   000F6C  C079  F01C         	movff	efgtoa@h+2,___fldiv@b+2
  3207   000F70  C07A  F01D         	movff	efgtoa@h+3,___fldiv@b+3
  3208   000F74  C088  F01E         	movff	efgtoa@u,___fldiv@a
  3209   000F78  C089  F01F         	movff	efgtoa@u+1,___fldiv@a+1
  3210   000F7C  C08A  F020         	movff	efgtoa@u+2,___fldiv@a+2
  3211   000F80  C08B  F021         	movff	efgtoa@u+3,___fldiv@a+3
  3212   000F84  ECF1  F00F         	call	___fldiv	;wreg free
  3213   000F88  C01A  F033         	movff	?___fldiv,floorf@x
  3214   000F8C  C01B  F034         	movff	?___fldiv+1,floorf@x+1
  3215   000F90  C01C  F035         	movff	?___fldiv+2,floorf@x+2
  3216   000F94  C01D  F036         	movff	?___fldiv+3,floorf@x+3
  3217   000F98  ECF5  F012         	call	_floorf	;wreg free
  3218   000F9C  C033  F07B         	movff	?_floorf,efgtoa@l
  3219   000FA0  C034  F07C         	movff	?_floorf+1,efgtoa@l+1
  3220   000FA4  C035  F07D         	movff	?_floorf+2,efgtoa@l+2
  3221   000FA8  C036  F07E         	movff	?_floorf+3,efgtoa@l+3
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3224   000FAC  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3225   000FB0  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3226   000FB4  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3227   000FB8  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3228   000FBC  ECD8  F014         	call	___fltol	;wreg free
  3229   000FC0  BE02               	btfsc	(?___fltol+1)^0,7,c
  3230   000FC2  EFEE  F007         	goto	u4310
  3231   000FC6  5002               	movf	(?___fltol+1)^0,w,c
  3232   000FC8  E107               	bnz	u4311
  3233   000FCA  0E0A               	movlw	10
  3234   000FCC  5C01               	subwf	?___fltol^0,w,c
  3235   000FCE  B0D8               	btfsc	status,0,c
  3236   000FD0  EFEC  F007         	goto	u4311
  3237   000FD4  EFEE  F007         	goto	u4310
  3238   000FD8                     u4311:
  3239   000FD8  EFFE  F007         	goto	l4526
  3240   000FDC                     u4310:
  3241   000FDC  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3242   000FE0  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3243   000FE4  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3244   000FE8  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3245   000FEC  ECD8  F014         	call	___fltol	;wreg free
  3246   000FF0  C001  F06B         	movff	?___fltol,efgtoa@d
  3247   000FF4  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3248   000FF8  EF03  F008         	goto	l934
  3249   000FFC                     l4526:
  3250   000FFC  0E00               	movlw	0
  3251   000FFE  0100               	movlb	0	; () banked
  3252   001000  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3253   001002  0E09               	movlw	9
  3254   001004  6F6B               	movwf	efgtoa@d& (0+255),b
  3255   001006                     l934:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3258   001006  0100               	movlb	0	; () banked
  3259   001008  5168               	movf	efgtoa@pp& (0+255),w,b
  3260   00100A  A4D8               	btfss	status,2,c
  3261   00100C  EF0A  F008         	goto	u4321
  3262   001010  EF0C  F008         	goto	u4320
  3263   001014                     u4321:
  3264   001014  EF34  F008         	goto	l4546
  3265   001018                     u4320:
  3266   001018                     
  3267                           ; BSR set to: 0
  3268   001018  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3269   00101A  EF13  F008         	goto	u4330
  3270   00101E  EF11  F008         	goto	u4331
  3271   001022                     u4331:
  3272   001022  EF34  F008         	goto	l4546
  3273   001026                     u4330:
  3274   001026                     
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3277   001026  0E00               	movlw	low _dbuf
  3278   001028  2586               	addwf	efgtoa@n& (0+255),w,b
  3279   00102A  6ED9               	movwf	fsr2l,c
  3280   00102C  0E01               	movlw	high _dbuf
  3281   00102E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3282   001030  6EDA               	movwf	fsr2h,c
  3283   001032  0E2E               	movlw	46
  3284   001034  6EDF               	movwf	indf2,c
  3285   001036                     
  3286                           ; BSR set to: 0
  3287   001036  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3288   001038  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3289   00103A                     
  3290                           ; BSR set to: 0
  3291                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3292   00103A  0775               	decf	efgtoa@w& (0+255),f,b
  3293   00103C  A0D8               	btfss	status,0,c
  3294   00103E  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3295   001040                     
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3298   001040  0E01               	movlw	1
  3299   001042  6F68               	movwf	efgtoa@pp& (0+255),b
  3300   001044  EF34  F008         	goto	l4546
  3301   001048                     l4538:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3305   001048  0E00               	movlw	low _dbuf
  3306   00104A  2586               	addwf	efgtoa@n& (0+255),w,b
  3307   00104C  6ED9               	movwf	fsr2l,c
  3308   00104E  0E01               	movlw	high _dbuf
  3309   001050  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3310   001052  6EDA               	movwf	fsr2h,c
  3311   001054  0E30               	movlw	48
  3312   001056  6EDF               	movwf	indf2,c
  3313   001058                     
  3314                           ; BSR set to: 0
  3315   001058  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3316   00105A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3317   00105C                     
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3320   00105C  0775               	decf	efgtoa@w& (0+255),f,b
  3321   00105E  A0D8               	btfss	status,0,c
  3322   001060  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3323   001062                     
  3324                           ; BSR set to: 0
  3325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3326   001062  0764               	decf	efgtoa@t& (0+255),f,b
  3327   001064  A0D8               	btfss	status,0,c
  3328   001066  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3329   001068                     l4546:
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3333   001068  5164               	movf	efgtoa@t& (0+255),w,b
  3334   00106A  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3335   00106C  A4D8               	btfss	status,2,c
  3336   00106E  EF3B  F008         	goto	u4341
  3337   001072  EF3D  F008         	goto	u4340
  3338   001076                     u4341:
  3339   001076  EF24  F008         	goto	l4538
  3340   00107A                     u4340:
  3341   00107A                     
  3342                           ; BSR set to: 0
  3343                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3344   00107A  0E00               	movlw	low _dbuf
  3345   00107C  2586               	addwf	efgtoa@n& (0+255),w,b
  3346   00107E  6ED9               	movwf	fsr2l,c
  3347   001080  0E01               	movlw	high _dbuf
  3348   001082  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3349   001084  6EDA               	movwf	fsr2h,c
  3350   001086  516B               	movf	efgtoa@d& (0+255),w,b
  3351   001088  0F30               	addlw	48
  3352   00108A  6EDF               	movwf	indf2,c
  3353   00108C                     
  3354                           ; BSR set to: 0
  3355   00108C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3356   00108E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3357   001090                     
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3360   001090  0775               	decf	efgtoa@w& (0+255),f,b
  3361   001092  A0D8               	btfss	status,0,c
  3362   001094  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3363   001096                     
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3366   001096  C077  F01A         	movff	efgtoa@h,___flsub@b
  3367   00109A  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3368   00109E  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3369   0010A2  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3370   0010A6  C07B  F005         	movff	efgtoa@l,___flmul@a
  3371   0010AA  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  3372   0010AE  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  3373   0010B2  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  3374   0010B6  C088  F001         	movff	efgtoa@u,___flmul@b
  3375   0010BA  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3376   0010BE  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3377   0010C2  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3378   0010C6  ECDC  F00D         	call	___flmul	;wreg free
  3379   0010CA  C001  F01E         	movff	?___flmul,___flsub@a
  3380   0010CE  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3381   0010D2  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3382   0010D6  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3383   0010DA  ECB2  F018         	call	___flsub	;wreg free
  3384   0010DE  C01A  F077         	movff	?___flsub,efgtoa@h
  3385   0010E2  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  3386   0010E6  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  3387   0010EA  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  3388   0010EE                     
  3389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3390   0010EE  C088  F01A         	movff	efgtoa@u,___fldiv@b
  3391   0010F2  C089  F01B         	movff	efgtoa@u+1,___fldiv@b+1
  3392   0010F6  C08A  F01C         	movff	efgtoa@u+2,___fldiv@b+2
  3393   0010FA  C08B  F01D         	movff	efgtoa@u+3,___fldiv@b+3
  3394   0010FE  0E00               	movlw	0
  3395   001100  6E1E               	movwf	___fldiv@a^0,c
  3396   001102  0E00               	movlw	0
  3397   001104  6E1F               	movwf	(___fldiv@a+1)^0,c
  3398   001106  0E20               	movlw	32
  3399   001108  6E20               	movwf	(___fldiv@a+2)^0,c
  3400   00110A  0E41               	movlw	65
  3401   00110C  6E21               	movwf	(___fldiv@a+3)^0,c
  3402   00110E  ECF1  F00F         	call	___fldiv	;wreg free
  3403   001112  C01A  F088         	movff	?___fldiv,efgtoa@u
  3404   001116  C01B  F089         	movff	?___fldiv+1,efgtoa@u+1
  3405   00111A  C01C  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3406   00111E  C01D  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3407   001122                     
  3408                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3409   001122  0100               	movlb	0	; () banked
  3410   001124  0760               	decf	efgtoa@ne& (0+255),f,b
  3411   001126  A0D8               	btfss	status,0,c
  3412   001128  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3413   00112A                     
  3414                           ; BSR set to: 0
  3415                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3416   00112A  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3417   00112C  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3418   00112E                     l4562:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3422   00112E  516D               	movf	efgtoa@m& (0+255),w,b
  3423   001130  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3424   001132  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3425   001134  0A80               	xorlw	128
  3426   001136  6E4D               	movwf	??_efgtoa^0,c
  3427   001138  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3428   00113A  0A80               	xorlw	128
  3429   00113C  584D               	subwfb	??_efgtoa^0,w,c
  3430   00113E  B0D8               	btfsc	status,0,c
  3431   001140  EFA4  F008         	goto	u4351
  3432   001144  EFA6  F008         	goto	u4350
  3433   001148                     u4351:
  3434   001148  EFB4  F008         	goto	l4566
  3435   00114C                     u4350:
  3436   00114C                     
  3437                           ; BSR set to: 0
  3438   00114C  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3439   00114E  EFB2  F008         	goto	u4361
  3440   001152  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3441   001154  E109               	bnz	u4360
  3442   001156  0E4B               	movlw	75
  3443   001158  5D86               	subwf	efgtoa@n& (0+255),w,b
  3444   00115A  A0D8               	btfss	status,0,c
  3445   00115C  EFB2  F008         	goto	u4361
  3446   001160  EFB4  F008         	goto	u4360
  3447   001164                     u4361:
  3448   001164  EFB2  F007         	goto	l4522
  3449   001168                     u4360:
  3450   001168                     l4566:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3454   001168  0E00               	movlw	0
  3455   00116A  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3456   00116C  0E4F               	movlw	79
  3457   00116E  6F7F               	movwf	efgtoa@i& (0+255),b
  3458   001170                     
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3461   001170  0E00               	movlw	low _dbuf
  3462   001172  257F               	addwf	efgtoa@i& (0+255),w,b
  3463   001174  6ED9               	movwf	fsr2l,c
  3464   001176  0E01               	movlw	high _dbuf
  3465   001178  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3466   00117A  6EDA               	movwf	fsr2h,c
  3467   00117C  6ADF               	clrf	indf2,c
  3468   00117E                     
  3469                           ; BSR set to: 0
  3470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3471   00117E  0E00               	movlw	low _dbuf
  3472   001180  6E4D               	movwf	??_efgtoa^0,c
  3473   001182  0E01               	movlw	high _dbuf
  3474   001184  6E4E               	movwf	(??_efgtoa+1)^0,c
  3475   001186  5186               	movf	efgtoa@n& (0+255),w,b
  3476   001188  5E4D               	subwf	??_efgtoa^0,f,c
  3477   00118A  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3478   00118C  5A4E               	subwfb	(??_efgtoa+1)^0,f,c
  3479   00118E  517F               	movf	efgtoa@i& (0+255),w,b
  3480   001190  244D               	addwf	??_efgtoa^0,w,c
  3481   001192  6E01               	movwf	memcpy@d1^0,c
  3482   001194  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3483   001196  204E               	addwfc	(??_efgtoa+1)^0,w,c
  3484   001198  6E02               	movwf	(memcpy@d1+1)^0,c
  3485   00119A  0E00               	movlw	low _dbuf
  3486   00119C  6E03               	movwf	memcpy@s1^0,c
  3487   00119E  0E01               	movlw	high _dbuf
  3488   0011A0  6E04               	movwf	(memcpy@s1+1)^0,c
  3489   0011A2  C086  F005         	movff	efgtoa@n,memcpy@n
  3490   0011A6  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3491   0011AA  EC8A  F018         	call	_memcpy	;wreg free
  3492   0011AE                     
  3493                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3494   0011AE  0100               	movlb	0	; () banked
  3495   0011B0  5186               	movf	efgtoa@n& (0+255),w,b
  3496   0011B2  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3497   0011B4  6F86               	movwf	efgtoa@n& (0+255),b
  3498   0011B6  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3499   0011B8  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3500   0011BA  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3501   0011BC                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3504   0011BC  5181               	movf	efgtoa@sign& (0+255),w,b
  3505   0011BE  A4D8               	btfss	status,2,c
  3506   0011C0  EFE4  F008         	goto	u4371
  3507   0011C4  EFE7  F008         	goto	u4370
  3508   0011C8                     u4371:
  3509   0011C8  0E01               	movlw	1
  3510   0011CA  EFE8  F008         	goto	u4380
  3511   0011CE                     u4370:
  3512   0011CE  0E00               	movlw	0
  3513   0011D0                     u4380:
  3514   0011D0  6F7F               	movwf	efgtoa@i& (0+255),b
  3515   0011D2  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  3516   0011D4                     
  3517                           ; BSR set to: 0
  3518                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  3519   0011D4  A3DF               	btfss	_flags& (0+255),1,b
  3520   0011D6  EFEF  F008         	goto	u4391
  3521   0011DA  EFF1  F008         	goto	u4390
  3522   0011DE                     u4391:
  3523   0011DE  EF1F  F009         	goto	l4588
  3524   0011E2                     u4390:
  3525   0011E2  EF01  F009         	goto	l4584
  3526   0011E6                     l4580:
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  3530   0011E6  0786               	decf	efgtoa@n& (0+255),f,b
  3531   0011E8  A0D8               	btfss	status,0,c
  3532   0011EA  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3533   0011EC  0E00               	movlw	low _dbuf
  3534   0011EE  2586               	addwf	efgtoa@n& (0+255),w,b
  3535   0011F0  6ED9               	movwf	fsr2l,c
  3536   0011F2  0E01               	movlw	high _dbuf
  3537   0011F4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3538   0011F6  6EDA               	movwf	fsr2h,c
  3539   0011F8  0E30               	movlw	48
  3540   0011FA  6EDF               	movwf	indf2,c
  3541   0011FC                     
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 856:    w--;
  3544   0011FC  0775               	decf	efgtoa@w& (0+255),f,b
  3545   0011FE  A0D8               	btfss	status,0,c
  3546   001200  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3547   001202                     l4584:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  3551   001202  5175               	movf	efgtoa@w& (0+255),w,b
  3552   001204  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3553   001206  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3554   001208  0A80               	xorlw	128
  3555   00120A  6E4D               	movwf	??_efgtoa^0,c
  3556   00120C  5176               	movf	(efgtoa@w+1)& (0+255),w,b
  3557   00120E  0A80               	xorlw	128
  3558   001210  584D               	subwfb	??_efgtoa^0,w,c
  3559   001212  B0D8               	btfsc	status,0,c
  3560   001214  EF0E  F009         	goto	u4401
  3561   001218  EF10  F009         	goto	u4400
  3562   00121C                     u4401:
  3563   00121C  EF1F  F009         	goto	l4588
  3564   001220                     u4400:
  3565   001220                     
  3566                           ; BSR set to: 0
  3567   001220  5186               	movf	efgtoa@n& (0+255),w,b
  3568   001222  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3569   001224  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3570   001226  0A80               	xorlw	128
  3571   001228  6E4D               	movwf	??_efgtoa^0,c
  3572   00122A  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3573   00122C  0A80               	xorlw	128
  3574   00122E  584D               	subwfb	??_efgtoa^0,w,c
  3575   001230  A0D8               	btfss	status,0,c
  3576   001232  EF1D  F009         	goto	u4411
  3577   001236  EF1F  F009         	goto	u4410
  3578   00123A                     u4411:
  3579   00123A  EFF3  F008         	goto	l4580
  3580   00123E                     u4410:
  3581   00123E                     l4588:
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3585   00123E  5181               	movf	efgtoa@sign& (0+255),w,b
  3586   001240  B4D8               	btfsc	status,2,c
  3587   001242  EF25  F009         	goto	u4421
  3588   001246  EF27  F009         	goto	u4420
  3589   00124A                     u4421:
  3590   00124A  EF32  F009         	goto	l4592
  3591   00124E                     u4420:
  3592   00124E                     
  3593                           ; BSR set to: 0
  3594                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3595   00124E  0786               	decf	efgtoa@n& (0+255),f,b
  3596   001250  A0D8               	btfss	status,0,c
  3597   001252  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3598   001254  0E00               	movlw	low _dbuf
  3599   001256  2586               	addwf	efgtoa@n& (0+255),w,b
  3600   001258  6ED9               	movwf	fsr2l,c
  3601   00125A  0E01               	movlw	high _dbuf
  3602   00125C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3603   00125E  6EDA               	movwf	fsr2h,c
  3604   001260  C081  FFDF         	movff	efgtoa@sign,indf2
  3605   001264                     l4592:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3609   001264  517F               	movf	efgtoa@i& (0+255),w,b
  3610   001266  5F75               	subwf	efgtoa@w& (0+255),f,b
  3611   001268  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3612   00126A  5B76               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3613   00126C                     
  3614                           ; BSR set to: 0
  3615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3616   00126C  C047  F00F         	movff	efgtoa@fp,pad@fp
  3617   001270  0E00               	movlw	low _dbuf
  3618   001272  2586               	addwf	efgtoa@n& (0+255),w,b
  3619   001274  6E10               	movwf	pad@buf^0,c
  3620   001276  0E01               	movlw	high _dbuf
  3621   001278  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3622   00127A  6E11               	movwf	(pad@buf+1)^0,c
  3623   00127C  C075  F012         	movff	efgtoa@w,pad@p
  3624   001280  C076  F013         	movff	efgtoa@w+1,pad@p+1
  3625   001284  ECD4  F017         	call	_pad	;wreg free
  3626   001288                     l901:
  3627   001288  0012               	return		;funcret
  3628   00128A                     __end_of_efgtoa:
  3629                           	callstack 0
  3630                           
  3631 ;; *************** function _strcpy *****************
  3632 ;; Defined at:
  3633 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3636 ;;		 -> dbuf(80), 
  3637 ;;  src             1    2[COMRAM] PTR const unsigned char 
  3638 ;;		 -> STR_16(4), STR_13(4), 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  d               2    4[COMRAM] PTR unsigned char 
  3641 ;;		 -> dbuf(80), 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2    0[COMRAM] PTR unsigned char 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3651 ;;      Params:         3       0       0       0       0       0       0       0       0
  3652 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3653 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3654 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3655 ;;Total ram usage:        6 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_efgtoa
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text7
  3665   00326E                     __ptext7:
  3666                           	callstack 0
  3667   00326E                     _strcpy:
  3668                           	callstack 26
  3669   00326E  C001  F005         	movff	strcpy@dest,strcpy@d
  3670   003272  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  3671   003276                     l4350:
  3672   003276  2A03               	incf	strcpy@src^0,f,c
  3673   003278  0403               	decf	strcpy@src^0,w,c
  3674   00327A  6E04               	movwf	??_strcpy^0,c
  3675   00327C  C004  FFF6         	movff	??_strcpy,tblptrl
  3676   003280                     	if	1	;There is more than 1 active tblptr byte
  3677   003280  0E08               	movlw	high __smallconst
  3678   003282  6EF7               	movwf	tblptrh,c
  3679   003284                     	endif
  3680   003284                     	if	0	;tblptru may be non-zero
  3681   003284                     	endif
  3682   003284                     	if	0	;tblptru may be non-zero
  3683   003284                     	endif
  3684   003284  C005  FFD9         	movff	strcpy@d,fsr2l
  3685   003288  C006  FFDA         	movff	strcpy@d+1,fsr2h
  3686   00328C  4A05               	infsnz	strcpy@d^0,f,c
  3687   00328E  2A06               	incf	(strcpy@d+1)^0,f,c
  3688   003290  0008               	tblrd		*
  3689   003292  CFF5 FFDF          	movff	tablat,indf2
  3690   003296  50DF               	movf	indf2,w,c
  3691   003298  A4D8               	btfss	status,2,c
  3692   00329A  EF51  F019         	goto	u4061
  3693   00329E  EF53  F019         	goto	u4060
  3694   0032A2                     u4061:
  3695   0032A2  EF3B  F019         	goto	l4350
  3696   0032A6                     u4060:
  3697   0032A6  0012               	return		;funcret
  3698   0032A8                     __end_of_strcpy:
  3699                           	callstack 0
  3700                           
  3701 ;; *************** function _pad *****************
  3702 ;; Defined at:
  3703 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3706 ;;		 -> sprintf@f(12), 
  3707 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3708 ;;		 -> dbuf(80), 
  3709 ;;  p               2   17[COMRAM] int 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  i               2   20[COMRAM] int 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  1    wreg      void 
  3714 ;; Registers used:
  3715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3721 ;;      Params:         5       0       0       0       0       0       0       0       0
  3722 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3723 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3724 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3725 ;;Total ram usage:        8 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; Hardware stack levels required when called: 3
  3728 ;; This function calls:
  3729 ;;		_fputc
  3730 ;;		_fputs
  3731 ;; This function is called by:
  3732 ;;		_efgtoa
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text8
  3737   002FA8                     __ptext8:
  3738                           	callstack 0
  3739   002FA8                     _pad:
  3740                           	callstack 23
  3741   002FA8                     
  3742                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3743   002FA8  BE13               	btfsc	(pad@p+1)^0,7,c
  3744   002FAA  EFDB  F017         	goto	u4040
  3745   002FAE  EFD9  F017         	goto	u4041
  3746   002FB2                     u4041:
  3747   002FB2  EFDF  F017         	goto	l886
  3748   002FB6                     u4040:
  3749   002FB6                     
  3750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3751   002FB6  0E00               	movlw	0
  3752   002FB8  6E13               	movwf	(pad@p+1)^0,c
  3753   002FBA  0E00               	movlw	0
  3754   002FBC  6E12               	movwf	pad@p^0,c
  3755   002FBE                     l886:
  3756                           
  3757                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3758   002FBE  0E00               	movlw	0
  3759   002FC0  6E16               	movwf	(pad@i+1)^0,c
  3760   002FC2  0E00               	movlw	0
  3761   002FC4  6E15               	movwf	pad@i^0,c
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3764   002FC6  EFEF  F017         	goto	l4344
  3765   002FCA                     l4340:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3768   002FCA  0E00               	movlw	0
  3769   002FCC  6E02               	movwf	(fputc@c+1)^0,c
  3770   002FCE  0E20               	movlw	32
  3771   002FD0  6E01               	movwf	fputc@c^0,c
  3772   002FD2  C00F  F003         	movff	pad@fp,fputc@fp
  3773   002FD6  EC5C  F016         	call	_fputc	;wreg free
  3774   002FDA                     
  3775                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3776   002FDA  4A15               	infsnz	pad@i^0,f,c
  3777   002FDC  2A16               	incf	(pad@i+1)^0,f,c
  3778   002FDE                     l4344:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3781   002FDE  5012               	movf	pad@p^0,w,c
  3782   002FE0  5C15               	subwf	pad@i^0,w,c
  3783   002FE2  5016               	movf	(pad@i+1)^0,w,c
  3784   002FE4  0A80               	xorlw	128
  3785   002FE6  6E14               	movwf	??_pad^0,c
  3786   002FE8  5013               	movf	(pad@p+1)^0,w,c
  3787   002FEA  0A80               	xorlw	128
  3788   002FEC  5814               	subwfb	??_pad^0,w,c
  3789   002FEE  A0D8               	btfss	status,0,c
  3790   002FF0  EFFC  F017         	goto	u4051
  3791   002FF4  EFFE  F017         	goto	u4050
  3792   002FF8                     u4051:
  3793   002FF8  EFE5  F017         	goto	l4340
  3794   002FFC                     u4050:
  3795   002FFC                     
  3796                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3797   002FFC  C010  F009         	movff	pad@buf,fputs@s
  3798   003000  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3799   003004  C00F  F00B         	movff	pad@fp,fputs@fp
  3800   003008  ECF8  F018         	call	_fputs	;wreg free
  3801   00300C  0012               	return		;funcret
  3802   00300E                     __end_of_pad:
  3803                           	callstack 0
  3804                           
  3805 ;; *************** function _fputs *****************
  3806 ;; Defined at:
  3807 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3810 ;;		 -> dbuf(80), 
  3811 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3812 ;;		 -> sprintf@f(12), 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  i               2   12[COMRAM] int 
  3815 ;;  c               1   11[COMRAM] unsigned char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2    8[COMRAM] int 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3825 ;;      Params:         3       0       0       0       0       0       0       0       0
  3826 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3828 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3829 ;;Total ram usage:        6 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 2
  3832 ;; This function calls:
  3833 ;;		_fputc
  3834 ;; This function is called by:
  3835 ;;		_pad
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text9
  3840   0031F0                     __ptext9:
  3841                           	callstack 0
  3842   0031F0                     _fputs:
  3843                           	callstack 23
  3844   0031F0  0E00               	movlw	0
  3845   0031F2  6E0E               	movwf	(fputs@i+1)^0,c
  3846   0031F4  0E00               	movlw	0
  3847   0031F6  6E0D               	movwf	fputs@i^0,c
  3848   0031F8  EF07  F019         	goto	l4334
  3849   0031FC                     l4330:
  3850   0031FC  C00C  F001         	movff	fputs@c,fputc@c
  3851   003200  6A02               	clrf	(fputc@c+1)^0,c
  3852   003202  C00B  F003         	movff	fputs@fp,fputc@fp
  3853   003206  EC5C  F016         	call	_fputc	;wreg free
  3854   00320A  4A0D               	infsnz	fputs@i^0,f,c
  3855   00320C  2A0E               	incf	(fputs@i+1)^0,f,c
  3856   00320E                     l4334:
  3857   00320E  500D               	movf	fputs@i^0,w,c
  3858   003210  2409               	addwf	fputs@s^0,w,c
  3859   003212  6ED9               	movwf	fsr2l,c
  3860   003214  500E               	movf	(fputs@i+1)^0,w,c
  3861   003216  200A               	addwfc	(fputs@s+1)^0,w,c
  3862   003218  6EDA               	movwf	fsr2h,c
  3863   00321A  50DF               	movf	indf2,w,c
  3864   00321C  6E0C               	movwf	fputs@c^0,c
  3865   00321E  500C               	movf	fputs@c^0,w,c
  3866   003220  A4D8               	btfss	status,2,c
  3867   003222  EF15  F019         	goto	u4031
  3868   003226  EF17  F019         	goto	u4030
  3869   00322A                     u4031:
  3870   00322A  EFFE  F018         	goto	l4330
  3871   00322E                     u4030:
  3872   00322E  0012               	return		;funcret
  3873   003230                     __end_of_fputs:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _fputc *****************
  3877 ;; Defined at:
  3878 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  c               2    0[COMRAM] int 
  3881 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3882 ;;		 -> sprintf@f(12), 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  2    0[COMRAM] int 
  3887 ;; Registers used:
  3888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         3       0       0       0       0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3896 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3897 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3898 ;;Total ram usage:        8 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 1
  3901 ;; This function calls:
  3902 ;;		_putch
  3903 ;; This function is called by:
  3904 ;;		_pad
  3905 ;;		_vfpfcnvrt
  3906 ;;		_fputs
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text10
  3911   002CB8                     __ptext10:
  3912                           	callstack 0
  3913   002CB8                     _fputc:
  3914                           	callstack 26
  3915   002CB8  5003               	movf	fputc@fp^0,w,c
  3916   002CBA  B4D8               	btfsc	status,2,c
  3917   002CBC  EF62  F016         	goto	u2021
  3918   002CC0  EF64  F016         	goto	u2020
  3919   002CC4                     u2021:
  3920   002CC4  EF6C  F016         	goto	l2696
  3921   002CC8                     u2020:
  3922   002CC8  5003               	movf	fputc@fp^0,w,c
  3923   002CCA  A4D8               	btfss	status,2,c
  3924   002CCC  EF6A  F016         	goto	u2031
  3925   002CD0  EF6C  F016         	goto	u2030
  3926   002CD4                     u2031:
  3927   002CD4  EF71  F016         	goto	l2698
  3928   002CD8                     u2030:
  3929   002CD8                     l2696:
  3930   002CD8  5001               	movf	fputc@c^0,w,c
  3931   002CDA  EC40  F01A         	call	_putch
  3932   002CDE  EFB0  F016         	goto	l1039
  3933   002CE2                     l2698:
  3934   002CE2  5003               	movf	fputc@fp^0,w,c
  3935   002CE4  6ED9               	movwf	fsr2l,c
  3936   002CE6  6ADA               	clrf	fsr2h,c
  3937   002CE8  0E0A               	movlw	10
  3938   002CEA  26D9               	addwf	fsr2l,f,c
  3939   002CEC  50DE               	movf	postinc2,w,c
  3940   002CEE  10DE               	iorwf	postinc2,w,c
  3941   002CF0  B4D8               	btfsc	status,2,c
  3942   002CF2  EF7D  F016         	goto	u2041
  3943   002CF6  EF7F  F016         	goto	u2040
  3944   002CFA                     u2041:
  3945   002CFA  EF98  F016         	goto	l2702
  3946   002CFE                     u2040:
  3947   002CFE  5003               	movf	fputc@fp^0,w,c
  3948   002D00  6ED9               	movwf	fsr2l,c
  3949   002D02  6ADA               	clrf	fsr2h,c
  3950   002D04  0E0A               	movlw	10
  3951   002D06  26D9               	addwf	fsr2l,f,c
  3952   002D08  5003               	movf	fputc@fp^0,w,c
  3953   002D0A  6EE1               	movwf	fsr1l,c
  3954   002D0C  6AE2               	clrf	fsr1h,c
  3955   002D0E  0E03               	movlw	3
  3956   002D10  26E1               	addwf	fsr1l,f,c
  3957   002D12  50DE               	movf	postinc2,w,c
  3958   002D14  5CE6               	subwf	postinc1,w,c
  3959   002D16  50E6               	movf	postinc1,w,c
  3960   002D18  0A80               	xorlw	128
  3961   002D1A  6E08               	movwf	(??_fputc+4)^0,c
  3962   002D1C  50DE               	movf	postinc2,w,c
  3963   002D1E  0A80               	xorlw	128
  3964   002D20  5808               	subwfb	(??_fputc+4)^0,w,c
  3965   002D22  B0D8               	btfsc	status,0,c
  3966   002D24  EF96  F016         	goto	u2051
  3967   002D28  EF98  F016         	goto	u2050
  3968   002D2C                     u2051:
  3969   002D2C  EFB0  F016         	goto	l1039
  3970   002D30                     u2050:
  3971   002D30                     l2702:
  3972   002D30  5003               	movf	fputc@fp^0,w,c
  3973   002D32  6ED9               	movwf	fsr2l,c
  3974   002D34  6ADA               	clrf	fsr2h,c
  3975   002D36  0E03               	movlw	3
  3976   002D38  26D9               	addwf	fsr2l,f,c
  3977   002D3A  50DF               	movf	indf2,w,c
  3978   002D3C  6E04               	movwf	??_fputc^0,c
  3979   002D3E  5003               	movf	fputc@fp^0,w,c
  3980   002D40  6ED9               	movwf	fsr2l,c
  3981   002D42  6ADA               	clrf	fsr2h,c
  3982   002D44  50DF               	movf	indf2,w,c
  3983   002D46  2404               	addwf	??_fputc^0,w,c
  3984   002D48  6ED9               	movwf	fsr2l,c
  3985   002D4A  6ADA               	clrf	fsr2h,c
  3986   002D4C  C001  FFDF         	movff	fputc@c,indf2
  3987   002D50  5003               	movf	fputc@fp^0,w,c
  3988   002D52  6ED9               	movwf	fsr2l,c
  3989   002D54  6ADA               	clrf	fsr2h,c
  3990   002D56  0E03               	movlw	3
  3991   002D58  26D9               	addwf	fsr2l,f,c
  3992   002D5A  2ADE               	incf	postinc2,f,c
  3993   002D5C  0E00               	movlw	0
  3994   002D5E  22DD               	addwfc	postdec2,f,c
  3995   002D60                     l1039:
  3996   002D60  0012               	return		;funcret
  3997   002D62                     __end_of_fputc:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _putch *****************
  4001 ;; Defined at:
  4002 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  c               1    wreg     unsigned char 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  c               1    0[COMRAM] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_fputc
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text11
  4030   003480                     __ptext11:
  4031                           	callstack 0
  4032   003480                     _putch:
  4033                           	callstack 26
  4034   003480  0012               	return		;funcret
  4035   003482                     __end_of_putch:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _memcpy *****************
  4039 ;; Defined at:
  4040 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  d1              2    0[COMRAM] PTR void 
  4043 ;;		 -> dbuf(80), 
  4044 ;;  s1              2    2[COMRAM] PTR const void 
  4045 ;;		 -> dbuf(80), 
  4046 ;;  n               2    4[COMRAM] unsigned int 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4049 ;;		 -> dbuf(80), 
  4050 ;;  d               2    7[COMRAM] PTR unsigned char 
  4051 ;;		 -> dbuf(80), 
  4052 ;;  tmp             1    6[COMRAM] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  2    0[COMRAM] PTR void 
  4055 ;; Registers used:
  4056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4062 ;;      Params:         6       0       0       0       0       0       0       0       0
  4063 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4065 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4066 ;;Total ram usage:       11 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_efgtoa
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text12
  4076   003114                     __ptext12:
  4077                           	callstack 0
  4078   003114                     _memcpy:
  4079                           	callstack 26
  4080   003114  C003  F00A         	movff	memcpy@s1,memcpy@s
  4081   003118  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4082   00311C  C001  F008         	movff	memcpy@d1,memcpy@d
  4083   003120  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4084   003124  EFA4  F018         	goto	l4362
  4085   003128                     l4354:
  4086   003128  C00A  FFD9         	movff	memcpy@s,fsr2l
  4087   00312C  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4088   003130  50DF               	movf	indf2,w,c
  4089   003132  6E07               	movwf	memcpy@tmp^0,c
  4090   003134  4A0A               	infsnz	memcpy@s^0,f,c
  4091   003136  2A0B               	incf	(memcpy@s+1)^0,f,c
  4092   003138  C008  FFD9         	movff	memcpy@d,fsr2l
  4093   00313C  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4094   003140  C007  FFDF         	movff	memcpy@tmp,indf2
  4095   003144  4A08               	infsnz	memcpy@d^0,f,c
  4096   003146  2A09               	incf	(memcpy@d+1)^0,f,c
  4097   003148                     l4362:
  4098   003148  0605               	decf	memcpy@n^0,f,c
  4099   00314A  A0D8               	btfss	status,0,c
  4100   00314C  0606               	decf	(memcpy@n+1)^0,f,c
  4101   00314E  2805               	incf	memcpy@n^0,w,c
  4102   003150  E106               	bnz	u4071
  4103   003152  2806               	incf	(memcpy@n+1)^0,w,c
  4104   003154  A4D8               	btfss	status,2,c
  4105   003156  EFAF  F018         	goto	u4071
  4106   00315A  EFB1  F018         	goto	u4070
  4107   00315E                     u4071:
  4108   00315E  EF94  F018         	goto	l4354
  4109   003162                     u4070:
  4110   003162  0012               	return		;funcret
  4111   003164                     __end_of_memcpy:
  4112                           	callstack 0
  4113                           
  4114 ;; *************** function _labs *****************
  4115 ;; Defined at:
  4116 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  a               4    0[COMRAM] long 
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  4    0[COMRAM] long 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4130 ;;      Params:         4       0       0       0       0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4132 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4133 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4134 ;;Total ram usage:        8 bytes
  4135 ;; Hardware stack levels used: 1
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_efgtoa
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text13
  4144   003068                     __ptext13:
  4145                           	callstack 0
  4146   003068                     _labs:
  4147                           	callstack 26
  4148   003068  BE04               	btfsc	(labs@a+3)^0,7,c
  4149   00306A  EF39  F018         	goto	u3141
  4150   00306E  EF3B  F018         	goto	u3140
  4151   003072                     u3141:
  4152   003072  EF45  F018         	goto	l3332
  4153   003076                     u3140:
  4154   003076  C001  F001         	movff	labs@a,?_labs
  4155   00307A  C002  F002         	movff	labs@a+1,?_labs+1
  4156   00307E  C003  F003         	movff	labs@a+2,?_labs+2
  4157   003082  C004  F004         	movff	labs@a+3,?_labs+3
  4158   003086  EF5E  F018         	goto	l1021
  4159   00308A                     l3332:
  4160   00308A  C001  F005         	movff	labs@a,??_labs
  4161   00308E  C002  F006         	movff	labs@a+1,??_labs+1
  4162   003092  C003  F007         	movff	labs@a+2,??_labs+2
  4163   003096  C004  F008         	movff	labs@a+3,??_labs+3
  4164   00309A  1E05               	comf	??_labs^0,f,c
  4165   00309C  1E06               	comf	(??_labs+1)^0,f,c
  4166   00309E  1E07               	comf	(??_labs+2)^0,f,c
  4167   0030A0  1E08               	comf	(??_labs+3)^0,f,c
  4168   0030A2  2A05               	incf	??_labs^0,f,c
  4169   0030A4  0E00               	movlw	0
  4170   0030A6  2206               	addwfc	(??_labs+1)^0,f,c
  4171   0030A8  2207               	addwfc	(??_labs+2)^0,f,c
  4172   0030AA  2208               	addwfc	(??_labs+3)^0,f,c
  4173   0030AC  C005  F001         	movff	??_labs,?_labs
  4174   0030B0  C006  F002         	movff	??_labs+1,?_labs+1
  4175   0030B4  C007  F003         	movff	??_labs+2,?_labs+2
  4176   0030B8  C008  F004         	movff	??_labs+3,?_labs+3
  4177   0030BC                     l1021:
  4178   0030BC  0012               	return		;funcret
  4179   0030BE                     __end_of_labs:
  4180                           	callstack 0
  4181                           
  4182 ;; *************** function _floorf *****************
  4183 ;; Defined at:
  4184 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  x               4   50[COMRAM] float 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  u               4   66[COMRAM] struct .
  4189 ;;  m               4   60[COMRAM] unsigned long 
  4190 ;;  e               2   64[COMRAM] int 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  4   50[COMRAM] float 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4200 ;;      Params:         4       0       0       0       0       0       0       0       0
  4201 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4202 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4203 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4204 ;;Total ram usage:       20 bytes
  4205 ;; Hardware stack levels used: 1
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_efgtoa
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text14
  4214   0025EA                     __ptext14:
  4215                           	callstack 0
  4216   0025EA                     _floorf:
  4217                           	callstack 26
  4218   0025EA  C0C9  F043         	movff	floorf@F521,floorf@u
  4219   0025EE  C0CA  F044         	movff	floorf@F521+1,floorf@u+1
  4220   0025F2  C0CB  F045         	movff	floorf@F521+2,floorf@u+2
  4221   0025F6  C0CC  F046         	movff	floorf@F521+3,floorf@u+3
  4222   0025FA  C033  F043         	movff	floorf@x,floorf@u
  4223   0025FE  C034  F044         	movff	floorf@x+1,floorf@u+1
  4224   002602  C035  F045         	movff	floorf@x+2,floorf@u+2
  4225   002606  C036  F046         	movff	floorf@x+3,floorf@u+3
  4226   00260A  0E81               	movlw	129
  4227   00260C  6E37               	movwf	??_floorf^0,c
  4228   00260E  0EFF               	movlw	255
  4229   002610  6E38               	movwf	(??_floorf+1)^0,c
  4230   002612  C043  F039         	movff	floorf@u,??_floorf+2
  4231   002616  C044  F03A         	movff	floorf@u+1,??_floorf+3
  4232   00261A  C045  F03B         	movff	floorf@u+2,??_floorf+4
  4233   00261E  C046  F03C         	movff	floorf@u+3,??_floorf+5
  4234   002622  0E18               	movlw	24
  4235   002624  EF19  F013         	goto	u3150
  4236   002628                     u3155:
  4237   002628  90D8               	bcf	status,0,c
  4238   00262A  323C               	rrcf	(??_floorf+5)^0,f,c
  4239   00262C  323B               	rrcf	(??_floorf+4)^0,f,c
  4240   00262E  323A               	rrcf	(??_floorf+3)^0,f,c
  4241   002630  3239               	rrcf	(??_floorf+2)^0,f,c
  4242   002632                     u3150:
  4243   002632  2EE8               	decfsz	wreg,f,c
  4244   002634  EF14  F013         	goto	u3155
  4245   002638  5039               	movf	(??_floorf+2)^0,w,c
  4246   00263A  2437               	addwf	??_floorf^0,w,c
  4247   00263C  6E41               	movwf	floorf@e^0,c
  4248   00263E  0E00               	movlw	0
  4249   002640  2038               	addwfc	(??_floorf+1)^0,w,c
  4250   002642  6E42               	movwf	(floorf@e+1)^0,c
  4251   002644  BE42               	btfsc	(floorf@e+1)^0,7,c
  4252   002646  EF2E  F013         	goto	u3161
  4253   00264A  5042               	movf	(floorf@e+1)^0,w,c
  4254   00264C  E109               	bnz	u3160
  4255   00264E  0E17               	movlw	23
  4256   002650  5C41               	subwf	floorf@e^0,w,c
  4257   002652  A0D8               	btfss	status,0,c
  4258   002654  EF2E  F013         	goto	u3161
  4259   002658  EF30  F013         	goto	u3160
  4260   00265C                     u3161:
  4261   00265C  EF3A  F013         	goto	l3342
  4262   002660                     u3160:
  4263   002660                     l3340:
  4264   002660  C033  F033         	movff	floorf@x,?_floorf
  4265   002664  C034  F034         	movff	floorf@x+1,?_floorf+1
  4266   002668  C035  F035         	movff	floorf@x+2,?_floorf+2
  4267   00266C  C036  F036         	movff	floorf@x+3,?_floorf+3
  4268   002670  EFFD  F013         	goto	l1007
  4269   002674                     l3342:
  4270   002674  BE42               	btfsc	(floorf@e+1)^0,7,c
  4271   002676  EF3F  F013         	goto	u3171
  4272   00267A  EF41  F013         	goto	u3170
  4273   00267E                     u3171:
  4274   00267E  EFB1  F013         	goto	l3352
  4275   002682                     u3170:
  4276   002682  C041  F037         	movff	floorf@e,??_floorf
  4277   002686  0EFF               	movlw	255
  4278   002688  6E38               	movwf	(??_floorf+1)^0,c
  4279   00268A  0EFF               	movlw	255
  4280   00268C  6E39               	movwf	(??_floorf+2)^0,c
  4281   00268E  0E7F               	movlw	127
  4282   002690  6E3A               	movwf	(??_floorf+3)^0,c
  4283   002692  0E00               	movlw	0
  4284   002694  6E3B               	movwf	(??_floorf+4)^0,c
  4285   002696                     u3185:
  4286   002696  6637               	tstfsz	??_floorf^0,c
  4287   002698  EF50  F013         	goto	u3186
  4288   00269C  EF58  F013         	goto	u3187
  4289   0026A0                     u3186:
  4290   0026A0  343B               	rlcf	(??_floorf+4)^0,w,c
  4291   0026A2  323B               	rrcf	(??_floorf+4)^0,f,c
  4292   0026A4  323A               	rrcf	(??_floorf+3)^0,f,c
  4293   0026A6  3239               	rrcf	(??_floorf+2)^0,f,c
  4294   0026A8  3238               	rrcf	(??_floorf+1)^0,f,c
  4295   0026AA  2E37               	decfsz	??_floorf^0,f,c
  4296   0026AC  EF4B  F013         	goto	u3185
  4297   0026B0                     u3187:
  4298   0026B0  C038  F03D         	movff	??_floorf+1,floorf@m
  4299   0026B4  C039  F03E         	movff	??_floorf+2,floorf@m+1
  4300   0026B8  C03A  F03F         	movff	??_floorf+3,floorf@m+2
  4301   0026BC  C03B  F040         	movff	??_floorf+4,floorf@m+3
  4302   0026C0  503D               	movf	floorf@m^0,w,c
  4303   0026C2  1443               	andwf	floorf@u^0,w,c
  4304   0026C4  6E37               	movwf	??_floorf^0,c
  4305   0026C6  503E               	movf	(floorf@m+1)^0,w,c
  4306   0026C8  1444               	andwf	(floorf@u+1)^0,w,c
  4307   0026CA  6E38               	movwf	(??_floorf+1)^0,c
  4308   0026CC  503F               	movf	(floorf@m+2)^0,w,c
  4309   0026CE  1445               	andwf	(floorf@u+2)^0,w,c
  4310   0026D0  6E39               	movwf	(??_floorf+2)^0,c
  4311   0026D2  5040               	movf	(floorf@m+3)^0,w,c
  4312   0026D4  1446               	andwf	(floorf@u+3)^0,w,c
  4313   0026D6  6E3A               	movwf	(??_floorf+3)^0,c
  4314   0026D8  5037               	movf	??_floorf^0,w,c
  4315   0026DA  1038               	iorwf	(??_floorf+1)^0,w,c
  4316   0026DC  1039               	iorwf	(??_floorf+2)^0,w,c
  4317   0026DE  103A               	iorwf	(??_floorf+3)^0,w,c
  4318   0026E0  A4D8               	btfss	status,2,c
  4319   0026E2  EF75  F013         	goto	u3191
  4320   0026E6  EF77  F013         	goto	u3190
  4321   0026EA                     u3191:
  4322   0026EA  EF79  F013         	goto	l3348
  4323   0026EE                     u3190:
  4324   0026EE  EF30  F013         	goto	l3340
  4325   0026F2                     l3348:
  4326   0026F2  C043  F037         	movff	floorf@u,??_floorf
  4327   0026F6  C044  F038         	movff	floorf@u+1,??_floorf+1
  4328   0026FA  C045  F039         	movff	floorf@u+2,??_floorf+2
  4329   0026FE  C046  F03A         	movff	floorf@u+3,??_floorf+3
  4330   002702  0E20               	movlw	32
  4331   002704  EF89  F013         	goto	u3200
  4332   002708                     u3205:
  4333   002708  90D8               	bcf	status,0,c
  4334   00270A  323A               	rrcf	(??_floorf+3)^0,f,c
  4335   00270C  3239               	rrcf	(??_floorf+2)^0,f,c
  4336   00270E  3238               	rrcf	(??_floorf+1)^0,f,c
  4337   002710  3237               	rrcf	??_floorf^0,f,c
  4338   002712                     u3200:
  4339   002712  2EE8               	decfsz	wreg,f,c
  4340   002714  EF84  F013         	goto	u3205
  4341   002718  5037               	movf	??_floorf^0,w,c
  4342   00271A  1038               	iorwf	(??_floorf+1)^0,w,c
  4343   00271C  1039               	iorwf	(??_floorf+2)^0,w,c
  4344   00271E  103A               	iorwf	(??_floorf+3)^0,w,c
  4345   002720  B4D8               	btfsc	status,2,c
  4346   002722  EF95  F013         	goto	u3211
  4347   002726  EF97  F013         	goto	u3210
  4348   00272A                     u3211:
  4349   00272A  EF9F  F013         	goto	l1010
  4350   00272E                     u3210:
  4351   00272E  503D               	movf	floorf@m^0,w,c
  4352   002730  2643               	addwf	floorf@u^0,f,c
  4353   002732  503E               	movf	(floorf@m+1)^0,w,c
  4354   002734  2244               	addwfc	(floorf@u+1)^0,f,c
  4355   002736  503F               	movf	(floorf@m+2)^0,w,c
  4356   002738  2245               	addwfc	(floorf@u+2)^0,f,c
  4357   00273A  5040               	movf	(floorf@m+3)^0,w,c
  4358   00273C  2246               	addwfc	(floorf@u+3)^0,f,c
  4359   00273E                     l1010:
  4360   00273E  1C3D               	comf	floorf@m^0,w,c
  4361   002740  6E37               	movwf	??_floorf^0,c
  4362   002742  1C3E               	comf	(floorf@m+1)^0,w,c
  4363   002744  6E38               	movwf	(??_floorf+1)^0,c
  4364   002746  1C3F               	comf	(floorf@m+2)^0,w,c
  4365   002748  6E39               	movwf	(??_floorf+2)^0,c
  4366   00274A  1C40               	comf	(floorf@m+3)^0,w,c
  4367   00274C  6E3A               	movwf	(??_floorf+3)^0,c
  4368   00274E  5037               	movf	??_floorf^0,w,c
  4369   002750  1643               	andwf	floorf@u^0,f,c
  4370   002752  5038               	movf	(??_floorf+1)^0,w,c
  4371   002754  1644               	andwf	(floorf@u+1)^0,f,c
  4372   002756  5039               	movf	(??_floorf+2)^0,w,c
  4373   002758  1645               	andwf	(floorf@u+2)^0,f,c
  4374   00275A  503A               	movf	(??_floorf+3)^0,w,c
  4375   00275C  1646               	andwf	(floorf@u+3)^0,f,c
  4376   00275E  EFF5  F013         	goto	l3360
  4377   002762                     l3352:
  4378   002762  C043  F037         	movff	floorf@u,??_floorf
  4379   002766  C044  F038         	movff	floorf@u+1,??_floorf+1
  4380   00276A  C045  F039         	movff	floorf@u+2,??_floorf+2
  4381   00276E  C046  F03A         	movff	floorf@u+3,??_floorf+3
  4382   002772  0E20               	movlw	32
  4383   002774  EFC1  F013         	goto	u3220
  4384   002778                     u3225:
  4385   002778  90D8               	bcf	status,0,c
  4386   00277A  323A               	rrcf	(??_floorf+3)^0,f,c
  4387   00277C  3239               	rrcf	(??_floorf+2)^0,f,c
  4388   00277E  3238               	rrcf	(??_floorf+1)^0,f,c
  4389   002780  3237               	rrcf	??_floorf^0,f,c
  4390   002782                     u3220:
  4391   002782  2EE8               	decfsz	wreg,f,c
  4392   002784  EFBC  F013         	goto	u3225
  4393   002788  5037               	movf	??_floorf^0,w,c
  4394   00278A  1038               	iorwf	(??_floorf+1)^0,w,c
  4395   00278C  1039               	iorwf	(??_floorf+2)^0,w,c
  4396   00278E  103A               	iorwf	(??_floorf+3)^0,w,c
  4397   002790  A4D8               	btfss	status,2,c
  4398   002792  EFCD  F013         	goto	u3231
  4399   002796  EFCF  F013         	goto	u3230
  4400   00279A                     u3231:
  4401   00279A  EFD9  F013         	goto	l3356
  4402   00279E                     u3230:
  4403   00279E  0E00               	movlw	0
  4404   0027A0  6E43               	movwf	floorf@u^0,c
  4405   0027A2  0E00               	movlw	0
  4406   0027A4  6E44               	movwf	(floorf@u+1)^0,c
  4407   0027A6  0E00               	movlw	0
  4408   0027A8  6E45               	movwf	(floorf@u+2)^0,c
  4409   0027AA  0E00               	movlw	0
  4410   0027AC  6E46               	movwf	(floorf@u+3)^0,c
  4411   0027AE  EFF5  F013         	goto	l3360
  4412   0027B2                     l3356:
  4413   0027B2  90D8               	bcf	status,0,c
  4414   0027B4  3443               	rlcf	floorf@u^0,w,c
  4415   0027B6  6E37               	movwf	??_floorf^0,c
  4416   0027B8  3444               	rlcf	(floorf@u+1)^0,w,c
  4417   0027BA  6E38               	movwf	(??_floorf+1)^0,c
  4418   0027BC  3445               	rlcf	(floorf@u+2)^0,w,c
  4419   0027BE  6E39               	movwf	(??_floorf+2)^0,c
  4420   0027C0  3446               	rlcf	(floorf@u+3)^0,w,c
  4421   0027C2  6E3A               	movwf	(??_floorf+3)^0,c
  4422   0027C4  5037               	movf	??_floorf^0,w,c
  4423   0027C6  1038               	iorwf	(??_floorf+1)^0,w,c
  4424   0027C8  1039               	iorwf	(??_floorf+2)^0,w,c
  4425   0027CA  103A               	iorwf	(??_floorf+3)^0,w,c
  4426   0027CC  B4D8               	btfsc	status,2,c
  4427   0027CE  EFEB  F013         	goto	u3241
  4428   0027D2  EFED  F013         	goto	u3240
  4429   0027D6                     u3241:
  4430   0027D6  EFF5  F013         	goto	l3360
  4431   0027DA                     u3240:
  4432   0027DA  0E00               	movlw	0
  4433   0027DC  6E43               	movwf	floorf@u^0,c
  4434   0027DE  0E00               	movlw	0
  4435   0027E0  6E44               	movwf	(floorf@u+1)^0,c
  4436   0027E2  0E80               	movlw	128
  4437   0027E4  6E45               	movwf	(floorf@u+2)^0,c
  4438   0027E6  0EBF               	movlw	191
  4439   0027E8  6E46               	movwf	(floorf@u+3)^0,c
  4440   0027EA                     l3360:
  4441   0027EA  C043  F033         	movff	floorf@u,?_floorf
  4442   0027EE  C044  F034         	movff	floorf@u+1,?_floorf+1
  4443   0027F2  C045  F035         	movff	floorf@u+2,?_floorf+2
  4444   0027F6  C046  F036         	movff	floorf@u+3,?_floorf+3
  4445   0027FA                     l1007:
  4446   0027FA  0012               	return		;funcret
  4447   0027FC                     __end_of_floorf:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function ___fpclassifyf *****************
  4451 ;; Defined at:
  4452 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  x               4    0[COMRAM] float 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  u               4   10[COMRAM] struct .
  4457 ;;  e               2    8[COMRAM] int 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  2    0[COMRAM] int 
  4460 ;; Registers used:
  4461 ;;		wreg, status,2, status,0
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4467 ;;      Params:         4       0       0       0       0       0       0       0       0
  4468 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4469 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4470 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4471 ;;Total ram usage:       14 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; This function calls:
  4474 ;;		Nothing
  4475 ;; This function is called by:
  4476 ;;		_efgtoa
  4477 ;; This function uses a non-reentrant model
  4478 ;;
  4479                           
  4480                           	psect	text15
  4481   002BBA                     __ptext15:
  4482                           	callstack 0
  4483   002BBA                     ___fpclassifyf:
  4484                           	callstack 26
  4485   002BBA  C0CD  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4486   002BBE  C0CE  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4487   002BC2  C0CF  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4488   002BC6  C0D0  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4489   002BCA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4490   002BCE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4491   002BD2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4492   002BD6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4493   002BDA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4494   002BDE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4495   002BE2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4496   002BE6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4497   002BEA  0E18               	movlw	24
  4498   002BEC  EFFD  F015         	goto	u3060
  4499   002BF0                     u3065:
  4500   002BF0  90D8               	bcf	status,0,c
  4501   002BF2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4502   002BF4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4503   002BF6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4504   002BF8  3205               	rrcf	??___fpclassifyf^0,f,c
  4505   002BFA                     u3060:
  4506   002BFA  2EE8               	decfsz	wreg,f,c
  4507   002BFC  EFF8  F015         	goto	u3065
  4508   002C00  5005               	movf	??___fpclassifyf^0,w,c
  4509   002C02  6E09               	movwf	___fpclassifyf@e^0,c
  4510   002C04  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4511   002C06  5009               	movf	___fpclassifyf@e^0,w,c
  4512   002C08  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4513   002C0A  A4D8               	btfss	status,2,c
  4514   002C0C  EF0A  F016         	goto	u3071
  4515   002C10  EF0C  F016         	goto	u3070
  4516   002C14                     u3071:
  4517   002C14  EF2C  F016         	goto	l3314
  4518   002C18                     u3070:
  4519   002C18  90D8               	bcf	status,0,c
  4520   002C1A  340B               	rlcf	___fpclassifyf@u^0,w,c
  4521   002C1C  6E05               	movwf	??___fpclassifyf^0,c
  4522   002C1E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4523   002C20  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4524   002C22  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4525   002C24  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4526   002C26  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4527   002C28  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4528   002C2A  5005               	movf	??___fpclassifyf^0,w,c
  4529   002C2C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4530   002C2E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4531   002C30  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4532   002C32  A4D8               	btfss	status,2,c
  4533   002C34  EF1E  F016         	goto	u3081
  4534   002C38  EF20  F016         	goto	u3080
  4535   002C3C                     u3081:
  4536   002C3C  EF26  F016         	goto	l3310
  4537   002C40                     u3080:
  4538   002C40  0E00               	movlw	0
  4539   002C42  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4540   002C44  0E02               	movlw	2
  4541   002C46  6E01               	movwf	?___fpclassifyf^0,c
  4542   002C48  EF5B  F016         	goto	l1000
  4543   002C4C                     l3310:
  4544   002C4C  0E00               	movlw	0
  4545   002C4E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4546   002C50  0E03               	movlw	3
  4547   002C52  6E01               	movwf	?___fpclassifyf^0,c
  4548   002C54  EF5B  F016         	goto	l1000
  4549   002C58                     l3314:
  4550   002C58  2809               	incf	___fpclassifyf@e^0,w,c
  4551   002C5A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4552   002C5C  A4D8               	btfss	status,2,c
  4553   002C5E  EF33  F016         	goto	u3091
  4554   002C62  EF35  F016         	goto	u3090
  4555   002C66                     u3091:
  4556   002C66  EF57  F016         	goto	l3320
  4557   002C6A                     u3090:
  4558   002C6A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4559   002C6E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4560   002C72  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4561   002C76  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4562   002C7A  0E09               	movlw	9
  4563   002C7C                     u3105:
  4564   002C7C  90D8               	bcf	status,0,c
  4565   002C7E  3605               	rlcf	??___fpclassifyf^0,f,c
  4566   002C80  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4567   002C82  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4568   002C84  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4569   002C86  2EE8               	decfsz	wreg,f,c
  4570   002C88  EF3E  F016         	goto	u3105
  4571   002C8C  5005               	movf	??___fpclassifyf^0,w,c
  4572   002C8E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4573   002C90  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4574   002C92  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4575   002C94  B4D8               	btfsc	status,2,c
  4576   002C96  EF4F  F016         	goto	u3111
  4577   002C9A  EF52  F016         	goto	u3110
  4578   002C9E                     u3111:
  4579   002C9E  0E01               	movlw	1
  4580   002CA0  EF53  F016         	goto	u3120
  4581   002CA4                     u3110:
  4582   002CA4  0E00               	movlw	0
  4583   002CA6                     u3120:
  4584   002CA6  6E01               	movwf	?___fpclassifyf^0,c
  4585   002CA8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4586   002CAA  EF5B  F016         	goto	l1000
  4587   002CAE                     l3320:
  4588   002CAE  0E00               	movlw	0
  4589   002CB0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4590   002CB2  0E04               	movlw	4
  4591   002CB4  6E01               	movwf	?___fpclassifyf^0,c
  4592   002CB6                     l1000:
  4593   002CB6  0012               	return		;funcret
  4594   002CB8                     __end_of___fpclassifyf:
  4595                           	callstack 0
  4596                           
  4597 ;; *************** function ___fltol *****************
  4598 ;; Defined at:
  4599 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  f1              4    0[COMRAM] int 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  exp1            1    9[COMRAM] unsigned char 
  4604 ;;  sign1           1    8[COMRAM] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  4    0[COMRAM] long 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4614 ;;      Params:         4       0       0       0       0       0       0       0       0
  4615 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4616 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4617 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4618 ;;Total ram usage:       10 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_efgtoa
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text16
  4628   0029B0                     __ptext16:
  4629                           	callstack 0
  4630   0029B0                     ___fltol:
  4631                           	callstack 26
  4632   0029B0  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4633   0029B2  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4634   0029B4  6E0A               	movwf	___fltol@exp1^0,c
  4635   0029B6  500A               	movf	___fltol@exp1^0,w,c
  4636   0029B8  A4D8               	btfss	status,2,c
  4637   0029BA  EFE1  F014         	goto	u2971
  4638   0029BE  EFE3  F014         	goto	u2970
  4639   0029C2                     u2971:
  4640   0029C2  EFED  F014         	goto	l3252
  4641   0029C6                     u2970:
  4642   0029C6                     l3248:
  4643   0029C6  0E00               	movlw	0
  4644   0029C8  6E01               	movwf	?___fltol^0,c
  4645   0029CA  0E00               	movlw	0
  4646   0029CC  6E02               	movwf	(?___fltol+1)^0,c
  4647   0029CE  0E00               	movlw	0
  4648   0029D0  6E03               	movwf	(?___fltol+2)^0,c
  4649   0029D2  0E00               	movlw	0
  4650   0029D4  6E04               	movwf	(?___fltol+3)^0,c
  4651   0029D6  EF5A  F015         	goto	l478
  4652   0029DA                     l3252:
  4653   0029DA  C001  F005         	movff	___fltol@f1,??___fltol
  4654   0029DE  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4655   0029E2  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4656   0029E6  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4657   0029EA  0E20               	movlw	32
  4658   0029EC  EFFD  F014         	goto	u2980
  4659   0029F0                     u2985:
  4660   0029F0  90D8               	bcf	status,0,c
  4661   0029F2  3208               	rrcf	(??___fltol+3)^0,f,c
  4662   0029F4  3207               	rrcf	(??___fltol+2)^0,f,c
  4663   0029F6  3206               	rrcf	(??___fltol+1)^0,f,c
  4664   0029F8  3205               	rrcf	??___fltol^0,f,c
  4665   0029FA                     u2980:
  4666   0029FA  2EE8               	decfsz	wreg,f,c
  4667   0029FC  EFF8  F014         	goto	u2985
  4668   002A00  5005               	movf	??___fltol^0,w,c
  4669   002A02  6E09               	movwf	___fltol@sign1^0,c
  4670   002A04  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4671   002A06  0EFF               	movlw	255
  4672   002A08  1601               	andwf	___fltol@f1^0,f,c
  4673   002A0A  0EFF               	movlw	255
  4674   002A0C  1602               	andwf	(___fltol@f1+1)^0,f,c
  4675   002A0E  0EFF               	movlw	255
  4676   002A10  1603               	andwf	(___fltol@f1+2)^0,f,c
  4677   002A12  0E00               	movlw	0
  4678   002A14  1604               	andwf	(___fltol@f1+3)^0,f,c
  4679   002A16  0E96               	movlw	150
  4680   002A18  5E0A               	subwf	___fltol@exp1^0,f,c
  4681   002A1A  BE0A               	btfsc	___fltol@exp1^0,7,c
  4682   002A1C  EF14  F015         	goto	u2990
  4683   002A20  EF12  F015         	goto	u2991
  4684   002A24                     u2991:
  4685   002A24  EF2A  F015         	goto	l3272
  4686   002A28                     u2990:
  4687   002A28  500A               	movf	___fltol@exp1^0,w,c
  4688   002A2A  0A80               	xorlw	128
  4689   002A2C  0F97               	addlw	151
  4690   002A2E  B0D8               	btfsc	status,0,c
  4691   002A30  EF1C  F015         	goto	u3001
  4692   002A34  EF1E  F015         	goto	u3000
  4693   002A38                     u3001:
  4694   002A38  EF20  F015         	goto	l3268
  4695   002A3C                     u3000:
  4696   002A3C  EFE3  F014         	goto	l3248
  4697   002A40                     l3268:
  4698   002A40  90D8               	bcf	status,0,c
  4699   002A42  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4700   002A44  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4701   002A46  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4702   002A48  3201               	rrcf	___fltol@f1^0,f,c
  4703   002A4A  3E0A               	incfsz	___fltol@exp1^0,f,c
  4704   002A4C  EF20  F015         	goto	l3268
  4705   002A50  EF42  F015         	goto	l3282
  4706   002A54                     l3272:
  4707   002A54  0E1F               	movlw	31
  4708   002A56  640A               	cpfsgt	___fltol@exp1^0,c
  4709   002A58  EF30  F015         	goto	u3011
  4710   002A5C  EF32  F015         	goto	u3010
  4711   002A60                     u3011:
  4712   002A60  EF3A  F015         	goto	l3280
  4713   002A64                     u3010:
  4714   002A64  EFE3  F014         	goto	l3248
  4715   002A68                     l3278:
  4716   002A68  90D8               	bcf	status,0,c
  4717   002A6A  3601               	rlcf	___fltol@f1^0,f,c
  4718   002A6C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4719   002A6E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4720   002A70  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4721   002A72  060A               	decf	___fltol@exp1^0,f,c
  4722   002A74                     l3280:
  4723   002A74  500A               	movf	___fltol@exp1^0,w,c
  4724   002A76  A4D8               	btfss	status,2,c
  4725   002A78  EF40  F015         	goto	u3021
  4726   002A7C  EF42  F015         	goto	u3020
  4727   002A80                     u3021:
  4728   002A80  EF34  F015         	goto	l3278
  4729   002A84                     u3020:
  4730   002A84                     l3282:
  4731   002A84  5009               	movf	___fltol@sign1^0,w,c
  4732   002A86  B4D8               	btfsc	status,2,c
  4733   002A88  EF48  F015         	goto	u3031
  4734   002A8C  EF4A  F015         	goto	u3030
  4735   002A90                     u3031:
  4736   002A90  EF52  F015         	goto	l3286
  4737   002A94                     u3030:
  4738   002A94  1E04               	comf	(___fltol@f1+3)^0,f,c
  4739   002A96  1E03               	comf	(___fltol@f1+2)^0,f,c
  4740   002A98  1E02               	comf	(___fltol@f1+1)^0,f,c
  4741   002A9A  6C01               	negf	___fltol@f1^0,c
  4742   002A9C  0E00               	movlw	0
  4743   002A9E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4744   002AA0  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4745   002AA2  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4746   002AA4                     l3286:
  4747   002AA4  C001  F001         	movff	___fltol@f1,?___fltol
  4748   002AA8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4749   002AAC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4750   002AB0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4751   002AB4                     l478:
  4752   002AB4  0012               	return		;funcret
  4753   002AB6                     __end_of___fltol:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function ___flsub *****************
  4757 ;; Defined at:
  4758 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;  b               4   25[COMRAM] long 
  4761 ;;  a               4   29[COMRAM] long 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;		None
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  4   25[COMRAM] long 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4773 ;;      Params:         8       0       0       0       0       0       0       0       0
  4774 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4776 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4777 ;;Total ram usage:        8 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 1
  4780 ;; This function calls:
  4781 ;;		___fladd
  4782 ;; This function is called by:
  4783 ;;		_efgtoa
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text17
  4788   003164                     __ptext17:
  4789                           	callstack 0
  4790   003164                     ___flsub:
  4791                           	callstack 25
  4792   003164  0E00               	movlw	0
  4793   003166  1A1E               	xorwf	___flsub@a^0,f,c
  4794   003168  0E00               	movlw	0
  4795   00316A  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4796   00316C  0E00               	movlw	0
  4797   00316E  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4798   003170  0E80               	movlw	128
  4799   003172  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4800   003174  C01A  F001         	movff	___flsub@b,___fladd@b
  4801   003178  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4802   00317C  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4803   003180  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4804   003184  C01E  F005         	movff	___flsub@a,___fladd@a
  4805   003188  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4806   00318C  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4807   003190  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4808   003194  EC45  F009         	call	___fladd	;wreg free
  4809   003198  C001  F01A         	movff	?___fladd,?___flsub
  4810   00319C  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4811   0031A0  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4812   0031A4  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4813   0031A8  0012               	return		;funcret
  4814   0031AA                     __end_of___flsub:
  4815                           	callstack 0
  4816                           
  4817 ;; *************** function ___fladd *****************
  4818 ;; Defined at:
  4819 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  b               4    0[COMRAM] long 
  4822 ;;  a               4    4[COMRAM] long 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  grs             1   15[COMRAM] unsigned char 
  4825 ;;  bexp            1   14[COMRAM] unsigned char 
  4826 ;;  aexp            1   13[COMRAM] unsigned char 
  4827 ;;  signs           1   12[COMRAM] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  4    0[COMRAM] unsigned char 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4837 ;;      Params:         8       0       0       0       0       0       0       0       0
  4838 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4839 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4840 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4841 ;;Total ram usage:       16 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		___flsub
  4847 ;;		_efgtoa
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text18
  4852   00128A                     __ptext18:
  4853                           	callstack 0
  4854   00128A                     ___fladd:
  4855                           	callstack 25
  4856   00128A  5004               	movf	(___fladd@b+3)^0,w,c
  4857   00128C  0B80               	andlw	128
  4858   00128E  6E0D               	movwf	___fladd@signs^0,c
  4859   001290  5004               	movf	(___fladd@b+3)^0,w,c
  4860   001292  2404               	addwf	(___fladd@b+3)^0,w,c
  4861   001294  6E0F               	movwf	___fladd@bexp^0,c
  4862   001296  AE03               	btfss	(___fladd@b+2)^0,7,c
  4863   001298  EF50  F009         	goto	u2061
  4864   00129C  EF52  F009         	goto	u2060
  4865   0012A0                     u2061:
  4866   0012A0  EF53  F009         	goto	l2712
  4867   0012A4                     u2060:
  4868   0012A4  800F               	bsf	___fladd@bexp^0,0,c
  4869   0012A6                     l2712:
  4870   0012A6  500F               	movf	___fladd@bexp^0,w,c
  4871   0012A8  B4D8               	btfsc	status,2,c
  4872   0012AA  EF59  F009         	goto	u2071
  4873   0012AE  EF5B  F009         	goto	u2070
  4874   0012B2                     u2071:
  4875   0012B2  EF70  F009         	goto	l2722
  4876   0012B6                     u2070:
  4877   0012B6  280F               	incf	___fladd@bexp^0,w,c
  4878   0012B8  A4D8               	btfss	status,2,c
  4879   0012BA  EF61  F009         	goto	u2081
  4880   0012BE  EF63  F009         	goto	u2080
  4881   0012C2                     u2081:
  4882   0012C2  EF6B  F009         	goto	l2718
  4883   0012C6                     u2080:
  4884   0012C6  0E00               	movlw	0
  4885   0012C8  6E01               	movwf	___fladd@b^0,c
  4886   0012CA  0E00               	movlw	0
  4887   0012CC  6E02               	movwf	(___fladd@b+1)^0,c
  4888   0012CE  0E00               	movlw	0
  4889   0012D0  6E03               	movwf	(___fladd@b+2)^0,c
  4890   0012D2  0E00               	movlw	0
  4891   0012D4  6E04               	movwf	(___fladd@b+3)^0,c
  4892   0012D6                     l2718:
  4893   0012D6  8E03               	bsf	(___fladd@b+2)^0,7,c
  4894   0012D8  0E00               	movlw	0
  4895   0012DA  6E04               	movwf	(___fladd@b+3)^0,c
  4896   0012DC  EF78  F009         	goto	l2724
  4897   0012E0                     l2722:
  4898   0012E0  0E00               	movlw	0
  4899   0012E2  6E01               	movwf	___fladd@b^0,c
  4900   0012E4  0E00               	movlw	0
  4901   0012E6  6E02               	movwf	(___fladd@b+1)^0,c
  4902   0012E8  0E00               	movlw	0
  4903   0012EA  6E03               	movwf	(___fladd@b+2)^0,c
  4904   0012EC  0E00               	movlw	0
  4905   0012EE  6E04               	movwf	(___fladd@b+3)^0,c
  4906   0012F0                     l2724:
  4907   0012F0  5008               	movf	(___fladd@a+3)^0,w,c
  4908   0012F2  0B80               	andlw	128
  4909   0012F4  6E0E               	movwf	___fladd@aexp^0,c
  4910   0012F6  500D               	movf	___fladd@signs^0,w,c
  4911   0012F8  180E               	xorwf	___fladd@aexp^0,w,c
  4912   0012FA  B4D8               	btfsc	status,2,c
  4913   0012FC  EF82  F009         	goto	u2091
  4914   001300  EF84  F009         	goto	u2090
  4915   001304                     u2091:
  4916   001304  EF85  F009         	goto	l2730
  4917   001308                     u2090:
  4918   001308  8C0D               	bsf	___fladd@signs^0,6,c
  4919   00130A                     l2730:
  4920   00130A  5008               	movf	(___fladd@a+3)^0,w,c
  4921   00130C  2408               	addwf	(___fladd@a+3)^0,w,c
  4922   00130E  6E0E               	movwf	___fladd@aexp^0,c
  4923   001310  AE07               	btfss	(___fladd@a+2)^0,7,c
  4924   001312  EF8D  F009         	goto	u2101
  4925   001316  EF8F  F009         	goto	u2100
  4926   00131A                     u2101:
  4927   00131A  EF90  F009         	goto	l2736
  4928   00131E                     u2100:
  4929   00131E  800E               	bsf	___fladd@aexp^0,0,c
  4930   001320                     l2736:
  4931   001320  500E               	movf	___fladd@aexp^0,w,c
  4932   001322  B4D8               	btfsc	status,2,c
  4933   001324  EF96  F009         	goto	u2111
  4934   001328  EF98  F009         	goto	u2110
  4935   00132C                     u2111:
  4936   00132C  EFAD  F009         	goto	l2746
  4937   001330                     u2110:
  4938   001330  280E               	incf	___fladd@aexp^0,w,c
  4939   001332  A4D8               	btfss	status,2,c
  4940   001334  EF9E  F009         	goto	u2121
  4941   001338  EFA0  F009         	goto	u2120
  4942   00133C                     u2121:
  4943   00133C  EFA8  F009         	goto	l2742
  4944   001340                     u2120:
  4945   001340  0E00               	movlw	0
  4946   001342  6E05               	movwf	___fladd@a^0,c
  4947   001344  0E00               	movlw	0
  4948   001346  6E06               	movwf	(___fladd@a+1)^0,c
  4949   001348  0E00               	movlw	0
  4950   00134A  6E07               	movwf	(___fladd@a+2)^0,c
  4951   00134C  0E00               	movlw	0
  4952   00134E  6E08               	movwf	(___fladd@a+3)^0,c
  4953   001350                     l2742:
  4954   001350  8E07               	bsf	(___fladd@a+2)^0,7,c
  4955   001352  0E00               	movlw	0
  4956   001354  6E08               	movwf	(___fladd@a+3)^0,c
  4957   001356  EFB5  F009         	goto	l2748
  4958   00135A                     l2746:
  4959   00135A  0E00               	movlw	0
  4960   00135C  6E05               	movwf	___fladd@a^0,c
  4961   00135E  0E00               	movlw	0
  4962   001360  6E06               	movwf	(___fladd@a+1)^0,c
  4963   001362  0E00               	movlw	0
  4964   001364  6E07               	movwf	(___fladd@a+2)^0,c
  4965   001366  0E00               	movlw	0
  4966   001368  6E08               	movwf	(___fladd@a+3)^0,c
  4967   00136A                     l2748:
  4968   00136A  500F               	movf	___fladd@bexp^0,w,c
  4969   00136C  5C0E               	subwf	___fladd@aexp^0,w,c
  4970   00136E  B0D8               	btfsc	status,0,c
  4971   001370  EFBC  F009         	goto	u2131
  4972   001374  EFBE  F009         	goto	u2130
  4973   001378                     u2131:
  4974   001378  EFE5  F009         	goto	l2784
  4975   00137C                     u2130:
  4976   00137C  AC0D               	btfss	___fladd@signs^0,6,c
  4977   00137E  EFC3  F009         	goto	u2141
  4978   001382  EFC5  F009         	goto	u2140
  4979   001386                     u2141:
  4980   001386  EFC7  F009         	goto	l2754
  4981   00138A                     u2140:
  4982   00138A  0E80               	movlw	128
  4983   00138C  1A0D               	xorwf	___fladd@signs^0,f,c
  4984   00138E                     l2754:
  4985   00138E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4986   001392  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4987   001396  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4988   00139A  C001  F010         	movff	___fladd@b,___fladd@grs
  4989   00139E  C005  F001         	movff	___fladd@a,___fladd@b
  4990   0013A2  C010  F005         	movff	___fladd@grs,___fladd@a
  4991   0013A6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4992   0013AA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4993   0013AE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4994   0013B2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4995   0013B6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4996   0013BA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4997   0013BE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4998   0013C2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4999   0013C6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5000   0013CA                     l2784:
  5001   0013CA  0E00               	movlw	0
  5002   0013CC  6E10               	movwf	___fladd@grs^0,c
  5003   0013CE  500F               	movf	___fladd@bexp^0,w,c
  5004   0013D0  C00E  F009         	movff	___fladd@aexp,??___fladd
  5005   0013D4  6A0A               	clrf	(??___fladd+1)^0,c
  5006   0013D6  5E09               	subwf	??___fladd^0,f,c
  5007   0013D8  0E00               	movlw	0
  5008   0013DA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5009   0013DC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5010   0013DE  EFFA  F009         	goto	u2151
  5011   0013E2  500A               	movf	(??___fladd+1)^0,w,c
  5012   0013E4  E109               	bnz	u2150
  5013   0013E6  0E1A               	movlw	26
  5014   0013E8  5C09               	subwf	??___fladd^0,w,c
  5015   0013EA  A0D8               	btfss	status,0,c
  5016   0013EC  EFFA  F009         	goto	u2151
  5017   0013F0  EFFC  F009         	goto	u2150
  5018   0013F4                     u2151:
  5019   0013F4  EF33  F00A         	goto	l710
  5020   0013F8                     u2150:
  5021   0013F8  5001               	movf	___fladd@b^0,w,c
  5022   0013FA  1002               	iorwf	(___fladd@b+1)^0,w,c
  5023   0013FC  1003               	iorwf	(___fladd@b+2)^0,w,c
  5024   0013FE  1004               	iorwf	(___fladd@b+3)^0,w,c
  5025   001400  A4D8               	btfss	status,2,c
  5026   001402  EF05  F00A         	goto	u2161
  5027   001406  EF08  F00A         	goto	u2160
  5028   00140A                     u2161:
  5029   00140A  0E01               	movlw	1
  5030   00140C  EF09  F00A         	goto	u2170
  5031   001410                     u2160:
  5032   001410  0E00               	movlw	0
  5033   001412                     u2170:
  5034   001412  6E10               	movwf	___fladd@grs^0,c
  5035   001414  0E00               	movlw	0
  5036   001416  6E01               	movwf	___fladd@b^0,c
  5037   001418  0E00               	movlw	0
  5038   00141A  6E02               	movwf	(___fladd@b+1)^0,c
  5039   00141C  0E00               	movlw	0
  5040   00141E  6E03               	movwf	(___fladd@b+2)^0,c
  5041   001420  0E00               	movlw	0
  5042   001422  6E04               	movwf	(___fladd@b+3)^0,c
  5043   001424  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5044   001428  EF3C  F00A         	goto	l709
  5045   00142C                     l711:
  5046   00142C  A010               	btfss	___fladd@grs^0,0,c
  5047   00142E  EF1B  F00A         	goto	u2181
  5048   001432  EF1D  F00A         	goto	u2180
  5049   001436                     u2181:
  5050   001436  EF23  F00A         	goto	l2796
  5051   00143A                     u2180:
  5052   00143A  90D8               	bcf	status,0,c
  5053   00143C  3010               	rrcf	___fladd@grs^0,w,c
  5054   00143E  0901               	iorlw	1
  5055   001440  6E10               	movwf	___fladd@grs^0,c
  5056   001442  EF25  F00A         	goto	l2798
  5057   001446                     l2796:
  5058   001446  90D8               	bcf	status,0,c
  5059   001448  3210               	rrcf	___fladd@grs^0,f,c
  5060   00144A                     l2798:
  5061   00144A  A001               	btfss	___fladd@b^0,0,c
  5062   00144C  EF2A  F00A         	goto	u2191
  5063   001450  EF2C  F00A         	goto	u2190
  5064   001454                     u2191:
  5065   001454  EF2D  F00A         	goto	l2802
  5066   001458                     u2190:
  5067   001458  8E10               	bsf	___fladd@grs^0,7,c
  5068   00145A                     l2802:
  5069   00145A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5070   00145C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5071   00145E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5072   001460  3202               	rrcf	(___fladd@b+1)^0,f,c
  5073   001462  3201               	rrcf	___fladd@b^0,f,c
  5074   001464  2A0F               	incf	___fladd@bexp^0,f,c
  5075   001466                     l710:
  5076   001466  500E               	movf	___fladd@aexp^0,w,c
  5077   001468  5C0F               	subwf	___fladd@bexp^0,w,c
  5078   00146A  A0D8               	btfss	status,0,c
  5079   00146C  EF3A  F00A         	goto	u2201
  5080   001470  EF3C  F00A         	goto	u2200
  5081   001474                     u2201:
  5082   001474  EF16  F00A         	goto	l711
  5083   001478                     u2200:
  5084   001478                     l709:
  5085   001478  BC0D               	btfsc	___fladd@signs^0,6,c
  5086   00147A  EF41  F00A         	goto	u2211
  5087   00147E  EF43  F00A         	goto	u2210
  5088   001482                     u2211:
  5089   001482  EF83  F00A         	goto	l2830
  5090   001486                     u2210:
  5091   001486  500F               	movf	___fladd@bexp^0,w,c
  5092   001488  A4D8               	btfss	status,2,c
  5093   00148A  EF49  F00A         	goto	u2221
  5094   00148E  EF4B  F00A         	goto	u2220
  5095   001492                     u2221:
  5096   001492  EF55  F00A         	goto	l2812
  5097   001496                     u2220:
  5098   001496  0E00               	movlw	0
  5099   001498  6E01               	movwf	?___fladd^0,c
  5100   00149A  0E00               	movlw	0
  5101   00149C  6E02               	movwf	(?___fladd+1)^0,c
  5102   00149E  0E00               	movlw	0
  5103   0014A0  6E03               	movwf	(?___fladd+2)^0,c
  5104   0014A2  0E00               	movlw	0
  5105   0014A4  6E04               	movwf	(?___fladd+3)^0,c
  5106   0014A6  EFA4  F00B         	goto	l718
  5107   0014AA                     l2812:
  5108   0014AA  5005               	movf	___fladd@a^0,w,c
  5109   0014AC  2601               	addwf	___fladd@b^0,f,c
  5110   0014AE  5006               	movf	(___fladd@a+1)^0,w,c
  5111   0014B0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5112   0014B2  5007               	movf	(___fladd@a+2)^0,w,c
  5113   0014B4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5114   0014B6  5008               	movf	(___fladd@a+3)^0,w,c
  5115   0014B8  2204               	addwfc	(___fladd@b+3)^0,f,c
  5116   0014BA  A004               	btfss	(___fladd@b+3)^0,0,c
  5117   0014BC  EF62  F00A         	goto	u2231
  5118   0014C0  EF64  F00A         	goto	u2230
  5119   0014C4                     u2231:
  5120   0014C4  EF10  F00B         	goto	l2866
  5121   0014C8                     u2230:
  5122   0014C8  A010               	btfss	___fladd@grs^0,0,c
  5123   0014CA  EF69  F00A         	goto	u2241
  5124   0014CE  EF6B  F00A         	goto	u2240
  5125   0014D2                     u2241:
  5126   0014D2  EF71  F00A         	goto	l2820
  5127   0014D6                     u2240:
  5128   0014D6  90D8               	bcf	status,0,c
  5129   0014D8  3010               	rrcf	___fladd@grs^0,w,c
  5130   0014DA  0901               	iorlw	1
  5131   0014DC  6E10               	movwf	___fladd@grs^0,c
  5132   0014DE  EF73  F00A         	goto	l2822
  5133   0014E2                     l2820:
  5134   0014E2  90D8               	bcf	status,0,c
  5135   0014E4  3210               	rrcf	___fladd@grs^0,f,c
  5136   0014E6                     l2822:
  5137   0014E6  A001               	btfss	___fladd@b^0,0,c
  5138   0014E8  EF78  F00A         	goto	u2251
  5139   0014EC  EF7A  F00A         	goto	u2250
  5140   0014F0                     u2251:
  5141   0014F0  EF7B  F00A         	goto	l2826
  5142   0014F4                     u2250:
  5143   0014F4  8E10               	bsf	___fladd@grs^0,7,c
  5144   0014F6                     l2826:
  5145   0014F6  3404               	rlcf	(___fladd@b+3)^0,w,c
  5146   0014F8  3204               	rrcf	(___fladd@b+3)^0,f,c
  5147   0014FA  3203               	rrcf	(___fladd@b+2)^0,f,c
  5148   0014FC  3202               	rrcf	(___fladd@b+1)^0,f,c
  5149   0014FE  3201               	rrcf	___fladd@b^0,f,c
  5150   001500  2A0F               	incf	___fladd@bexp^0,f,c
  5151   001502  EF10  F00B         	goto	l2866
  5152   001506                     l2830:
  5153   001506  5005               	movf	___fladd@a^0,w,c
  5154   001508  5C01               	subwf	___fladd@b^0,w,c
  5155   00150A  5006               	movf	(___fladd@a+1)^0,w,c
  5156   00150C  5802               	subwfb	(___fladd@b+1)^0,w,c
  5157   00150E  5007               	movf	(___fladd@a+2)^0,w,c
  5158   001510  5803               	subwfb	(___fladd@b+2)^0,w,c
  5159   001512  5004               	movf	(___fladd@b+3)^0,w,c
  5160   001514  0A80               	xorlw	128
  5161   001516  6E09               	movwf	??___fladd^0,c
  5162   001518  5008               	movf	(___fladd@a+3)^0,w,c
  5163   00151A  0A80               	xorlw	128
  5164   00151C  5809               	subwfb	??___fladd^0,w,c
  5165   00151E  B0D8               	btfsc	status,0,c
  5166   001520  EF94  F00A         	goto	u2261
  5167   001524  EF96  F00A         	goto	u2260
  5168   001528                     u2261:
  5169   001528  EFC1  F00A         	goto	l2840
  5170   00152C                     u2260:
  5171   00152C  5001               	movf	___fladd@b^0,w,c
  5172   00152E  5C05               	subwf	___fladd@a^0,w,c
  5173   001530  6E09               	movwf	??___fladd^0,c
  5174   001532  5002               	movf	(___fladd@b+1)^0,w,c
  5175   001534  5806               	subwfb	(___fladd@a+1)^0,w,c
  5176   001536  6E0A               	movwf	(??___fladd+1)^0,c
  5177   001538  5003               	movf	(___fladd@b+2)^0,w,c
  5178   00153A  5807               	subwfb	(___fladd@a+2)^0,w,c
  5179   00153C  6E0B               	movwf	(??___fladd+2)^0,c
  5180   00153E  5004               	movf	(___fladd@b+3)^0,w,c
  5181   001540  5808               	subwfb	(___fladd@a+3)^0,w,c
  5182   001542  6E0C               	movwf	(??___fladd+3)^0,c
  5183   001544  0EFF               	movlw	255
  5184   001546  2409               	addwf	??___fladd^0,w,c
  5185   001548  6E01               	movwf	___fladd@b^0,c
  5186   00154A  0EFF               	movlw	255
  5187   00154C  200A               	addwfc	(??___fladd+1)^0,w,c
  5188   00154E  6E02               	movwf	(___fladd@b+1)^0,c
  5189   001550  0EFF               	movlw	255
  5190   001552  200B               	addwfc	(??___fladd+2)^0,w,c
  5191   001554  6E03               	movwf	(___fladd@b+2)^0,c
  5192   001556  0EFF               	movlw	255
  5193   001558  200C               	addwfc	(??___fladd+3)^0,w,c
  5194   00155A  6E04               	movwf	(___fladd@b+3)^0,c
  5195   00155C  0E80               	movlw	128
  5196   00155E  1A0D               	xorwf	___fladd@signs^0,f,c
  5197   001560  6C10               	negf	___fladd@grs^0,c
  5198   001562  5010               	movf	___fladd@grs^0,w,c
  5199   001564  A4D8               	btfss	status,2,c
  5200   001566  EFB7  F00A         	goto	u2271
  5201   00156A  EFB9  F00A         	goto	u2270
  5202   00156E                     u2271:
  5203   00156E  EFC9  F00A         	goto	l726
  5204   001572                     u2270:
  5205   001572  0E01               	movlw	1
  5206   001574  2601               	addwf	___fladd@b^0,f,c
  5207   001576  0E00               	movlw	0
  5208   001578  2202               	addwfc	(___fladd@b+1)^0,f,c
  5209   00157A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5210   00157C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5211   00157E  EFC9  F00A         	goto	l726
  5212   001582                     l2840:
  5213   001582  5005               	movf	___fladd@a^0,w,c
  5214   001584  5E01               	subwf	___fladd@b^0,f,c
  5215   001586  5006               	movf	(___fladd@a+1)^0,w,c
  5216   001588  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5217   00158A  5007               	movf	(___fladd@a+2)^0,w,c
  5218   00158C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5219   00158E  5008               	movf	(___fladd@a+3)^0,w,c
  5220   001590  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5221   001592                     l726:
  5222   001592  5001               	movf	___fladd@b^0,w,c
  5223   001594  1002               	iorwf	(___fladd@b+1)^0,w,c
  5224   001596  1003               	iorwf	(___fladd@b+2)^0,w,c
  5225   001598  1004               	iorwf	(___fladd@b+3)^0,w,c
  5226   00159A  A4D8               	btfss	status,2,c
  5227   00159C  EFD2  F00A         	goto	u2281
  5228   0015A0  EFD4  F00A         	goto	u2280
  5229   0015A4                     u2281:
  5230   0015A4  EF09  F00B         	goto	l2864
  5231   0015A8                     u2280:
  5232   0015A8  5010               	movf	___fladd@grs^0,w,c
  5233   0015AA  A4D8               	btfss	status,2,c
  5234   0015AC  EFDA  F00A         	goto	u2291
  5235   0015B0  EFDC  F00A         	goto	u2290
  5236   0015B4                     u2291:
  5237   0015B4  EF09  F00B         	goto	l2864
  5238   0015B8                     u2290:
  5239   0015B8  0E00               	movlw	0
  5240   0015BA  6E01               	movwf	?___fladd^0,c
  5241   0015BC  0E00               	movlw	0
  5242   0015BE  6E02               	movwf	(?___fladd+1)^0,c
  5243   0015C0  0E00               	movlw	0
  5244   0015C2  6E03               	movwf	(?___fladd+2)^0,c
  5245   0015C4  0E00               	movlw	0
  5246   0015C6  6E04               	movwf	(?___fladd+3)^0,c
  5247   0015C8  EFA4  F00B         	goto	l718
  5248   0015CC                     l2848:
  5249   0015CC  90D8               	bcf	status,0,c
  5250   0015CE  3601               	rlcf	___fladd@b^0,f,c
  5251   0015D0  3602               	rlcf	(___fladd@b+1)^0,f,c
  5252   0015D2  3603               	rlcf	(___fladd@b+2)^0,f,c
  5253   0015D4  3604               	rlcf	(___fladd@b+3)^0,f,c
  5254   0015D6  AE10               	btfss	___fladd@grs^0,7,c
  5255   0015D8  EFF0  F00A         	goto	u2301
  5256   0015DC  EFF2  F00A         	goto	u2300
  5257   0015E0                     u2301:
  5258   0015E0  EFF3  F00A         	goto	l2854
  5259   0015E4                     u2300:
  5260   0015E4  8001               	bsf	___fladd@b^0,0,c
  5261   0015E6                     l2854:
  5262   0015E6  A010               	btfss	___fladd@grs^0,0,c
  5263   0015E8  EFF8  F00A         	goto	u2311
  5264   0015EC  EFFA  F00A         	goto	u2310
  5265   0015F0                     u2311:
  5266   0015F0  EFFE  F00A         	goto	l2858
  5267   0015F4                     u2310:
  5268   0015F4  80D8               	bsf	status,0,c
  5269   0015F6  3610               	rlcf	___fladd@grs^0,f,c
  5270   0015F8  EF00  F00B         	goto	l2860
  5271   0015FC                     l2858:
  5272   0015FC  90D8               	bcf	status,0,c
  5273   0015FE  3610               	rlcf	___fladd@grs^0,f,c
  5274   001600                     l2860:
  5275   001600  500F               	movf	___fladd@bexp^0,w,c
  5276   001602  B4D8               	btfsc	status,2,c
  5277   001604  EF06  F00B         	goto	u2321
  5278   001608  EF08  F00B         	goto	u2320
  5279   00160C                     u2321:
  5280   00160C  EF09  F00B         	goto	l2864
  5281   001610                     u2320:
  5282   001610  060F               	decf	___fladd@bexp^0,f,c
  5283   001612                     l2864:
  5284   001612  AE03               	btfss	(___fladd@b+2)^0,7,c
  5285   001614  EF0E  F00B         	goto	u2331
  5286   001618  EF10  F00B         	goto	u2330
  5287   00161C                     u2331:
  5288   00161C  EFE6  F00A         	goto	l2848
  5289   001620                     u2330:
  5290   001620                     l2866:
  5291   001620  0E00               	movlw	0
  5292   001622  6E0E               	movwf	___fladd@aexp^0,c
  5293   001624  AE10               	btfss	___fladd@grs^0,7,c
  5294   001626  EF17  F00B         	goto	u2341
  5295   00162A  EF19  F00B         	goto	u2340
  5296   00162E                     u2341:
  5297   00162E  EF31  F00B         	goto	l735
  5298   001632                     u2340:
  5299   001632  C010  F009         	movff	___fladd@grs,??___fladd
  5300   001636  0E7F               	movlw	127
  5301   001638  1609               	andwf	??___fladd^0,f,c
  5302   00163A  B4D8               	btfsc	status,2,c
  5303   00163C  EF22  F00B         	goto	u2351
  5304   001640  EF24  F00B         	goto	u2350
  5305   001644                     u2351:
  5306   001644  EF28  F00B         	goto	l736
  5307   001648                     u2350:
  5308   001648                     l2872:
  5309   001648  0E01               	movlw	1
  5310   00164A  6E0E               	movwf	___fladd@aexp^0,c
  5311   00164C  EF31  F00B         	goto	l735
  5312   001650                     l736:
  5313   001650  A001               	btfss	___fladd@b^0,0,c
  5314   001652  EF2D  F00B         	goto	u2361
  5315   001656  EF2F  F00B         	goto	u2360
  5316   00165A                     u2361:
  5317   00165A  EF31  F00B         	goto	l735
  5318   00165E                     u2360:
  5319   00165E  EF24  F00B         	goto	l2872
  5320   001662                     l735:
  5321   001662  500E               	movf	___fladd@aexp^0,w,c
  5322   001664  B4D8               	btfsc	status,2,c
  5323   001666  EF37  F00B         	goto	u2371
  5324   00166A  EF39  F00B         	goto	u2370
  5325   00166E                     u2371:
  5326   00166E  EF64  F00B         	goto	l2884
  5327   001672                     u2370:
  5328   001672  0E01               	movlw	1
  5329   001674  2601               	addwf	___fladd@b^0,f,c
  5330   001676  0E00               	movlw	0
  5331   001678  2202               	addwfc	(___fladd@b+1)^0,f,c
  5332   00167A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5333   00167C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5334   00167E  A004               	btfss	(___fladd@b+3)^0,0,c
  5335   001680  EF44  F00B         	goto	u2381
  5336   001684  EF46  F00B         	goto	u2380
  5337   001688                     u2381:
  5338   001688  EF64  F00B         	goto	l2884
  5339   00168C                     u2380:
  5340   00168C  C001  F009         	movff	___fladd@b,??___fladd
  5341   001690  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5342   001694  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5343   001698  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5344   00169C  340C               	rlcf	(??___fladd+3)^0,w,c
  5345   00169E  320C               	rrcf	(??___fladd+3)^0,f,c
  5346   0016A0  320B               	rrcf	(??___fladd+2)^0,f,c
  5347   0016A2  320A               	rrcf	(??___fladd+1)^0,f,c
  5348   0016A4  3209               	rrcf	??___fladd^0,f,c
  5349   0016A6  C009  F001         	movff	??___fladd,___fladd@b
  5350   0016AA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5351   0016AE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5352   0016B2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5353   0016B6  280F               	incf	___fladd@bexp^0,w,c
  5354   0016B8  B4D8               	btfsc	status,2,c
  5355   0016BA  EF61  F00B         	goto	u2391
  5356   0016BE  EF63  F00B         	goto	u2390
  5357   0016C2                     u2391:
  5358   0016C2  EF64  F00B         	goto	l2884
  5359   0016C6                     u2390:
  5360   0016C6  2A0F               	incf	___fladd@bexp^0,f,c
  5361   0016C8                     l2884:
  5362   0016C8  280F               	incf	___fladd@bexp^0,w,c
  5363   0016CA  B4D8               	btfsc	status,2,c
  5364   0016CC  EF6A  F00B         	goto	u2401
  5365   0016D0  EF6C  F00B         	goto	u2400
  5366   0016D4                     u2401:
  5367   0016D4  EF74  F00B         	goto	l2888
  5368   0016D8                     u2400:
  5369   0016D8  500F               	movf	___fladd@bexp^0,w,c
  5370   0016DA  A4D8               	btfss	status,2,c
  5371   0016DC  EF72  F00B         	goto	u2411
  5372   0016E0  EF74  F00B         	goto	u2410
  5373   0016E4                     u2411:
  5374   0016E4  EF86  F00B         	goto	l2892
  5375   0016E8                     u2410:
  5376   0016E8                     l2888:
  5377   0016E8  0E00               	movlw	0
  5378   0016EA  6E01               	movwf	___fladd@b^0,c
  5379   0016EC  0E00               	movlw	0
  5380   0016EE  6E02               	movwf	(___fladd@b+1)^0,c
  5381   0016F0  0E00               	movlw	0
  5382   0016F2  6E03               	movwf	(___fladd@b+2)^0,c
  5383   0016F4  0E00               	movlw	0
  5384   0016F6  6E04               	movwf	(___fladd@b+3)^0,c
  5385   0016F8  500F               	movf	___fladd@bexp^0,w,c
  5386   0016FA  A4D8               	btfss	status,2,c
  5387   0016FC  EF82  F00B         	goto	u2421
  5388   001700  EF84  F00B         	goto	u2420
  5389   001704                     u2421:
  5390   001704  EF86  F00B         	goto	l2892
  5391   001708                     u2420:
  5392   001708  0E00               	movlw	0
  5393   00170A  6E0D               	movwf	___fladd@signs^0,c
  5394   00170C                     l2892:
  5395   00170C  A00F               	btfss	___fladd@bexp^0,0,c
  5396   00170E  EF8B  F00B         	goto	u2431
  5397   001712  EF8D  F00B         	goto	u2430
  5398   001716                     u2431:
  5399   001716  EF90  F00B         	goto	l2896
  5400   00171A                     u2430:
  5401   00171A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5402   00171C  EF91  F00B         	goto	l2898
  5403   001720                     l2896:
  5404   001720  9E03               	bcf	(___fladd@b+2)^0,7,c
  5405   001722                     l2898:
  5406   001722  90D8               	bcf	status,0,c
  5407   001724  300F               	rrcf	___fladd@bexp^0,w,c
  5408   001726  6E04               	movwf	(___fladd@b+3)^0,c
  5409   001728  AE0D               	btfss	___fladd@signs^0,7,c
  5410   00172A  EF99  F00B         	goto	u2441
  5411   00172E  EF9B  F00B         	goto	u2440
  5412   001732                     u2441:
  5413   001732  EF9C  F00B         	goto	l2904
  5414   001736                     u2440:
  5415   001736  8E04               	bsf	(___fladd@b+3)^0,7,c
  5416   001738                     l2904:
  5417   001738  C001  F001         	movff	___fladd@b,?___fladd
  5418   00173C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5419   001740  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5420   001744  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5421   001748                     l718:
  5422   001748  0012               	return		;funcret
  5423   00174A                     __end_of___fladd:
  5424                           	callstack 0
  5425                           
  5426 ;; *************** function ___flneg *****************
  5427 ;; Defined at:
  5428 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;  f1              4    0[COMRAM] unsigned char 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;		None
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  4    0[COMRAM] unsigned char 
  5435 ;; Registers used:
  5436 ;;		wreg, status,2, status,0
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5442 ;;      Params:         4       0       0       0       0       0       0       0       0
  5443 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5445 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5446 ;;Total ram usage:        4 bytes
  5447 ;; Hardware stack levels used: 1
  5448 ;; This function calls:
  5449 ;;		Nothing
  5450 ;; This function is called by:
  5451 ;;		_efgtoa
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           	psect	text19
  5456   0032E0                     __ptext19:
  5457                           	callstack 0
  5458   0032E0                     ___flneg:
  5459                           	callstack 26
  5460   0032E0  5001               	movf	___flneg@f1^0,w,c
  5461   0032E2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5462   0032E4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5463   0032E6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5464   0032E8  B4D8               	btfsc	status,2,c
  5465   0032EA  EF79  F019         	goto	u2961
  5466   0032EE  EF7B  F019         	goto	u2960
  5467   0032F2                     u2961:
  5468   0032F2  EF83  F019         	goto	l3242
  5469   0032F6                     u2960:
  5470   0032F6  0E00               	movlw	0
  5471   0032F8  1A01               	xorwf	___flneg@f1^0,f,c
  5472   0032FA  0E00               	movlw	0
  5473   0032FC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5474   0032FE  0E00               	movlw	0
  5475   003300  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5476   003302  0E80               	movlw	128
  5477   003304  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5478   003306                     l3242:
  5479   003306  C001  F001         	movff	___flneg@f1,?___flneg
  5480   00330A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5481   00330E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5482   003312  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5483   003316  0012               	return		;funcret
  5484   003318                     __end_of___flneg:
  5485                           	callstack 0
  5486                           
  5487 ;; *************** function ___flmul *****************
  5488 ;; Defined at:
  5489 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  b               4    0[COMRAM] unsigned char 
  5492 ;;  a               4    4[COMRAM] unsigned char 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  prod            4   19[COMRAM] struct .
  5495 ;;  grs             4   13[COMRAM] unsigned long 
  5496 ;;  temp            2   23[COMRAM] struct .
  5497 ;;  bexp            1   18[COMRAM] unsigned char 
  5498 ;;  aexp            1   17[COMRAM] unsigned char 
  5499 ;;  sign            1   12[COMRAM] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  4    0[COMRAM] unsigned char 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0, prodl, prodh
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5509 ;;      Params:         8       0       0       0       0       0       0       0       0
  5510 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5511 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5512 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5513 ;;Total ram usage:       25 bytes
  5514 ;; Hardware stack levels used: 1
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_main
  5519 ;;		_efgtoa
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text20
  5524   001BB8                     __ptext20:
  5525                           	callstack 0
  5526   001BB8                     ___flmul:
  5527                           	callstack 26
  5528   001BB8  5004               	movf	(___flmul@b+3)^0,w,c
  5529   001BBA  0B80               	andlw	128
  5530   001BBC  6E0D               	movwf	___flmul@sign^0,c
  5531   001BBE  5004               	movf	(___flmul@b+3)^0,w,c
  5532   001BC0  2404               	addwf	(___flmul@b+3)^0,w,c
  5533   001BC2  6E13               	movwf	___flmul@bexp^0,c
  5534   001BC4  AE03               	btfss	(___flmul@b+2)^0,7,c
  5535   001BC6  EFE7  F00D         	goto	u2691
  5536   001BCA  EFE9  F00D         	goto	u2690
  5537   001BCE                     u2691:
  5538   001BCE  EFEA  F00D         	goto	l3070
  5539   001BD2                     u2690:
  5540   001BD2  8013               	bsf	___flmul@bexp^0,0,c
  5541   001BD4                     l3070:
  5542   001BD4  5013               	movf	___flmul@bexp^0,w,c
  5543   001BD6  B4D8               	btfsc	status,2,c
  5544   001BD8  EFF0  F00D         	goto	u2701
  5545   001BDC  EFF2  F00D         	goto	u2700
  5546   001BE0                     u2701:
  5547   001BE0  EF05  F00E         	goto	l3078
  5548   001BE4                     u2700:
  5549   001BE4  2813               	incf	___flmul@bexp^0,w,c
  5550   001BE6  A4D8               	btfss	status,2,c
  5551   001BE8  EFF8  F00D         	goto	u2711
  5552   001BEC  EFFA  F00D         	goto	u2710
  5553   001BF0                     u2711:
  5554   001BF0  EF02  F00E         	goto	l3076
  5555   001BF4                     u2710:
  5556   001BF4  0E00               	movlw	0
  5557   001BF6  6E01               	movwf	___flmul@b^0,c
  5558   001BF8  0E00               	movlw	0
  5559   001BFA  6E02               	movwf	(___flmul@b+1)^0,c
  5560   001BFC  0E00               	movlw	0
  5561   001BFE  6E03               	movwf	(___flmul@b+2)^0,c
  5562   001C00  0E00               	movlw	0
  5563   001C02  6E04               	movwf	(___flmul@b+3)^0,c
  5564   001C04                     l3076:
  5565   001C04  8E03               	bsf	(___flmul@b+2)^0,7,c
  5566   001C06  EF0D  F00E         	goto	l3080
  5567   001C0A                     l3078:
  5568   001C0A  0E00               	movlw	0
  5569   001C0C  6E01               	movwf	___flmul@b^0,c
  5570   001C0E  0E00               	movlw	0
  5571   001C10  6E02               	movwf	(___flmul@b+1)^0,c
  5572   001C12  0E00               	movlw	0
  5573   001C14  6E03               	movwf	(___flmul@b+2)^0,c
  5574   001C16  0E00               	movlw	0
  5575   001C18  6E04               	movwf	(___flmul@b+3)^0,c
  5576   001C1A                     l3080:
  5577   001C1A  5008               	movf	(___flmul@a+3)^0,w,c
  5578   001C1C  0B80               	andlw	128
  5579   001C1E  1A0D               	xorwf	___flmul@sign^0,f,c
  5580   001C20  5008               	movf	(___flmul@a+3)^0,w,c
  5581   001C22  2408               	addwf	(___flmul@a+3)^0,w,c
  5582   001C24  6E12               	movwf	___flmul@aexp^0,c
  5583   001C26  AE07               	btfss	(___flmul@a+2)^0,7,c
  5584   001C28  EF18  F00E         	goto	u2721
  5585   001C2C  EF1A  F00E         	goto	u2720
  5586   001C30                     u2721:
  5587   001C30  EF1B  F00E         	goto	l3088
  5588   001C34                     u2720:
  5589   001C34  8012               	bsf	___flmul@aexp^0,0,c
  5590   001C36                     l3088:
  5591   001C36  5012               	movf	___flmul@aexp^0,w,c
  5592   001C38  B4D8               	btfsc	status,2,c
  5593   001C3A  EF21  F00E         	goto	u2731
  5594   001C3E  EF23  F00E         	goto	u2730
  5595   001C42                     u2731:
  5596   001C42  EF36  F00E         	goto	l3096
  5597   001C46                     u2730:
  5598   001C46  2812               	incf	___flmul@aexp^0,w,c
  5599   001C48  A4D8               	btfss	status,2,c
  5600   001C4A  EF29  F00E         	goto	u2741
  5601   001C4E  EF2B  F00E         	goto	u2740
  5602   001C52                     u2741:
  5603   001C52  EF33  F00E         	goto	l3094
  5604   001C56                     u2740:
  5605   001C56  0E00               	movlw	0
  5606   001C58  6E05               	movwf	___flmul@a^0,c
  5607   001C5A  0E00               	movlw	0
  5608   001C5C  6E06               	movwf	(___flmul@a+1)^0,c
  5609   001C5E  0E00               	movlw	0
  5610   001C60  6E07               	movwf	(___flmul@a+2)^0,c
  5611   001C62  0E00               	movlw	0
  5612   001C64  6E08               	movwf	(___flmul@a+3)^0,c
  5613   001C66                     l3094:
  5614   001C66  8E07               	bsf	(___flmul@a+2)^0,7,c
  5615   001C68  EF3E  F00E         	goto	l795
  5616   001C6C                     l3096:
  5617   001C6C  0E00               	movlw	0
  5618   001C6E  6E05               	movwf	___flmul@a^0,c
  5619   001C70  0E00               	movlw	0
  5620   001C72  6E06               	movwf	(___flmul@a+1)^0,c
  5621   001C74  0E00               	movlw	0
  5622   001C76  6E07               	movwf	(___flmul@a+2)^0,c
  5623   001C78  0E00               	movlw	0
  5624   001C7A  6E08               	movwf	(___flmul@a+3)^0,c
  5625   001C7C                     l795:
  5626   001C7C  5012               	movf	___flmul@aexp^0,w,c
  5627   001C7E  B4D8               	btfsc	status,2,c
  5628   001C80  EF44  F00E         	goto	u2751
  5629   001C84  EF46  F00E         	goto	u2750
  5630   001C88                     u2751:
  5631   001C88  EF4E  F00E         	goto	l3100
  5632   001C8C                     u2750:
  5633   001C8C  5013               	movf	___flmul@bexp^0,w,c
  5634   001C8E  A4D8               	btfss	status,2,c
  5635   001C90  EF4C  F00E         	goto	u2761
  5636   001C94  EF4E  F00E         	goto	u2760
  5637   001C98                     u2761:
  5638   001C98  EF58  F00E         	goto	l3104
  5639   001C9C                     u2760:
  5640   001C9C                     l3100:
  5641   001C9C  0E00               	movlw	0
  5642   001C9E  6E01               	movwf	?___flmul^0,c
  5643   001CA0  0E00               	movlw	0
  5644   001CA2  6E02               	movwf	(?___flmul+1)^0,c
  5645   001CA4  0E00               	movlw	0
  5646   001CA6  6E03               	movwf	(?___flmul+2)^0,c
  5647   001CA8  0E00               	movlw	0
  5648   001CAA  6E04               	movwf	(?___flmul+3)^0,c
  5649   001CAC  EFF0  F00F         	goto	l799
  5650   001CB0                     l3104:
  5651   001CB0  5007               	movf	(___flmul@a+2)^0,w,c
  5652   001CB2  0201               	mulwf	___flmul@b^0,c
  5653   001CB4  CFF3 F018          	movff	prodl,___flmul@temp
  5654   001CB8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5655   001CBC  5018               	movf	___flmul@temp^0,w,c
  5656   001CBE  6E0E               	movwf	___flmul@grs^0,c
  5657   001CC0  6A0F               	clrf	(___flmul@grs+1)^0,c
  5658   001CC2  6A10               	clrf	(___flmul@grs+2)^0,c
  5659   001CC4  6A11               	clrf	(___flmul@grs+3)^0,c
  5660   001CC6  5019               	movf	(___flmul@temp+1)^0,w,c
  5661   001CC8  6E14               	movwf	___flmul@prod^0,c
  5662   001CCA  6A15               	clrf	(___flmul@prod+1)^0,c
  5663   001CCC  6A16               	clrf	(___flmul@prod+2)^0,c
  5664   001CCE  6A17               	clrf	(___flmul@prod+3)^0,c
  5665   001CD0  5006               	movf	(___flmul@a+1)^0,w,c
  5666   001CD2  0202               	mulwf	(___flmul@b+1)^0,c
  5667   001CD4  CFF3 F018          	movff	prodl,___flmul@temp
  5668   001CD8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5669   001CDC  5018               	movf	___flmul@temp^0,w,c
  5670   001CDE  260E               	addwf	___flmul@grs^0,f,c
  5671   001CE0  0E00               	movlw	0
  5672   001CE2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5673   001CE4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5674   001CE6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5675   001CE8  5019               	movf	(___flmul@temp+1)^0,w,c
  5676   001CEA  2614               	addwf	___flmul@prod^0,f,c
  5677   001CEC  0E00               	movlw	0
  5678   001CEE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5679   001CF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5680   001CF2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5681   001CF4  5005               	movf	___flmul@a^0,w,c
  5682   001CF6  0203               	mulwf	(___flmul@b+2)^0,c
  5683   001CF8  CFF3 F018          	movff	prodl,___flmul@temp
  5684   001CFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5685   001D00  5018               	movf	___flmul@temp^0,w,c
  5686   001D02  260E               	addwf	___flmul@grs^0,f,c
  5687   001D04  0E00               	movlw	0
  5688   001D06  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5689   001D08  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5690   001D0A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5691   001D0C  5019               	movf	(___flmul@temp+1)^0,w,c
  5692   001D0E  2614               	addwf	___flmul@prod^0,f,c
  5693   001D10  0E00               	movlw	0
  5694   001D12  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5695   001D14  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5696   001D16  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5697   001D18  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5698   001D1C  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5699   001D20  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5700   001D24  6A0E               	clrf	___flmul@grs^0,c
  5701   001D26  5005               	movf	___flmul@a^0,w,c
  5702   001D28  0202               	mulwf	(___flmul@b+1)^0,c
  5703   001D2A  CFF3 F018          	movff	prodl,___flmul@temp
  5704   001D2E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5705   001D32  5018               	movf	___flmul@temp^0,w,c
  5706   001D34  260E               	addwf	___flmul@grs^0,f,c
  5707   001D36  5019               	movf	(___flmul@temp+1)^0,w,c
  5708   001D38  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5709   001D3A  0E00               	movlw	0
  5710   001D3C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5711   001D3E  0E00               	movlw	0
  5712   001D40  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5713   001D42  5006               	movf	(___flmul@a+1)^0,w,c
  5714   001D44  0201               	mulwf	___flmul@b^0,c
  5715   001D46  CFF3 F018          	movff	prodl,___flmul@temp
  5716   001D4A  CFF4 F019          	movff	prodh,___flmul@temp+1
  5717   001D4E  5018               	movf	___flmul@temp^0,w,c
  5718   001D50  260E               	addwf	___flmul@grs^0,f,c
  5719   001D52  5019               	movf	(___flmul@temp+1)^0,w,c
  5720   001D54  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5721   001D56  0E00               	movlw	0
  5722   001D58  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5723   001D5A  0E00               	movlw	0
  5724   001D5C  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5725   001D5E  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5726   001D62  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5727   001D66  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5728   001D6A  6A0E               	clrf	___flmul@grs^0,c
  5729   001D6C  5005               	movf	___flmul@a^0,w,c
  5730   001D6E  0201               	mulwf	___flmul@b^0,c
  5731   001D70  CFF3 F018          	movff	prodl,___flmul@temp
  5732   001D74  CFF4 F019          	movff	prodh,___flmul@temp+1
  5733   001D78  5018               	movf	___flmul@temp^0,w,c
  5734   001D7A  260E               	addwf	___flmul@grs^0,f,c
  5735   001D7C  5019               	movf	(___flmul@temp+1)^0,w,c
  5736   001D7E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5737   001D80  0E00               	movlw	0
  5738   001D82  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5739   001D84  0E00               	movlw	0
  5740   001D86  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5741   001D88  5007               	movf	(___flmul@a+2)^0,w,c
  5742   001D8A  0202               	mulwf	(___flmul@b+1)^0,c
  5743   001D8C  CFF3 F018          	movff	prodl,___flmul@temp
  5744   001D90  CFF4 F019          	movff	prodh,___flmul@temp+1
  5745   001D94  5018               	movf	___flmul@temp^0,w,c
  5746   001D96  2614               	addwf	___flmul@prod^0,f,c
  5747   001D98  5019               	movf	(___flmul@temp+1)^0,w,c
  5748   001D9A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5749   001D9C  0E00               	movlw	0
  5750   001D9E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5751   001DA0  0E00               	movlw	0
  5752   001DA2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5753   001DA4  5006               	movf	(___flmul@a+1)^0,w,c
  5754   001DA6  0203               	mulwf	(___flmul@b+2)^0,c
  5755   001DA8  CFF3 F018          	movff	prodl,___flmul@temp
  5756   001DAC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5757   001DB0  5018               	movf	___flmul@temp^0,w,c
  5758   001DB2  2614               	addwf	___flmul@prod^0,f,c
  5759   001DB4  5019               	movf	(___flmul@temp+1)^0,w,c
  5760   001DB6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5761   001DB8  0E00               	movlw	0
  5762   001DBA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5763   001DBC  0E00               	movlw	0
  5764   001DBE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5765   001DC0  5007               	movf	(___flmul@a+2)^0,w,c
  5766   001DC2  0203               	mulwf	(___flmul@b+2)^0,c
  5767   001DC4  CFF3 F018          	movff	prodl,___flmul@temp
  5768   001DC8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5769   001DCC  5018               	movf	___flmul@temp^0,w,c
  5770   001DCE  6E09               	movwf	??___flmul^0,c
  5771   001DD0  5019               	movf	(___flmul@temp+1)^0,w,c
  5772   001DD2  6E0A               	movwf	(??___flmul+1)^0,c
  5773   001DD4  6A0B               	clrf	(??___flmul+2)^0,c
  5774   001DD6  6A0C               	clrf	(??___flmul+3)^0,c
  5775   001DD8  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5776   001DDC  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5777   001DE0  C009  F00A         	movff	??___flmul,??___flmul+1
  5778   001DE4  6A09               	clrf	??___flmul^0,c
  5779   001DE6  5009               	movf	??___flmul^0,w,c
  5780   001DE8  2614               	addwf	___flmul@prod^0,f,c
  5781   001DEA  500A               	movf	(??___flmul+1)^0,w,c
  5782   001DEC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5783   001DEE  500B               	movf	(??___flmul+2)^0,w,c
  5784   001DF0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5785   001DF2  500C               	movf	(??___flmul+3)^0,w,c
  5786   001DF4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5787   001DF6  C00E  F009         	movff	___flmul@grs,??___flmul
  5788   001DFA  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5789   001DFE  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5790   001E02  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5791   001E06  0E19               	movlw	25
  5792   001E08  EF0B  F00F         	goto	u2770
  5793   001E0C                     u2775:
  5794   001E0C  90D8               	bcf	status,0,c
  5795   001E0E  320C               	rrcf	(??___flmul+3)^0,f,c
  5796   001E10  320B               	rrcf	(??___flmul+2)^0,f,c
  5797   001E12  320A               	rrcf	(??___flmul+1)^0,f,c
  5798   001E14  3209               	rrcf	??___flmul^0,f,c
  5799   001E16                     u2770:
  5800   001E16  2EE8               	decfsz	wreg,f,c
  5801   001E18  EF06  F00F         	goto	u2775
  5802   001E1C  5009               	movf	??___flmul^0,w,c
  5803   001E1E  2614               	addwf	___flmul@prod^0,f,c
  5804   001E20  500A               	movf	(??___flmul+1)^0,w,c
  5805   001E22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5806   001E24  500B               	movf	(??___flmul+2)^0,w,c
  5807   001E26  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5808   001E28  500C               	movf	(??___flmul+3)^0,w,c
  5809   001E2A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5810   001E2C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5811   001E30  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5812   001E34  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5813   001E38  6A0E               	clrf	___flmul@grs^0,c
  5814   001E3A  5012               	movf	___flmul@aexp^0,w,c
  5815   001E3C  C013  F009         	movff	___flmul@bexp,??___flmul
  5816   001E40  6A0A               	clrf	(??___flmul+1)^0,c
  5817   001E42  2609               	addwf	??___flmul^0,f,c
  5818   001E44  0E00               	movlw	0
  5819   001E46  220A               	addwfc	(??___flmul+1)^0,f,c
  5820   001E48  0E82               	movlw	130
  5821   001E4A  2409               	addwf	??___flmul^0,w,c
  5822   001E4C  6E18               	movwf	___flmul@temp^0,c
  5823   001E4E  0EFF               	movlw	255
  5824   001E50  200A               	addwfc	(??___flmul+1)^0,w,c
  5825   001E52  6E19               	movwf	(___flmul@temp+1)^0,c
  5826   001E54  EF41  F00F         	goto	l3152
  5827   001E58                     l3146:
  5828   001E58  90D8               	bcf	status,0,c
  5829   001E5A  3614               	rlcf	___flmul@prod^0,f,c
  5830   001E5C  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5831   001E5E  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5832   001E60  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5833   001E62  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5834   001E64  EF36  F00F         	goto	u2781
  5835   001E68  EF38  F00F         	goto	u2780
  5836   001E6C                     u2781:
  5837   001E6C  EF39  F00F         	goto	l802
  5838   001E70                     u2780:
  5839   001E70  8014               	bsf	___flmul@prod^0,0,c
  5840   001E72                     l802:
  5841   001E72  90D8               	bcf	status,0,c
  5842   001E74  360E               	rlcf	___flmul@grs^0,f,c
  5843   001E76  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5844   001E78  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5845   001E7A  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5846   001E7C  0618               	decf	___flmul@temp^0,f,c
  5847   001E7E  A0D8               	btfss	status,0,c
  5848   001E80  0619               	decf	(___flmul@temp+1)^0,f,c
  5849   001E82                     l3152:
  5850   001E82  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5851   001E84  EF46  F00F         	goto	u2791
  5852   001E88  EF48  F00F         	goto	u2790
  5853   001E8C                     u2791:
  5854   001E8C  EF2C  F00F         	goto	l3146
  5855   001E90                     u2790:
  5856   001E90  0E00               	movlw	0
  5857   001E92  6E12               	movwf	___flmul@aexp^0,c
  5858   001E94  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5859   001E96  EF4F  F00F         	goto	u2801
  5860   001E9A  EF51  F00F         	goto	u2800
  5861   001E9E                     u2801:
  5862   001E9E  EF75  F00F         	goto	l804
  5863   001EA2                     u2800:
  5864   001EA2  0EFF               	movlw	255
  5865   001EA4  140E               	andwf	___flmul@grs^0,w,c
  5866   001EA6  6E09               	movwf	??___flmul^0,c
  5867   001EA8  0EFF               	movlw	255
  5868   001EAA  140F               	andwf	(___flmul@grs+1)^0,w,c
  5869   001EAC  6E0A               	movwf	(??___flmul+1)^0,c
  5870   001EAE  0EFF               	movlw	255
  5871   001EB0  1410               	andwf	(___flmul@grs+2)^0,w,c
  5872   001EB2  6E0B               	movwf	(??___flmul+2)^0,c
  5873   001EB4  0E7F               	movlw	127
  5874   001EB6  1411               	andwf	(___flmul@grs+3)^0,w,c
  5875   001EB8  6E0C               	movwf	(??___flmul+3)^0,c
  5876   001EBA  5009               	movf	??___flmul^0,w,c
  5877   001EBC  100A               	iorwf	(??___flmul+1)^0,w,c
  5878   001EBE  100B               	iorwf	(??___flmul+2)^0,w,c
  5879   001EC0  100C               	iorwf	(??___flmul+3)^0,w,c
  5880   001EC2  B4D8               	btfsc	status,2,c
  5881   001EC4  EF66  F00F         	goto	u2811
  5882   001EC8  EF68  F00F         	goto	u2810
  5883   001ECC                     u2811:
  5884   001ECC  EF6C  F00F         	goto	l805
  5885   001ED0                     u2810:
  5886   001ED0                     l3160:
  5887   001ED0  0E01               	movlw	1
  5888   001ED2  6E12               	movwf	___flmul@aexp^0,c
  5889   001ED4  EF75  F00F         	goto	l804
  5890   001ED8                     l805:
  5891   001ED8  A014               	btfss	___flmul@prod^0,0,c
  5892   001EDA  EF71  F00F         	goto	u2821
  5893   001EDE  EF73  F00F         	goto	u2820
  5894   001EE2                     u2821:
  5895   001EE2  EF75  F00F         	goto	l804
  5896   001EE6                     u2820:
  5897   001EE6  EF68  F00F         	goto	l3160
  5898   001EEA                     l804:
  5899   001EEA  5012               	movf	___flmul@aexp^0,w,c
  5900   001EEC  B4D8               	btfsc	status,2,c
  5901   001EEE  EF7B  F00F         	goto	u2831
  5902   001EF2  EF7D  F00F         	goto	u2830
  5903   001EF6                     u2831:
  5904   001EF6  EFA1  F00F         	goto	l3172
  5905   001EFA                     u2830:
  5906   001EFA  0E01               	movlw	1
  5907   001EFC  2614               	addwf	___flmul@prod^0,f,c
  5908   001EFE  0E00               	movlw	0
  5909   001F00  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5910   001F02  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5911   001F04  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5912   001F06  A017               	btfss	(___flmul@prod+3)^0,0,c
  5913   001F08  EF88  F00F         	goto	u2841
  5914   001F0C  EF8A  F00F         	goto	u2840
  5915   001F10                     u2841:
  5916   001F10  EFA1  F00F         	goto	l3172
  5917   001F14                     u2840:
  5918   001F14  C014  F009         	movff	___flmul@prod,??___flmul
  5919   001F18  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5920   001F1C  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5921   001F20  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5922   001F24  340C               	rlcf	(??___flmul+3)^0,w,c
  5923   001F26  320C               	rrcf	(??___flmul+3)^0,f,c
  5924   001F28  320B               	rrcf	(??___flmul+2)^0,f,c
  5925   001F2A  320A               	rrcf	(??___flmul+1)^0,f,c
  5926   001F2C  3209               	rrcf	??___flmul^0,f,c
  5927   001F2E  C009  F014         	movff	??___flmul,___flmul@prod
  5928   001F32  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5929   001F36  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5930   001F3A  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5931   001F3E  4A18               	infsnz	___flmul@temp^0,f,c
  5932   001F40  2A19               	incf	(___flmul@temp+1)^0,f,c
  5933   001F42                     l3172:
  5934   001F42  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5935   001F44  EFAC  F00F         	goto	u2851
  5936   001F48  5019               	movf	(___flmul@temp+1)^0,w,c
  5937   001F4A  E108               	bnz	u2850
  5938   001F4C  2818               	incf	___flmul@temp^0,w,c
  5939   001F4E  A0D8               	btfss	status,0,c
  5940   001F50  EFAC  F00F         	goto	u2851
  5941   001F54  EFAE  F00F         	goto	u2850
  5942   001F58                     u2851:
  5943   001F58  EFB8  F00F         	goto	l3176
  5944   001F5C                     u2850:
  5945   001F5C  0E00               	movlw	0
  5946   001F5E  6E14               	movwf	___flmul@prod^0,c
  5947   001F60  0E00               	movlw	0
  5948   001F62  6E15               	movwf	(___flmul@prod+1)^0,c
  5949   001F64  0E80               	movlw	128
  5950   001F66  6E16               	movwf	(___flmul@prod+2)^0,c
  5951   001F68  0E7F               	movlw	127
  5952   001F6A  6E17               	movwf	(___flmul@prod+3)^0,c
  5953   001F6C  EFE6  F00F         	goto	l3188
  5954   001F70                     l3176:
  5955   001F70  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5956   001F72  EFC5  F00F         	goto	u2860
  5957   001F76  5019               	movf	(___flmul@temp+1)^0,w,c
  5958   001F78  E106               	bnz	u2861
  5959   001F7A  0418               	decf	___flmul@temp^0,w,c
  5960   001F7C  B0D8               	btfsc	status,0,c
  5961   001F7E  EFC3  F00F         	goto	u2861
  5962   001F82  EFC5  F00F         	goto	u2860
  5963   001F86                     u2861:
  5964   001F86  EFD1  F00F         	goto	l812
  5965   001F8A                     u2860:
  5966   001F8A  0E00               	movlw	0
  5967   001F8C  6E14               	movwf	___flmul@prod^0,c
  5968   001F8E  0E00               	movlw	0
  5969   001F90  6E15               	movwf	(___flmul@prod+1)^0,c
  5970   001F92  0E00               	movlw	0
  5971   001F94  6E16               	movwf	(___flmul@prod+2)^0,c
  5972   001F96  0E00               	movlw	0
  5973   001F98  6E17               	movwf	(___flmul@prod+3)^0,c
  5974   001F9A  0E00               	movlw	0
  5975   001F9C  6E0D               	movwf	___flmul@sign^0,c
  5976   001F9E  EFE6  F00F         	goto	l3188
  5977   001FA2                     l812:
  5978   001FA2  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5979   001FA6  0EFF               	movlw	255
  5980   001FA8  1614               	andwf	___flmul@prod^0,f,c
  5981   001FAA  0EFF               	movlw	255
  5982   001FAC  1615               	andwf	(___flmul@prod+1)^0,f,c
  5983   001FAE  0E7F               	movlw	127
  5984   001FB0  1616               	andwf	(___flmul@prod+2)^0,f,c
  5985   001FB2  0E00               	movlw	0
  5986   001FB4  1617               	andwf	(___flmul@prod+3)^0,f,c
  5987   001FB6  A013               	btfss	___flmul@bexp^0,0,c
  5988   001FB8  EFE0  F00F         	goto	u2871
  5989   001FBC  EFE2  F00F         	goto	u2870
  5990   001FC0                     u2871:
  5991   001FC0  EFE3  F00F         	goto	l3186
  5992   001FC4                     u2870:
  5993   001FC4  8E16               	bsf	(___flmul@prod+2)^0,7,c
  5994   001FC6                     l3186:
  5995   001FC6  90D8               	bcf	status,0,c
  5996   001FC8  3013               	rrcf	___flmul@bexp^0,w,c
  5997   001FCA  6E17               	movwf	(___flmul@prod+3)^0,c
  5998   001FCC                     l3188:
  5999   001FCC  500D               	movf	___flmul@sign^0,w,c
  6000   001FCE  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6001   001FD0  C014  F001         	movff	___flmul@prod,?___flmul
  6002   001FD4  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6003   001FD8  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6004   001FDC  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6005   001FE0                     l799:
  6006   001FE0  0012               	return		;funcret
  6007   001FE2                     __end_of___flmul:
  6008                           	callstack 0
  6009                           
  6010 ;; *************** function ___flge *****************
  6011 ;; Defined at:
  6012 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;  ff1             4   25[COMRAM] unsigned char 
  6015 ;;  ff2             4   29[COMRAM] unsigned char 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;		None
  6018 ;; Return value:  Size  Location     Type
  6019 ;;		None               void
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6027 ;;      Params:         8       0       0       0       0       0       0       0       0
  6028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6029 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6030 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6031 ;;Total ram usage:       12 bytes
  6032 ;; Hardware stack levels used: 1
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_main
  6037 ;;		_efgtoa
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text21
  6042   002AB6                     __ptext21:
  6043                           	callstack 0
  6044   002AB6                     ___flge:
  6045                           	callstack 26
  6046   002AB6  0E00               	movlw	0
  6047   002AB8  141A               	andwf	___flge@ff1^0,w,c
  6048   002ABA  6E22               	movwf	??___flge^0,c
  6049   002ABC  0E00               	movlw	0
  6050   002ABE  141B               	andwf	(___flge@ff1+1)^0,w,c
  6051   002AC0  6E23               	movwf	(??___flge+1)^0,c
  6052   002AC2  0E80               	movlw	128
  6053   002AC4  141C               	andwf	(___flge@ff1+2)^0,w,c
  6054   002AC6  6E24               	movwf	(??___flge+2)^0,c
  6055   002AC8  0E7F               	movlw	127
  6056   002ACA  141D               	andwf	(___flge@ff1+3)^0,w,c
  6057   002ACC  6E25               	movwf	(??___flge+3)^0,c
  6058   002ACE  5022               	movf	??___flge^0,w,c
  6059   002AD0  1023               	iorwf	(??___flge+1)^0,w,c
  6060   002AD2  1024               	iorwf	(??___flge+2)^0,w,c
  6061   002AD4  1025               	iorwf	(??___flge+3)^0,w,c
  6062   002AD6  A4D8               	btfss	status,2,c
  6063   002AD8  EF70  F015         	goto	u2911
  6064   002ADC  EF72  F015         	goto	u2910
  6065   002AE0                     u2911:
  6066   002AE0  EF7A  F015         	goto	l3220
  6067   002AE4                     u2910:
  6068   002AE4  0E00               	movlw	0
  6069   002AE6  6E1A               	movwf	___flge@ff1^0,c
  6070   002AE8  0E00               	movlw	0
  6071   002AEA  6E1B               	movwf	(___flge@ff1+1)^0,c
  6072   002AEC  0E00               	movlw	0
  6073   002AEE  6E1C               	movwf	(___flge@ff1+2)^0,c
  6074   002AF0  0E00               	movlw	0
  6075   002AF2  6E1D               	movwf	(___flge@ff1+3)^0,c
  6076   002AF4                     l3220:
  6077   002AF4  0E00               	movlw	0
  6078   002AF6  141E               	andwf	___flge@ff2^0,w,c
  6079   002AF8  6E22               	movwf	??___flge^0,c
  6080   002AFA  0E00               	movlw	0
  6081   002AFC  141F               	andwf	(___flge@ff2+1)^0,w,c
  6082   002AFE  6E23               	movwf	(??___flge+1)^0,c
  6083   002B00  0E80               	movlw	128
  6084   002B02  1420               	andwf	(___flge@ff2+2)^0,w,c
  6085   002B04  6E24               	movwf	(??___flge+2)^0,c
  6086   002B06  0E7F               	movlw	127
  6087   002B08  1421               	andwf	(___flge@ff2+3)^0,w,c
  6088   002B0A  6E25               	movwf	(??___flge+3)^0,c
  6089   002B0C  5022               	movf	??___flge^0,w,c
  6090   002B0E  1023               	iorwf	(??___flge+1)^0,w,c
  6091   002B10  1024               	iorwf	(??___flge+2)^0,w,c
  6092   002B12  1025               	iorwf	(??___flge+3)^0,w,c
  6093   002B14  A4D8               	btfss	status,2,c
  6094   002B16  EF8F  F015         	goto	u2921
  6095   002B1A  EF91  F015         	goto	u2920
  6096   002B1E                     u2921:
  6097   002B1E  EF99  F015         	goto	l3224
  6098   002B22                     u2920:
  6099   002B22  0E00               	movlw	0
  6100   002B24  6E1E               	movwf	___flge@ff2^0,c
  6101   002B26  0E00               	movlw	0
  6102   002B28  6E1F               	movwf	(___flge@ff2+1)^0,c
  6103   002B2A  0E00               	movlw	0
  6104   002B2C  6E20               	movwf	(___flge@ff2+2)^0,c
  6105   002B2E  0E00               	movlw	0
  6106   002B30  6E21               	movwf	(___flge@ff2+3)^0,c
  6107   002B32                     l3224:
  6108   002B32  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6109   002B34  EF9E  F015         	goto	u2931
  6110   002B38  EFA0  F015         	goto	u2930
  6111   002B3C                     u2931:
  6112   002B3C  EFA9  F015         	goto	l3228
  6113   002B40                     u2930:
  6114   002B40  6C1A               	negf	___flge@ff1^0,c
  6115   002B42  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6116   002B44  B0D8               	btfsc	status,0,c
  6117   002B46  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6118   002B48  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6119   002B4A  B0D8               	btfsc	status,0,c
  6120   002B4C  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6121   002B4E  0E80               	movlw	128
  6122   002B50  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6123   002B52                     l3228:
  6124   002B52  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6125   002B54  EFAE  F015         	goto	u2941
  6126   002B58  EFB0  F015         	goto	u2940
  6127   002B5C                     u2941:
  6128   002B5C  EFB9  F015         	goto	l446
  6129   002B60                     u2940:
  6130   002B60  6C1E               	negf	___flge@ff2^0,c
  6131   002B62  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6132   002B64  B0D8               	btfsc	status,0,c
  6133   002B66  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6134   002B68  1E20               	comf	(___flge@ff2+2)^0,f,c
  6135   002B6A  B0D8               	btfsc	status,0,c
  6136   002B6C  2A20               	incf	(___flge@ff2+2)^0,f,c
  6137   002B6E  0E80               	movlw	128
  6138   002B70  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6139   002B72                     l446:
  6140   002B72  0E00               	movlw	0
  6141   002B74  1A1A               	xorwf	___flge@ff1^0,f,c
  6142   002B76  0E00               	movlw	0
  6143   002B78  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6144   002B7A  0E00               	movlw	0
  6145   002B7C  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6146   002B7E  0E80               	movlw	128
  6147   002B80  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6148   002B82  0E00               	movlw	0
  6149   002B84  1A1E               	xorwf	___flge@ff2^0,f,c
  6150   002B86  0E00               	movlw	0
  6151   002B88  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6152   002B8A  0E00               	movlw	0
  6153   002B8C  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6154   002B8E  0E80               	movlw	128
  6155   002B90  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6156   002B92  501E               	movf	___flge@ff2^0,w,c
  6157   002B94  5C1A               	subwf	___flge@ff1^0,w,c
  6158   002B96  501F               	movf	(___flge@ff2+1)^0,w,c
  6159   002B98  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6160   002B9A  5020               	movf	(___flge@ff2+2)^0,w,c
  6161   002B9C  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6162   002B9E  5021               	movf	(___flge@ff2+3)^0,w,c
  6163   002BA0  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6164   002BA2  B0D8               	btfsc	status,0,c
  6165   002BA4  EFD6  F015         	goto	u2951
  6166   002BA8  EFD8  F015         	goto	u2950
  6167   002BAC                     u2951:
  6168   002BAC  EFDB  F015         	goto	l3234
  6169   002BB0                     u2950:
  6170   002BB0  90D8               	bcf	status,0,c
  6171   002BB2  EFDC  F015         	goto	l451
  6172   002BB6                     l3234:
  6173   002BB6  80D8               	bsf	status,0,c
  6174   002BB8                     l451:
  6175   002BB8  0012               	return		;funcret
  6176   002BBA                     __end_of___flge:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function ___fleq *****************
  6180 ;; Defined at:
  6181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  ff1             4    0[COMRAM] unsigned char 
  6184 ;;  ff2             4    4[COMRAM] unsigned char 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;		None               void
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6196 ;;      Params:         8       0       0       0       0       0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6198 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6199 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6200 ;;Total ram usage:       12 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_efgtoa
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text22
  6210   002D62                     __ptext22:
  6211                           	callstack 0
  6212   002D62                     ___fleq:
  6213                           	callstack 26
  6214   002D62  0E00               	movlw	0
  6215   002D64  1401               	andwf	___fleq@ff1^0,w,c
  6216   002D66  6E09               	movwf	??___fleq^0,c
  6217   002D68  0E00               	movlw	0
  6218   002D6A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6219   002D6C  6E0A               	movwf	(??___fleq+1)^0,c
  6220   002D6E  0E80               	movlw	128
  6221   002D70  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6222   002D72  6E0B               	movwf	(??___fleq+2)^0,c
  6223   002D74  0E7F               	movlw	127
  6224   002D76  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6225   002D78  6E0C               	movwf	(??___fleq+3)^0,c
  6226   002D7A  5009               	movf	??___fleq^0,w,c
  6227   002D7C  100A               	iorwf	(??___fleq+1)^0,w,c
  6228   002D7E  100B               	iorwf	(??___fleq+2)^0,w,c
  6229   002D80  100C               	iorwf	(??___fleq+3)^0,w,c
  6230   002D82  A4D8               	btfss	status,2,c
  6231   002D84  EFC6  F016         	goto	u2881
  6232   002D88  EFC8  F016         	goto	u2880
  6233   002D8C                     u2881:
  6234   002D8C  EFD0  F016         	goto	l3204
  6235   002D90                     u2880:
  6236   002D90  0E00               	movlw	0
  6237   002D92  6E01               	movwf	___fleq@ff1^0,c
  6238   002D94  0E00               	movlw	0
  6239   002D96  6E02               	movwf	(___fleq@ff1+1)^0,c
  6240   002D98  0E00               	movlw	0
  6241   002D9A  6E03               	movwf	(___fleq@ff1+2)^0,c
  6242   002D9C  0E00               	movlw	0
  6243   002D9E  6E04               	movwf	(___fleq@ff1+3)^0,c
  6244   002DA0                     l3204:
  6245   002DA0  0E00               	movlw	0
  6246   002DA2  1405               	andwf	___fleq@ff2^0,w,c
  6247   002DA4  6E09               	movwf	??___fleq^0,c
  6248   002DA6  0E00               	movlw	0
  6249   002DA8  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6250   002DAA  6E0A               	movwf	(??___fleq+1)^0,c
  6251   002DAC  0E80               	movlw	128
  6252   002DAE  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6253   002DB0  6E0B               	movwf	(??___fleq+2)^0,c
  6254   002DB2  0E7F               	movlw	127
  6255   002DB4  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6256   002DB6  6E0C               	movwf	(??___fleq+3)^0,c
  6257   002DB8  5009               	movf	??___fleq^0,w,c
  6258   002DBA  100A               	iorwf	(??___fleq+1)^0,w,c
  6259   002DBC  100B               	iorwf	(??___fleq+2)^0,w,c
  6260   002DBE  100C               	iorwf	(??___fleq+3)^0,w,c
  6261   002DC0  A4D8               	btfss	status,2,c
  6262   002DC2  EFE5  F016         	goto	u2891
  6263   002DC6  EFE7  F016         	goto	u2890
  6264   002DCA                     u2891:
  6265   002DCA  EFEF  F016         	goto	l3208
  6266   002DCE                     u2890:
  6267   002DCE  0E00               	movlw	0
  6268   002DD0  6E05               	movwf	___fleq@ff2^0,c
  6269   002DD2  0E00               	movlw	0
  6270   002DD4  6E06               	movwf	(___fleq@ff2+1)^0,c
  6271   002DD6  0E00               	movlw	0
  6272   002DD8  6E07               	movwf	(___fleq@ff2+2)^0,c
  6273   002DDA  0E00               	movlw	0
  6274   002DDC  6E08               	movwf	(___fleq@ff2+3)^0,c
  6275   002DDE                     l3208:
  6276   002DDE  5005               	movf	___fleq@ff2^0,w,c
  6277   002DE0  1801               	xorwf	___fleq@ff1^0,w,c
  6278   002DE2  E10F               	bnz	u2900
  6279   002DE4  5006               	movf	(___fleq@ff2+1)^0,w,c
  6280   002DE6  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6281   002DE8  E10C               	bnz	u2900
  6282   002DEA  5007               	movf	(___fleq@ff2+2)^0,w,c
  6283   002DEC  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6284   002DEE  E109               	bnz	u2900
  6285   002DF0  5008               	movf	(___fleq@ff2+3)^0,w,c
  6286   002DF2  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6287   002DF4  B4D8               	btfsc	status,2,c
  6288   002DF6  EFFF  F016         	goto	u2901
  6289   002DFA  EF01  F017         	goto	u2900
  6290   002DFE                     u2901:
  6291   002DFE  EF04  F017         	goto	l3212
  6292   002E02                     u2900:
  6293   002E02  90D8               	bcf	status,0,c
  6294   002E04  EF05  F017         	goto	l440
  6295   002E08                     l3212:
  6296   002E08  80D8               	bsf	status,0,c
  6297   002E0A                     l440:
  6298   002E0A  0012               	return		;funcret
  6299   002E0C                     __end_of___fleq:
  6300                           	callstack 0
  6301                           
  6302 ;; *************** function ___fldiv *****************
  6303 ;; Defined at:
  6304 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  b               4   25[COMRAM] unsigned char 
  6307 ;;  a               4   29[COMRAM] unsigned char 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  grs             4   44[COMRAM] unsigned long 
  6310 ;;  rem             4   37[COMRAM] unsigned long 
  6311 ;;  new_exp         2   42[COMRAM] short 
  6312 ;;  aexp            1   49[COMRAM] unsigned char 
  6313 ;;  bexp            1   48[COMRAM] unsigned char 
  6314 ;;  sign            1   41[COMRAM] unsigned char 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  4   25[COMRAM] unsigned char 
  6317 ;; Registers used:
  6318 ;;		wreg, status,2, status,0
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6324 ;;      Params:         8       0       0       0       0       0       0       0       0
  6325 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6326 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6327 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6328 ;;Total ram usage:       25 bytes
  6329 ;; Hardware stack levels used: 1
  6330 ;; This function calls:
  6331 ;;		Nothing
  6332 ;; This function is called by:
  6333 ;;		_main
  6334 ;;		_efgtoa
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text23
  6339   001FE2                     __ptext23:
  6340                           	callstack 0
  6341   001FE2                     ___fldiv:
  6342                           	callstack 26
  6343   001FE2  501D               	movf	(___fldiv@b+3)^0,w,c
  6344   001FE4  0B80               	andlw	128
  6345   001FE6  6E2A               	movwf	___fldiv@sign^0,c
  6346   001FE8  501D               	movf	(___fldiv@b+3)^0,w,c
  6347   001FEA  241D               	addwf	(___fldiv@b+3)^0,w,c
  6348   001FEC  6E31               	movwf	___fldiv@bexp^0,c
  6349   001FEE  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  6350   001FF0  EFFC  F00F         	goto	u2461
  6351   001FF4  EFFE  F00F         	goto	u2460
  6352   001FF8                     u2461:
  6353   001FF8  EFFF  F00F         	goto	l2932
  6354   001FFC                     u2460:
  6355   001FFC  8031               	bsf	___fldiv@bexp^0,0,c
  6356   001FFE                     l2932:
  6357   001FFE  5031               	movf	___fldiv@bexp^0,w,c
  6358   002000  B4D8               	btfsc	status,2,c
  6359   002002  EF05  F010         	goto	u2471
  6360   002006  EF07  F010         	goto	u2470
  6361   00200A                     u2471:
  6362   00200A  EF1C  F010         	goto	l2942
  6363   00200E                     u2470:
  6364   00200E  2831               	incf	___fldiv@bexp^0,w,c
  6365   002010  A4D8               	btfss	status,2,c
  6366   002012  EF0D  F010         	goto	u2481
  6367   002016  EF0F  F010         	goto	u2480
  6368   00201A                     u2481:
  6369   00201A  EF17  F010         	goto	l2938
  6370   00201E                     u2480:
  6371   00201E  0E00               	movlw	0
  6372   002020  6E1A               	movwf	___fldiv@b^0,c
  6373   002022  0E00               	movlw	0
  6374   002024  6E1B               	movwf	(___fldiv@b+1)^0,c
  6375   002026  0E00               	movlw	0
  6376   002028  6E1C               	movwf	(___fldiv@b+2)^0,c
  6377   00202A  0E00               	movlw	0
  6378   00202C  6E1D               	movwf	(___fldiv@b+3)^0,c
  6379   00202E                     l2938:
  6380   00202E  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  6381   002030  0E00               	movlw	0
  6382   002032  6E1D               	movwf	(___fldiv@b+3)^0,c
  6383   002034  EF24  F010         	goto	l2944
  6384   002038                     l2942:
  6385   002038  0E00               	movlw	0
  6386   00203A  6E1A               	movwf	___fldiv@b^0,c
  6387   00203C  0E00               	movlw	0
  6388   00203E  6E1B               	movwf	(___fldiv@b+1)^0,c
  6389   002040  0E00               	movlw	0
  6390   002042  6E1C               	movwf	(___fldiv@b+2)^0,c
  6391   002044  0E00               	movlw	0
  6392   002046  6E1D               	movwf	(___fldiv@b+3)^0,c
  6393   002048                     l2944:
  6394   002048  5021               	movf	(___fldiv@a+3)^0,w,c
  6395   00204A  0B80               	andlw	128
  6396   00204C  1A2A               	xorwf	___fldiv@sign^0,f,c
  6397   00204E  5021               	movf	(___fldiv@a+3)^0,w,c
  6398   002050  2421               	addwf	(___fldiv@a+3)^0,w,c
  6399   002052  6E32               	movwf	___fldiv@aexp^0,c
  6400   002054  AE20               	btfss	(___fldiv@a+2)^0,7,c
  6401   002056  EF2F  F010         	goto	u2491
  6402   00205A  EF31  F010         	goto	u2490
  6403   00205E                     u2491:
  6404   00205E  EF32  F010         	goto	l2952
  6405   002062                     u2490:
  6406   002062  8032               	bsf	___fldiv@aexp^0,0,c
  6407   002064                     l2952:
  6408   002064  5032               	movf	___fldiv@aexp^0,w,c
  6409   002066  B4D8               	btfsc	status,2,c
  6410   002068  EF38  F010         	goto	u2501
  6411   00206C  EF3A  F010         	goto	u2500
  6412   002070                     u2501:
  6413   002070  EF4F  F010         	goto	l2962
  6414   002074                     u2500:
  6415   002074  2832               	incf	___fldiv@aexp^0,w,c
  6416   002076  A4D8               	btfss	status,2,c
  6417   002078  EF40  F010         	goto	u2511
  6418   00207C  EF42  F010         	goto	u2510
  6419   002080                     u2511:
  6420   002080  EF4A  F010         	goto	l2958
  6421   002084                     u2510:
  6422   002084  0E00               	movlw	0
  6423   002086  6E1E               	movwf	___fldiv@a^0,c
  6424   002088  0E00               	movlw	0
  6425   00208A  6E1F               	movwf	(___fldiv@a+1)^0,c
  6426   00208C  0E00               	movlw	0
  6427   00208E  6E20               	movwf	(___fldiv@a+2)^0,c
  6428   002090  0E00               	movlw	0
  6429   002092  6E21               	movwf	(___fldiv@a+3)^0,c
  6430   002094                     l2958:
  6431   002094  8E20               	bsf	(___fldiv@a+2)^0,7,c
  6432   002096  0E00               	movlw	0
  6433   002098  6E21               	movwf	(___fldiv@a+3)^0,c
  6434   00209A  EF57  F010         	goto	l2964
  6435   00209E                     l2962:
  6436   00209E  0E00               	movlw	0
  6437   0020A0  6E1E               	movwf	___fldiv@a^0,c
  6438   0020A2  0E00               	movlw	0
  6439   0020A4  6E1F               	movwf	(___fldiv@a+1)^0,c
  6440   0020A6  0E00               	movlw	0
  6441   0020A8  6E20               	movwf	(___fldiv@a+2)^0,c
  6442   0020AA  0E00               	movlw	0
  6443   0020AC  6E21               	movwf	(___fldiv@a+3)^0,c
  6444   0020AE                     l2964:
  6445   0020AE  501E               	movf	___fldiv@a^0,w,c
  6446   0020B0  101F               	iorwf	(___fldiv@a+1)^0,w,c
  6447   0020B2  1020               	iorwf	(___fldiv@a+2)^0,w,c
  6448   0020B4  1021               	iorwf	(___fldiv@a+3)^0,w,c
  6449   0020B6  A4D8               	btfss	status,2,c
  6450   0020B8  EF60  F010         	goto	u2521
  6451   0020BC  EF62  F010         	goto	u2520
  6452   0020C0                     u2521:
  6453   0020C0  EF7A  F010         	goto	l2976
  6454   0020C4                     u2520:
  6455   0020C4  0E00               	movlw	0
  6456   0020C6  6E1A               	movwf	___fldiv@b^0,c
  6457   0020C8  0E00               	movlw	0
  6458   0020CA  6E1B               	movwf	(___fldiv@b+1)^0,c
  6459   0020CC  0E00               	movlw	0
  6460   0020CE  6E1C               	movwf	(___fldiv@b+2)^0,c
  6461   0020D0  0E00               	movlw	0
  6462   0020D2  6E1D               	movwf	(___fldiv@b+3)^0,c
  6463   0020D4  0E80               	movlw	128
  6464   0020D6  121C               	iorwf	(___fldiv@b+2)^0,f,c
  6465   0020D8  0E7F               	movlw	127
  6466   0020DA  121D               	iorwf	(___fldiv@b+3)^0,f,c
  6467   0020DC                     l2970:
  6468   0020DC  502A               	movf	___fldiv@sign^0,w,c
  6469   0020DE  121D               	iorwf	(___fldiv@b+3)^0,f,c
  6470   0020E0  C01A  F01A         	movff	___fldiv@b,?___fldiv
  6471   0020E4  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  6472   0020E8  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  6473   0020EC  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  6474   0020F0  EFBD  F011         	goto	l763
  6475   0020F4                     l2976:
  6476   0020F4  5031               	movf	___fldiv@bexp^0,w,c
  6477   0020F6  A4D8               	btfss	status,2,c
  6478   0020F8  EF80  F010         	goto	u2531
  6479   0020FC  EF82  F010         	goto	u2530
  6480   002100                     u2531:
  6481   002100  EF8C  F010         	goto	l2984
  6482   002104                     u2530:
  6483   002104  0E00               	movlw	0
  6484   002106  6E1A               	movwf	?___fldiv^0,c
  6485   002108  0E00               	movlw	0
  6486   00210A  6E1B               	movwf	(?___fldiv+1)^0,c
  6487   00210C  0E00               	movlw	0
  6488   00210E  6E1C               	movwf	(?___fldiv+2)^0,c
  6489   002110  0E00               	movlw	0
  6490   002112  6E1D               	movwf	(?___fldiv+3)^0,c
  6491   002114  EFBD  F011         	goto	l763
  6492   002118                     l2984:
  6493   002118  5032               	movf	___fldiv@aexp^0,w,c
  6494   00211A  C031  F022         	movff	___fldiv@bexp,??___fldiv
  6495   00211E  6A23               	clrf	(??___fldiv+1)^0,c
  6496   002120  5E22               	subwf	??___fldiv^0,f,c
  6497   002122  0E00               	movlw	0
  6498   002124  5A23               	subwfb	(??___fldiv+1)^0,f,c
  6499   002126  0E7F               	movlw	127
  6500   002128  2422               	addwf	??___fldiv^0,w,c
  6501   00212A  6E2B               	movwf	___fldiv@new_exp^0,c
  6502   00212C  0E00               	movlw	0
  6503   00212E  2023               	addwfc	(??___fldiv+1)^0,w,c
  6504   002130  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  6505   002132  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  6506   002136  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  6507   00213A  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  6508   00213E  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  6509   002142  0E00               	movlw	0
  6510   002144  6E1A               	movwf	___fldiv@b^0,c
  6511   002146  0E00               	movlw	0
  6512   002148  6E1B               	movwf	(___fldiv@b+1)^0,c
  6513   00214A  0E00               	movlw	0
  6514   00214C  6E1C               	movwf	(___fldiv@b+2)^0,c
  6515   00214E  0E00               	movlw	0
  6516   002150  6E1D               	movwf	(___fldiv@b+3)^0,c
  6517   002152  0E00               	movlw	0
  6518   002154  6E2D               	movwf	___fldiv@grs^0,c
  6519   002156  0E00               	movlw	0
  6520   002158  6E2E               	movwf	(___fldiv@grs+1)^0,c
  6521   00215A  0E00               	movlw	0
  6522   00215C  6E2F               	movwf	(___fldiv@grs+2)^0,c
  6523   00215E  0E00               	movlw	0
  6524   002160  6E30               	movwf	(___fldiv@grs+3)^0,c
  6525   002162  0E00               	movlw	0
  6526   002164  6E32               	movwf	___fldiv@aexp^0,c
  6527   002166  EFED  F010         	goto	l765
  6528   00216A                     l2994:
  6529   00216A  5032               	movf	___fldiv@aexp^0,w,c
  6530   00216C  B4D8               	btfsc	status,2,c
  6531   00216E  EFBB  F010         	goto	u2541
  6532   002172  EFBD  F010         	goto	u2540
  6533   002176                     u2541:
  6534   002176  EFD4  F010         	goto	l3002
  6535   00217A                     u2540:
  6536   00217A  90D8               	bcf	status,0,c
  6537   00217C  3626               	rlcf	___fldiv@rem^0,f,c
  6538   00217E  3627               	rlcf	(___fldiv@rem+1)^0,f,c
  6539   002180  3628               	rlcf	(___fldiv@rem+2)^0,f,c
  6540   002182  3629               	rlcf	(___fldiv@rem+3)^0,f,c
  6541   002184  90D8               	bcf	status,0,c
  6542   002186  361A               	rlcf	___fldiv@b^0,f,c
  6543   002188  361B               	rlcf	(___fldiv@b+1)^0,f,c
  6544   00218A  361C               	rlcf	(___fldiv@b+2)^0,f,c
  6545   00218C  361D               	rlcf	(___fldiv@b+3)^0,f,c
  6546   00218E  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  6547   002190  EFCC  F010         	goto	u2551
  6548   002194  EFCE  F010         	goto	u2550
  6549   002198                     u2551:
  6550   002198  EFCF  F010         	goto	l768
  6551   00219C                     u2550:
  6552   00219C  801A               	bsf	___fldiv@b^0,0,c
  6553   00219E                     l768:
  6554   00219E  90D8               	bcf	status,0,c
  6555   0021A0  362D               	rlcf	___fldiv@grs^0,f,c
  6556   0021A2  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  6557   0021A4  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  6558   0021A6  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  6559   0021A8                     l3002:
  6560   0021A8  501E               	movf	___fldiv@a^0,w,c
  6561   0021AA  5C26               	subwf	___fldiv@rem^0,w,c
  6562   0021AC  501F               	movf	(___fldiv@a+1)^0,w,c
  6563   0021AE  5827               	subwfb	(___fldiv@rem+1)^0,w,c
  6564   0021B0  5020               	movf	(___fldiv@a+2)^0,w,c
  6565   0021B2  5828               	subwfb	(___fldiv@rem+2)^0,w,c
  6566   0021B4  5021               	movf	(___fldiv@a+3)^0,w,c
  6567   0021B6  5829               	subwfb	(___fldiv@rem+3)^0,w,c
  6568   0021B8  A0D8               	btfss	status,0,c
  6569   0021BA  EFE1  F010         	goto	u2561
  6570   0021BE  EFE3  F010         	goto	u2560
  6571   0021C2                     u2561:
  6572   0021C2  EFEC  F010         	goto	l3008
  6573   0021C6                     u2560:
  6574   0021C6  8C30               	bsf	(___fldiv@grs+3)^0,6,c
  6575   0021C8  501E               	movf	___fldiv@a^0,w,c
  6576   0021CA  5E26               	subwf	___fldiv@rem^0,f,c
  6577   0021CC  501F               	movf	(___fldiv@a+1)^0,w,c
  6578   0021CE  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
  6579   0021D0  5020               	movf	(___fldiv@a+2)^0,w,c
  6580   0021D2  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
  6581   0021D4  5021               	movf	(___fldiv@a+3)^0,w,c
  6582   0021D6  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
  6583   0021D8                     l3008:
  6584   0021D8  2A32               	incf	___fldiv@aexp^0,f,c
  6585   0021DA                     l765:
  6586   0021DA  0E19               	movlw	25
  6587   0021DC  6432               	cpfsgt	___fldiv@aexp^0,c
  6588   0021DE  EFF3  F010         	goto	u2571
  6589   0021E2  EFF5  F010         	goto	u2570
  6590   0021E6                     u2571:
  6591   0021E6  EFB5  F010         	goto	l2994
  6592   0021EA                     u2570:
  6593   0021EA  5026               	movf	___fldiv@rem^0,w,c
  6594   0021EC  1027               	iorwf	(___fldiv@rem+1)^0,w,c
  6595   0021EE  1028               	iorwf	(___fldiv@rem+2)^0,w,c
  6596   0021F0  1029               	iorwf	(___fldiv@rem+3)^0,w,c
  6597   0021F2  B4D8               	btfsc	status,2,c
  6598   0021F4  EFFE  F010         	goto	u2581
  6599   0021F8  EF00  F011         	goto	u2580
  6600   0021FC                     u2581:
  6601   0021FC  EF18  F011         	goto	l3020
  6602   002200                     u2580:
  6603   002200  802D               	bsf	___fldiv@grs^0,0,c
  6604   002202  EF18  F011         	goto	l3020
  6605   002206                     l3014:
  6606   002206  90D8               	bcf	status,0,c
  6607   002208  361A               	rlcf	___fldiv@b^0,f,c
  6608   00220A  361B               	rlcf	(___fldiv@b+1)^0,f,c
  6609   00220C  361C               	rlcf	(___fldiv@b+2)^0,f,c
  6610   00220E  361D               	rlcf	(___fldiv@b+3)^0,f,c
  6611   002210  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  6612   002212  EF0D  F011         	goto	u2591
  6613   002216  EF0F  F011         	goto	u2590
  6614   00221A                     u2591:
  6615   00221A  EF10  F011         	goto	l774
  6616   00221E                     u2590:
  6617   00221E  801A               	bsf	___fldiv@b^0,0,c
  6618   002220                     l774:
  6619   002220  90D8               	bcf	status,0,c
  6620   002222  362D               	rlcf	___fldiv@grs^0,f,c
  6621   002224  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  6622   002226  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  6623   002228  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  6624   00222A  062B               	decf	___fldiv@new_exp^0,f,c
  6625   00222C  A0D8               	btfss	status,0,c
  6626   00222E  062C               	decf	(___fldiv@new_exp+1)^0,f,c
  6627   002230                     l3020:
  6628   002230  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  6629   002232  EF1D  F011         	goto	u2601
  6630   002236  EF1F  F011         	goto	u2600
  6631   00223A                     u2601:
  6632   00223A  EF03  F011         	goto	l3014
  6633   00223E                     u2600:
  6634   00223E  0E00               	movlw	0
  6635   002240  6E32               	movwf	___fldiv@aexp^0,c
  6636   002242  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  6637   002244  EF26  F011         	goto	u2611
  6638   002248  EF28  F011         	goto	u2610
  6639   00224C                     u2611:
  6640   00224C  EF4C  F011         	goto	l776
  6641   002250                     u2610:
  6642   002250  0EFF               	movlw	255
  6643   002252  142D               	andwf	___fldiv@grs^0,w,c
  6644   002254  6E22               	movwf	??___fldiv^0,c
  6645   002256  0EFF               	movlw	255
  6646   002258  142E               	andwf	(___fldiv@grs+1)^0,w,c
  6647   00225A  6E23               	movwf	(??___fldiv+1)^0,c
  6648   00225C  0EFF               	movlw	255
  6649   00225E  142F               	andwf	(___fldiv@grs+2)^0,w,c
  6650   002260  6E24               	movwf	(??___fldiv+2)^0,c
  6651   002262  0E7F               	movlw	127
  6652   002264  1430               	andwf	(___fldiv@grs+3)^0,w,c
  6653   002266  6E25               	movwf	(??___fldiv+3)^0,c
  6654   002268  5022               	movf	??___fldiv^0,w,c
  6655   00226A  1023               	iorwf	(??___fldiv+1)^0,w,c
  6656   00226C  1024               	iorwf	(??___fldiv+2)^0,w,c
  6657   00226E  1025               	iorwf	(??___fldiv+3)^0,w,c
  6658   002270  B4D8               	btfsc	status,2,c
  6659   002272  EF3D  F011         	goto	u2621
  6660   002276  EF3F  F011         	goto	u2620
  6661   00227A                     u2621:
  6662   00227A  EF43  F011         	goto	l777
  6663   00227E                     u2620:
  6664   00227E                     l3028:
  6665   00227E  0E01               	movlw	1
  6666   002280  6E32               	movwf	___fldiv@aexp^0,c
  6667   002282  EF4C  F011         	goto	l776
  6668   002286                     l777:
  6669   002286  A01A               	btfss	___fldiv@b^0,0,c
  6670   002288  EF48  F011         	goto	u2631
  6671   00228C  EF4A  F011         	goto	u2630
  6672   002290                     u2631:
  6673   002290  EF4C  F011         	goto	l776
  6674   002294                     u2630:
  6675   002294  EF3F  F011         	goto	l3028
  6676   002298                     l776:
  6677   002298  5032               	movf	___fldiv@aexp^0,w,c
  6678   00229A  B4D8               	btfsc	status,2,c
  6679   00229C  EF52  F011         	goto	u2641
  6680   0022A0  EF54  F011         	goto	u2640
  6681   0022A4                     u2641:
  6682   0022A4  EF78  F011         	goto	l3040
  6683   0022A8                     u2640:
  6684   0022A8  0E01               	movlw	1
  6685   0022AA  261A               	addwf	___fldiv@b^0,f,c
  6686   0022AC  0E00               	movlw	0
  6687   0022AE  221B               	addwfc	(___fldiv@b+1)^0,f,c
  6688   0022B0  221C               	addwfc	(___fldiv@b+2)^0,f,c
  6689   0022B2  221D               	addwfc	(___fldiv@b+3)^0,f,c
  6690   0022B4  A01D               	btfss	(___fldiv@b+3)^0,0,c
  6691   0022B6  EF5F  F011         	goto	u2651
  6692   0022BA  EF61  F011         	goto	u2650
  6693   0022BE                     u2651:
  6694   0022BE  EF78  F011         	goto	l3040
  6695   0022C2                     u2650:
  6696   0022C2  C01A  F022         	movff	___fldiv@b,??___fldiv
  6697   0022C6  C01B  F023         	movff	___fldiv@b+1,??___fldiv+1
  6698   0022CA  C01C  F024         	movff	___fldiv@b+2,??___fldiv+2
  6699   0022CE  C01D  F025         	movff	___fldiv@b+3,??___fldiv+3
  6700   0022D2  3425               	rlcf	(??___fldiv+3)^0,w,c
  6701   0022D4  3225               	rrcf	(??___fldiv+3)^0,f,c
  6702   0022D6  3224               	rrcf	(??___fldiv+2)^0,f,c
  6703   0022D8  3223               	rrcf	(??___fldiv+1)^0,f,c
  6704   0022DA  3222               	rrcf	??___fldiv^0,f,c
  6705   0022DC  C022  F01A         	movff	??___fldiv,___fldiv@b
  6706   0022E0  C023  F01B         	movff	??___fldiv+1,___fldiv@b+1
  6707   0022E4  C024  F01C         	movff	??___fldiv+2,___fldiv@b+2
  6708   0022E8  C025  F01D         	movff	??___fldiv+3,___fldiv@b+3
  6709   0022EC  4A2B               	infsnz	___fldiv@new_exp^0,f,c
  6710   0022EE  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
  6711   0022F0                     l3040:
  6712   0022F0  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6713   0022F2  EF83  F011         	goto	u2661
  6714   0022F6  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  6715   0022F8  E108               	bnz	u2660
  6716   0022FA  282B               	incf	___fldiv@new_exp^0,w,c
  6717   0022FC  A0D8               	btfss	status,0,c
  6718   0022FE  EF83  F011         	goto	u2661
  6719   002302  EF85  F011         	goto	u2660
  6720   002306                     u2661:
  6721   002306  EF90  F011         	goto	l3044
  6722   00230A                     u2660:
  6723   00230A  0E00               	movlw	0
  6724   00230C  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  6725   00230E  682B               	setf	___fldiv@new_exp^0,c
  6726   002310  0E00               	movlw	0
  6727   002312  6E1A               	movwf	___fldiv@b^0,c
  6728   002314  0E00               	movlw	0
  6729   002316  6E1B               	movwf	(___fldiv@b+1)^0,c
  6730   002318  0E00               	movlw	0
  6731   00231A  6E1C               	movwf	(___fldiv@b+2)^0,c
  6732   00231C  0E00               	movlw	0
  6733   00231E  6E1D               	movwf	(___fldiv@b+3)^0,c
  6734   002320                     l3044:
  6735   002320  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6736   002322  EF9D  F011         	goto	u2670
  6737   002326  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  6738   002328  E106               	bnz	u2671
  6739   00232A  042B               	decf	___fldiv@new_exp^0,w,c
  6740   00232C  B0D8               	btfsc	status,0,c
  6741   00232E  EF9B  F011         	goto	u2671
  6742   002332  EF9D  F011         	goto	u2670
  6743   002336                     u2671:
  6744   002336  EFAB  F011         	goto	l3048
  6745   00233A                     u2670:
  6746   00233A  0E00               	movlw	0
  6747   00233C  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  6748   00233E  0E00               	movlw	0
  6749   002340  6E2B               	movwf	___fldiv@new_exp^0,c
  6750   002342  0E00               	movlw	0
  6751   002344  6E1A               	movwf	___fldiv@b^0,c
  6752   002346  0E00               	movlw	0
  6753   002348  6E1B               	movwf	(___fldiv@b+1)^0,c
  6754   00234A  0E00               	movlw	0
  6755   00234C  6E1C               	movwf	(___fldiv@b+2)^0,c
  6756   00234E  0E00               	movlw	0
  6757   002350  6E1D               	movwf	(___fldiv@b+3)^0,c
  6758   002352  0E00               	movlw	0
  6759   002354  6E2A               	movwf	___fldiv@sign^0,c
  6760   002356                     l3048:
  6761   002356  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  6762   00235A  A031               	btfss	___fldiv@bexp^0,0,c
  6763   00235C  EFB2  F011         	goto	u2681
  6764   002360  EFB4  F011         	goto	u2680
  6765   002364                     u2681:
  6766   002364  EFB7  F011         	goto	l3054
  6767   002368                     u2680:
  6768   002368  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  6769   00236A  EFB8  F011         	goto	l3056
  6770   00236E                     l3054:
  6771   00236E  9E1C               	bcf	(___fldiv@b+2)^0,7,c
  6772   002370                     l3056:
  6773   002370  90D8               	bcf	status,0,c
  6774   002372  3031               	rrcf	___fldiv@bexp^0,w,c
  6775   002374  6E1D               	movwf	(___fldiv@b+3)^0,c
  6776   002376  EF6E  F010         	goto	l2970
  6777   00237A                     l763:
  6778   00237A  0012               	return		;funcret
  6779   00237C                     __end_of___fldiv:
  6780                           	callstack 0
  6781                           
  6782 ;; *************** function _putsXLCD *****************
  6783 ;; Defined at:
  6784 ;;		line 452 in file "xlcd.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  buffer          1    1[COMRAM] PTR unsigned char 
  6787 ;;		 -> main@string_volt(40), 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;		None
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6799 ;;      Params:         1       0       0       0       0       0       0       0       0
  6800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6802 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6803 ;;Total ram usage:        1 bytes
  6804 ;; Hardware stack levels used: 1
  6805 ;; Hardware stack levels required when called: 3
  6806 ;; This function calls:
  6807 ;;		_WriteDataXLCD
  6808 ;; This function is called by:
  6809 ;;		_main
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text24
  6814   0033AA                     __ptext24:
  6815                           	callstack 0
  6816   0033AA                     _putsXLCD:
  6817                           	callstack 27
  6818   0033AA                     
  6819                           ;xlcd.c: 452: void putsXLCD(char *buffer);xlcd.c: 453: { while(*buffer)
  6820   0033AA  EFDE  F019         	goto	l4002
  6821   0033AE                     l3998:
  6822                           
  6823                           ;xlcd.c: 454:         { WriteDataXLCD(*buffer);
  6824   0033AE  5002               	movf	putsXLCD@buffer^0,w,c
  6825   0033B0  6ED9               	movwf	fsr2l,c
  6826   0033B2  6ADA               	clrf	fsr2h,c
  6827   0033B4  50DF               	movf	indf2,w,c
  6828   0033B6  EC07  F018         	call	_WriteDataXLCD
  6829   0033BA                     
  6830                           ;xlcd.c: 455:                 buffer++;
  6831   0033BA  2A02               	incf	putsXLCD@buffer^0,f,c
  6832   0033BC                     l4002:
  6833                           
  6834                           ;xlcd.c: 453: { while(*buffer)
  6835   0033BC  5002               	movf	putsXLCD@buffer^0,w,c
  6836   0033BE  6ED9               	movwf	fsr2l,c
  6837   0033C0  6ADA               	clrf	fsr2h,c
  6838   0033C2  50DF               	movf	indf2,w,c
  6839   0033C4  A4D8               	btfss	status,2,c
  6840   0033C6  EFE7  F019         	goto	u3751
  6841   0033CA  EFE9  F019         	goto	u3750
  6842   0033CE                     u3751:
  6843   0033CE  EFD7  F019         	goto	l3998
  6844   0033D2                     u3750:
  6845   0033D2  0012               	return		;funcret
  6846   0033D4                     __end_of_putsXLCD:
  6847                           	callstack 0
  6848                           
  6849 ;; *************** function _putrsXLCD *****************
  6850 ;; Defined at:
  6851 ;;		line 460 in file "xlcd.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  buffer          1    1[COMRAM] PTR const unsigned char 
  6854 ;;		 -> STR_12(6), STR_11(6), STR_10(6), STR_9(6), 
  6855 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(6), 
  6856 ;;		 -> STR_4(2), STR_3(5), STR_1(10), 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;		None
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6868 ;;      Params:         1       0       0       0       0       0       0       0       0
  6869 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6871 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6872 ;;Total ram usage:        1 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 3
  6875 ;; This function calls:
  6876 ;;		_WriteDataXLCD
  6877 ;; This function is called by:
  6878 ;;		_main
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text25
  6883   003318                     __ptext25:
  6884                           	callstack 0
  6885   003318                     _putrsXLCD:
  6886                           	callstack 27
  6887   003318                     
  6888                           ;xlcd.c: 460: void putrsXLCD(const char *buffer);xlcd.c: 461: { while(*buffer)
  6889   003318  EF97  F019         	goto	l3982
  6890   00331C                     l3978:
  6891                           
  6892                           ;xlcd.c: 462:         { WriteDataXLCD(*buffer);
  6893   00331C  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  6894   003320                     	if	1	;There is more than 1 active tblptr byte
  6895   003320  0E08               	movlw	high __smallconst
  6896   003322  6EF7               	movwf	tblptrh,c
  6897   003324                     	endif
  6898   003324                     	if	0	;tblptru may be non-zero
  6899   003324                     	endif
  6900   003324                     	if	0	;tblptru may be non-zero
  6901   003324                     	endif
  6902   003324  0008               	tblrd		*
  6903   003326  50F5               	movf	tablat,w,c
  6904   003328  EC07  F018         	call	_WriteDataXLCD
  6905   00332C                     
  6906                           ;xlcd.c: 463:                 buffer++;
  6907   00332C  2A02               	incf	putrsXLCD@buffer^0,f,c
  6908   00332E                     l3982:
  6909                           
  6910                           ;xlcd.c: 461: { while(*buffer)
  6911   00332E  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  6912   003332                     	if	1	;There is more than 1 active tblptr byte
  6913   003332  0E08               	movlw	high __smallconst
  6914   003334  6EF7               	movwf	tblptrh,c
  6915   003336                     	endif
  6916   003336                     	if	0	;tblptru may be non-zero
  6917   003336                     	endif
  6918   003336                     	if	0	;tblptru may be non-zero
  6919   003336                     	endif
  6920   003336  0008               	tblrd		*
  6921   003338  50F5               	movf	tablat,w,c
  6922   00333A  0900               	iorlw	0
  6923   00333C  A4D8               	btfss	status,2,c
  6924   00333E  EFA3  F019         	goto	u3741
  6925   003342  EFA5  F019         	goto	u3740
  6926   003346                     u3741:
  6927   003346  EF8E  F019         	goto	l3978
  6928   00334A                     u3740:
  6929   00334A  0012               	return		;funcret
  6930   00334C                     __end_of_putrsXLCD:
  6931                           	callstack 0
  6932                           
  6933 ;; *************** function _WriteDataXLCD *****************
  6934 ;; Defined at:
  6935 ;;		line 399 in file "xlcd.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  data            1    wreg     unsigned char 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  data            1    0[COMRAM] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1    wreg      void 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6949 ;;      Params:         0       0       0       0       0       0       0       0       0
  6950 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6951 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6952 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6953 ;;Total ram usage:        1 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 2
  6956 ;; This function calls:
  6957 ;;		_BusyXLCD
  6958 ;;		_DelayExecution
  6959 ;;		_Delay_1us
  6960 ;; This function is called by:
  6961 ;;		_putsXLCD
  6962 ;;		_putrsXLCD
  6963 ;;		_XLCD_WriteChr_CGRAM
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text26
  6968   00300E                     __ptext26:
  6969                           	callstack 0
  6970   00300E                     _WriteDataXLCD:
  6971                           	callstack 27
  6972                           
  6973                           ;incstack = 0
  6974                           ;WriteDataXLCD@data stored from wreg
  6975   00300E  6E01               	movwf	WriteDataXLCD@data^0,c
  6976   003010                     l3894:
  6977   003010  ECD5  F018         	call	_BusyXLCD	;wreg free
  6978   003014  0900               	iorlw	0
  6979   003016  A4D8               	btfss	status,2,c
  6980   003018  EF10  F018         	goto	u3711
  6981   00301C  EF12  F018         	goto	u3710
  6982   003020                     u3711:
  6983   003020  EF08  F018         	goto	l3894
  6984   003024                     u3710:
  6985   003024                     
  6986                           ;xlcd.c: 419:         TRISD &= 0xf0;
  6987   003024  0EF0               	movlw	240
  6988   003026  1695               	andwf	149,f,c	;volatile
  6989                           
  6990                           ;xlcd.c: 420:         PORTD &= 0xf0;
  6991   003028  0EF0               	movlw	240
  6992   00302A  1683               	andwf	131,f,c	;volatile
  6993                           
  6994                           ;xlcd.c: 421:         PORTD |= ((data>>4)&0x0f);
  6995   00302C  3801               	swapf	WriteDataXLCD@data^0,w,c
  6996   00302E  0B0F               	andlw	15
  6997   003030  0B0F               	andlw	15
  6998   003032  1283               	iorwf	131,f,c	;volatile
  6999   003034                     
  7000                           ;xlcd.c: 423:         LATDbits.LATD5 = 1;
  7001   003034  8A8C               	bsf	140,5,c	;volatile
  7002   003036                     
  7003                           ;xlcd.c: 424:         LATDbits.LATD4 = 0;
  7004   003036  988C               	bcf	140,4,c	;volatile
  7005   003038                     
  7006                           ;xlcd.c: 425:         Delay_1us();
  7007   003038  EC3B  F01A         	call	_Delay_1us	;wreg free
  7008   00303C                     
  7009                           ;xlcd.c: 426:         LATDbits.LATD6 = 1;
  7010   00303C  8C8C               	bsf	140,6,c	;volatile
  7011   00303E                     
  7012                           ;xlcd.c: 427:         Delay_1us();
  7013   00303E  EC3B  F01A         	call	_Delay_1us	;wreg free
  7014   003042                     
  7015                           ;xlcd.c: 428:         LATDbits.LATD6 = 0;
  7016   003042  9C8C               	bcf	140,6,c	;volatile
  7017   003044                     
  7018                           ;xlcd.c: 429:         Delay_1us();
  7019   003044  EC3B  F01A         	call	_Delay_1us	;wreg free
  7020   003048                     
  7021                           ;xlcd.c: 435:         PORTD &= 0xf0;
  7022   003048  0EF0               	movlw	240
  7023   00304A  1683               	andwf	131,f,c	;volatile
  7024   00304C                     
  7025                           ;xlcd.c: 436:         PORTD |= (data&0x0f);
  7026   00304C  5001               	movf	WriteDataXLCD@data^0,w,c
  7027   00304E  0B0F               	andlw	15
  7028   003050  1283               	iorwf	131,f,c	;volatile
  7029   003052                     
  7030                           ;xlcd.c: 438:         Delay_1us();
  7031   003052  EC3B  F01A         	call	_Delay_1us	;wreg free
  7032   003056                     
  7033                           ;xlcd.c: 439:         LATDbits.LATD6 = 1;
  7034   003056  8C8C               	bsf	140,6,c	;volatile
  7035   003058                     
  7036                           ;xlcd.c: 440:         Delay_1us();
  7037   003058  EC3B  F01A         	call	_Delay_1us	;wreg free
  7038   00305C                     
  7039                           ;xlcd.c: 441:         LATDbits.LATD6 = 0;
  7040   00305C  9C8C               	bcf	140,6,c	;volatile
  7041   00305E                     
  7042                           ;xlcd.c: 445:         TRISD |= 0x0f;
  7043   00305E  0E0F               	movlw	15
  7044   003060  1295               	iorwf	149,f,c	;volatile
  7045                           
  7046                           ;xlcd.c: 448:         DelayExecution();
  7047   003062  EC36  F01A         	call	_DelayExecution	;wreg free
  7048   003066  0012               	return		;funcret
  7049   003068                     __end_of_WriteDataXLCD:
  7050                           	callstack 0
  7051                           
  7052 ;; *************** function _adc_Init *****************
  7053 ;; Defined at:
  7054 ;;		line 24 in file "ADC_main.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;		None
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;		None
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  1    wreg      void 
  7061 ;; Registers used:
  7062 ;;		wreg, status,2
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7068 ;;      Params:         0       0       0       0       0       0       0       0       0
  7069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7071 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7072 ;;Total ram usage:        0 bytes
  7073 ;; Hardware stack levels used: 1
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_main
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text27
  7082   00337C                     __ptext27:
  7083                           	callstack 0
  7084   00337C                     _adc_Init:
  7085                           	callstack 30
  7086   00337C  0EC3               	movlw	-61
  7087   00337E  16C2               	andwf	194,f,c	;volatile
  7088                           
  7089                           ;ADC_main.c: 26:     ADCON1bits.PCFG=0b1101;
  7090   003380  50C1               	movf	193,w,c	;volatile
  7091   003382  0BF0               	andlw	-16
  7092   003384  090D               	iorlw	13
  7093   003386  6EC1               	movwf	193,c	;volatile
  7094                           
  7095                           ;ADC_main.c: 27:     ADCON1bits.VCFG=0;
  7096   003388  0ECF               	movlw	-49
  7097   00338A  16C1               	andwf	193,f,c	;volatile
  7098   00338C                     
  7099                           ;ADC_main.c: 28:     ADCON2bits.ADFM=0;
  7100   00338C  9EC0               	bcf	192,7,c	;volatile
  7101                           
  7102                           ;ADC_main.c: 29:     ADCON2bits.ACQT=3;
  7103   00338E  50C0               	movf	192,w,c	;volatile
  7104   003390  0BC7               	andlw	-57
  7105   003392  0918               	iorlw	24
  7106   003394  6EC0               	movwf	192,c	;volatile
  7107                           
  7108                           ;ADC_main.c: 30:     ADCON2bits.ADCS=5;
  7109   003396  50C0               	movf	192,w,c	;volatile
  7110   003398  0BF8               	andlw	-8
  7111   00339A  0905               	iorlw	5
  7112   00339C  6EC0               	movwf	192,c	;volatile
  7113   00339E                     
  7114                           ;ADC_main.c: 31:     ADCON0bits.GO_DONE=0;
  7115   00339E  92C2               	bcf	194,1,c	;volatile
  7116   0033A0                     
  7117                           ;ADC_main.c: 32:     ADCON0bits.ADON=1;
  7118   0033A0  80C2               	bsf	194,0,c	;volatile
  7119   0033A2                     
  7120                           ;ADC_main.c: 33:     _delay((unsigned long)((3)*(20000000/4000000.0)));
  7121   0033A2  0E05               	movlw	5
  7122   0033A4                     u4677:
  7123   0033A4  2EE8               	decfsz	wreg,f,c
  7124   0033A6  D7FE               	bra	u4677
  7125   0033A8  0012               	return		;funcret
  7126   0033AA                     __end_of_adc_Init:
  7127                           	callstack 0
  7128                           
  7129 ;; *************** function ___xxtofl *****************
  7130 ;; Defined at:
  7131 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  sign            1    wreg     unsigned char 
  7134 ;;  val             4    0[COMRAM] long 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  sign            1    8[COMRAM] unsigned char 
  7137 ;;  arg             4   10[COMRAM] unsigned long 
  7138 ;;  exp             1    9[COMRAM] unsigned char 
  7139 ;; Return value:  Size  Location     Type
  7140 ;;                  4    0[COMRAM] unsigned char 
  7141 ;; Registers used:
  7142 ;;		wreg, status,2, status,0
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7148 ;;      Params:         4       0       0       0       0       0       0       0       0
  7149 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7150 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7151 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7152 ;;Total ram usage:       14 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_main
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text28
  7162   0027FC                     __ptext28:
  7163                           	callstack 0
  7164   0027FC                     ___xxtofl:
  7165                           	callstack 30
  7166                           
  7167                           ;incstack = 0
  7168                           ;___xxtofl@sign stored from wreg
  7169   0027FC  6E09               	movwf	___xxtofl@sign^0,c
  7170   0027FE  5009               	movf	___xxtofl@sign^0,w,c
  7171   002800  B4D8               	btfsc	status,2,c
  7172   002802  EF05  F014         	goto	u3781
  7173   002806  EF07  F014         	goto	u3780
  7174   00280A                     u3781:
  7175   00280A  EF29  F014         	goto	l836
  7176   00280E                     u3780:
  7177   00280E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7178   002810  EF0E  F014         	goto	u3790
  7179   002814  EF0C  F014         	goto	u3791
  7180   002818                     u3791:
  7181   002818  EF29  F014         	goto	l836
  7182   00281C                     u3790:
  7183   00281C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7184   002820  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7185   002824  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7186   002828  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7187   00282C  1E05               	comf	??___xxtofl^0,f,c
  7188   00282E  1E06               	comf	(??___xxtofl+1)^0,f,c
  7189   002830  1E07               	comf	(??___xxtofl+2)^0,f,c
  7190   002832  1E08               	comf	(??___xxtofl+3)^0,f,c
  7191   002834  2A05               	incf	??___xxtofl^0,f,c
  7192   002836  0E00               	movlw	0
  7193   002838  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7194   00283A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7195   00283C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7196   00283E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7197   002842  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7198   002846  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7199   00284A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7200   00284E  EF31  F014         	goto	l4040
  7201   002852                     l836:
  7202   002852  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7203   002856  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7204   00285A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7205   00285E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7206   002862                     l4040:
  7207   002862  5001               	movf	___xxtofl@val^0,w,c
  7208   002864  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7209   002866  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7210   002868  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7211   00286A  A4D8               	btfss	status,2,c
  7212   00286C  EF3A  F014         	goto	u3801
  7213   002870  EF3C  F014         	goto	u3800
  7214   002874                     u3801:
  7215   002874  EF46  F014         	goto	l4046
  7216   002878                     u3800:
  7217   002878  0E00               	movlw	0
  7218   00287A  6E01               	movwf	?___xxtofl^0,c
  7219   00287C  0E00               	movlw	0
  7220   00287E  6E02               	movwf	(?___xxtofl+1)^0,c
  7221   002880  0E00               	movlw	0
  7222   002882  6E03               	movwf	(?___xxtofl+2)^0,c
  7223   002884  0E00               	movlw	0
  7224   002886  6E04               	movwf	(?___xxtofl+3)^0,c
  7225   002888  EFD7  F014         	goto	l839
  7226   00288C                     l4046:
  7227   00288C  0E96               	movlw	150
  7228   00288E  6E0A               	movwf	___xxtofl@exp^0,c
  7229   002890  EF50  F014         	goto	l4050
  7230   002894                     l4048:
  7231   002894  2A0A               	incf	___xxtofl@exp^0,f,c
  7232   002896  90D8               	bcf	status,0,c
  7233   002898  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7234   00289A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7235   00289C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7236   00289E  320B               	rrcf	___xxtofl@arg^0,f,c
  7237   0028A0                     l4050:
  7238   0028A0  0E00               	movlw	0
  7239   0028A2  140B               	andwf	___xxtofl@arg^0,w,c
  7240   0028A4  6E05               	movwf	??___xxtofl^0,c
  7241   0028A6  0E00               	movlw	0
  7242   0028A8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7243   0028AA  6E06               	movwf	(??___xxtofl+1)^0,c
  7244   0028AC  0E00               	movlw	0
  7245   0028AE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7246   0028B0  6E07               	movwf	(??___xxtofl+2)^0,c
  7247   0028B2  0EFE               	movlw	254
  7248   0028B4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7249   0028B6  6E08               	movwf	(??___xxtofl+3)^0,c
  7250   0028B8  5005               	movf	??___xxtofl^0,w,c
  7251   0028BA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7252   0028BC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7253   0028BE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7254   0028C0  A4D8               	btfss	status,2,c
  7255   0028C2  EF65  F014         	goto	u3811
  7256   0028C6  EF67  F014         	goto	u3810
  7257   0028CA                     u3811:
  7258   0028CA  EF4A  F014         	goto	l4048
  7259   0028CE                     u3810:
  7260   0028CE  EF75  F014         	goto	l843
  7261   0028D2                     l4052:
  7262   0028D2  2A0A               	incf	___xxtofl@exp^0,f,c
  7263   0028D4  0E01               	movlw	1
  7264   0028D6  260B               	addwf	___xxtofl@arg^0,f,c
  7265   0028D8  0E00               	movlw	0
  7266   0028DA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7267   0028DC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7268   0028DE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7269   0028E0  90D8               	bcf	status,0,c
  7270   0028E2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7271   0028E4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7272   0028E6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7273   0028E8  320B               	rrcf	___xxtofl@arg^0,f,c
  7274   0028EA                     l843:
  7275   0028EA  0E00               	movlw	0
  7276   0028EC  140B               	andwf	___xxtofl@arg^0,w,c
  7277   0028EE  6E05               	movwf	??___xxtofl^0,c
  7278   0028F0  0E00               	movlw	0
  7279   0028F2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7280   0028F4  6E06               	movwf	(??___xxtofl+1)^0,c
  7281   0028F6  0E00               	movlw	0
  7282   0028F8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7283   0028FA  6E07               	movwf	(??___xxtofl+2)^0,c
  7284   0028FC  0EFF               	movlw	255
  7285   0028FE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7286   002900  6E08               	movwf	(??___xxtofl+3)^0,c
  7287   002902  5005               	movf	??___xxtofl^0,w,c
  7288   002904  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7289   002906  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7290   002908  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7291   00290A  A4D8               	btfss	status,2,c
  7292   00290C  EF8A  F014         	goto	u3821
  7293   002910  EF8C  F014         	goto	u3820
  7294   002914                     u3821:
  7295   002914  EF69  F014         	goto	l4052
  7296   002918                     u3820:
  7297   002918  EF94  F014         	goto	l4060
  7298   00291C                     l4058:
  7299   00291C  060A               	decf	___xxtofl@exp^0,f,c
  7300   00291E  90D8               	bcf	status,0,c
  7301   002920  360B               	rlcf	___xxtofl@arg^0,f,c
  7302   002922  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7303   002924  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7304   002926  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7305   002928                     l4060:
  7306   002928  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7307   00292A  EF99  F014         	goto	u3831
  7308   00292E  EF9B  F014         	goto	u3830
  7309   002932                     u3831:
  7310   002932  EFA3  F014         	goto	l850
  7311   002936                     u3830:
  7312   002936  0E02               	movlw	2
  7313   002938  600A               	cpfslt	___xxtofl@exp^0,c
  7314   00293A  EFA1  F014         	goto	u3841
  7315   00293E  EFA3  F014         	goto	u3840
  7316   002942                     u3841:
  7317   002942  EF8E  F014         	goto	l4058
  7318   002946                     u3840:
  7319   002946                     l850:
  7320   002946  B00A               	btfsc	___xxtofl@exp^0,0,c
  7321   002948  EFA8  F014         	goto	u3851
  7322   00294C  EFAA  F014         	goto	u3850
  7323   002950                     u3851:
  7324   002950  EFAB  F014         	goto	l4066
  7325   002954                     u3850:
  7326   002954  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7327   002956                     l4066:
  7328   002956  90D8               	bcf	status,0,c
  7329   002958  320A               	rrcf	___xxtofl@exp^0,f,c
  7330   00295A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7331   00295E  6A06               	clrf	(??___xxtofl+1)^0,c
  7332   002960  6A07               	clrf	(??___xxtofl+2)^0,c
  7333   002962  6A08               	clrf	(??___xxtofl+3)^0,c
  7334   002964  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7335   002968  6A07               	clrf	(??___xxtofl+2)^0,c
  7336   00296A  6A06               	clrf	(??___xxtofl+1)^0,c
  7337   00296C  6A05               	clrf	??___xxtofl^0,c
  7338   00296E  5005               	movf	??___xxtofl^0,w,c
  7339   002970  120B               	iorwf	___xxtofl@arg^0,f,c
  7340   002972  5006               	movf	(??___xxtofl+1)^0,w,c
  7341   002974  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7342   002976  5007               	movf	(??___xxtofl+2)^0,w,c
  7343   002978  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7344   00297A  5008               	movf	(??___xxtofl+3)^0,w,c
  7345   00297C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7346   00297E  5009               	movf	___xxtofl@sign^0,w,c
  7347   002980  B4D8               	btfsc	status,2,c
  7348   002982  EFC5  F014         	goto	u3861
  7349   002986  EFC7  F014         	goto	u3860
  7350   00298A                     u3861:
  7351   00298A  EFCF  F014         	goto	l4076
  7352   00298E                     u3860:
  7353   00298E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7354   002990  EFCE  F014         	goto	u3870
  7355   002994  EFCC  F014         	goto	u3871
  7356   002998                     u3871:
  7357   002998  EFCF  F014         	goto	l4076
  7358   00299C                     u3870:
  7359   00299C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7360   00299E                     l4076:
  7361   00299E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7362   0029A2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7363   0029A6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7364   0029AA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7365   0029AE                     l839:
  7366   0029AE  0012               	return		;funcret
  7367   0029B0                     __end_of___xxtofl:
  7368                           	callstack 0
  7369                           
  7370 ;; *************** function _XLCDgotoXY *****************
  7371 ;; Defined at:
  7372 ;;		line 480 in file "xlcd.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  x               2    1[COMRAM] int 
  7375 ;;  y               2    3[COMRAM] int 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;		None
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, status,2, status,0, cstack
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7387 ;;      Params:         4       0       0       0       0       0       0       0       0
  7388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7390 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7391 ;;Total ram usage:        4 bytes
  7392 ;; Hardware stack levels used: 1
  7393 ;; Hardware stack levels required when called: 3
  7394 ;; This function calls:
  7395 ;;		_WriteCmdXLCD
  7396 ;; This function is called by:
  7397 ;;		_main
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text29
  7402   00334C                     __ptext29:
  7403                           	callstack 0
  7404   00334C                     _XLCDgotoXY:
  7405                           	callstack 27
  7406   00334C                     
  7407                           ;xlcd.c: 480: void XLCDgotoXY(int x,int y);xlcd.c: 481: { if ( x>0 ){WriteCmdXLCD(0b1100
      +                          0000 +y);}
  7408   00334C  BE03               	btfsc	(XLCDgotoXY@x+1)^0,7,c
  7409   00334E  EFB1  F019         	goto	u3731
  7410   003352  5003               	movf	(XLCDgotoXY@x+1)^0,w,c
  7411   003354  E108               	bnz	u3730
  7412   003356  0402               	decf	XLCDgotoXY@x^0,w,c
  7413   003358  A0D8               	btfss	status,0,c
  7414   00335A  EFB1  F019         	goto	u3731
  7415   00335E  EFB3  F019         	goto	u3730
  7416   003362                     u3731:
  7417   003362  EFB9  F019         	goto	l3972
  7418   003366                     u3730:
  7419   003366  5004               	movf	XLCDgotoXY@y^0,w,c
  7420   003368  0FC0               	addlw	192
  7421   00336A  EC5F  F018         	call	_WriteCmdXLCD
  7422   00336E  EFBD  F019         	goto	l170
  7423   003372                     l3972:
  7424   003372  5004               	movf	XLCDgotoXY@y^0,w,c
  7425   003374  0F80               	addlw	128
  7426   003376  EC5F  F018         	call	_WriteCmdXLCD
  7427   00337A                     l170:
  7428   00337A  0012               	return		;funcret
  7429   00337C                     __end_of_XLCDgotoXY:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function _XLCDInit *****************
  7433 ;; Defined at:
  7434 ;;		line 486 in file "xlcd.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;		None
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7451 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7452 ;;Total ram usage:        0 bytes
  7453 ;; Hardware stack levels used: 1
  7454 ;; Hardware stack levels required when called: 4
  7455 ;; This function calls:
  7456 ;;		_DelayPORXLCD
  7457 ;;		_OpenXLCD
  7458 ;;		_WriteCmdXLCD
  7459 ;; This function is called by:
  7460 ;;		_main
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text30
  7465   00341C                     __ptext30:
  7466                           	callstack 0
  7467   00341C                     _XLCDInit:
  7468                           	callstack 26
  7469   00341C  EC26  F01A         	call	_DelayPORXLCD	;wreg free
  7470   003420                     
  7471                           ;xlcd.c: 488:     OpenXLCD(0b00101111 & 0b00111011 );
  7472   003420  0E2B               	movlw	43
  7473   003422  EC59  F017         	call	_OpenXLCD
  7474   003426                     
  7475                           ;xlcd.c: 489:     WriteCmdXLCD( 0b00001111 & 0b00001101 & 0b00001110 );
  7476   003426  0E0C               	movlw	12
  7477   003428  EC5F  F018         	call	_WriteCmdXLCD
  7478   00342C                     
  7479                           ;xlcd.c: 490:     WriteCmdXLCD(0x01);
  7480   00342C  0E01               	movlw	1
  7481   00342E  EC5F  F018         	call	_WriteCmdXLCD
  7482   003432                     
  7483                           ;xlcd.c: 491:     WriteCmdXLCD(0x80);
  7484   003432  0E80               	movlw	128
  7485   003434  EC5F  F018         	call	_WriteCmdXLCD
  7486   003438  0012               	return		;funcret
  7487   00343A                     __end_of_XLCDInit:
  7488                           	callstack 0
  7489                           
  7490 ;; *************** function _OpenXLCD *****************
  7491 ;; Defined at:
  7492 ;;		line 6 in file "xlcd.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  lcdtype         1    wreg     unsigned char 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;  lcdtype         1    4[COMRAM] unsigned char 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1    wreg      void 
  7499 ;; Registers used:
  7500 ;;		wreg, status,2, status,0, cstack
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7506 ;;      Params:         0       0       0       0       0       0       0       0       0
  7507 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7509 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7510 ;;Total ram usage:        1 bytes
  7511 ;; Hardware stack levels used: 1
  7512 ;; Hardware stack levels required when called: 3
  7513 ;; This function calls:
  7514 ;;		_DelayPORXLCD
  7515 ;;		_DelayXLCD
  7516 ;;		_Delay_1us
  7517 ;;		_SetDDRamAddr
  7518 ;;		_WriteCmdXLCD
  7519 ;; This function is called by:
  7520 ;;		_XLCDInit
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text31
  7525   002EB2                     __ptext31:
  7526                           	callstack 0
  7527   002EB2                     _OpenXLCD:
  7528                           	callstack 26
  7529                           
  7530                           ;incstack = 0
  7531                           ;OpenXLCD@lcdtype stored from wreg
  7532   002EB2  6E05               	movwf	OpenXLCD@lcdtype^0,c
  7533   002EB4                     
  7534                           ;xlcd.c: 6: void OpenXLCD(unsigned char lcdtype);xlcd.c: 7: {;xlcd.c: 8:  DelayPORXLCD()
      +                          ;
  7535   002EB4  EC26  F01A         	call	_DelayPORXLCD	;wreg free
  7536   002EB8                     
  7537                           ;xlcd.c: 20:         PORTD &= 0xf0;
  7538   002EB8  0EF0               	movlw	240
  7539   002EBA  1683               	andwf	131,f,c	;volatile
  7540   002EBC                     
  7541                           ;xlcd.c: 21:         TRISD |= 0x0f;
  7542   002EBC  0E0F               	movlw	15
  7543   002EBE  1295               	iorwf	149,f,c	;volatile
  7544   002EC0                     
  7545                           ;xlcd.c: 24:         TRISDbits.TRISD4 = 0;
  7546   002EC0  9895               	bcf	149,4,c	;volatile
  7547   002EC2                     
  7548                           ;xlcd.c: 25:         TRISDbits.TRISD5 = 0;
  7549   002EC2  9A95               	bcf	149,5,c	;volatile
  7550   002EC4                     
  7551                           ;xlcd.c: 26:         TRISDbits.TRISD6 = 0;
  7552   002EC4  9C95               	bcf	149,6,c	;volatile
  7553   002EC6                     
  7554                           ;xlcd.c: 27:         LATDbits.LATD4 = 0;
  7555   002EC6  988C               	bcf	140,4,c	;volatile
  7556   002EC8                     
  7557                           ;xlcd.c: 28:         LATDbits.LATD5 = 0;
  7558   002EC8  9A8C               	bcf	140,5,c	;volatile
  7559   002ECA                     
  7560                           ;xlcd.c: 29:         LATDbits.LATD6 = 0;
  7561   002ECA  9C8C               	bcf	140,6,c	;volatile
  7562                           
  7563                           ;xlcd.c: 32:     DelayPORXLCD();
  7564   002ECC  EC26  F01A         	call	_DelayPORXLCD	;wreg free
  7565   002ED0                     
  7566                           ;xlcd.c: 44:         TRISD &= 0xf0;
  7567   002ED0  0EF0               	movlw	240
  7568   002ED2  1695               	andwf	149,f,c	;volatile
  7569   002ED4                     
  7570                           ;xlcd.c: 45:         PORTD &= 0xf0;
  7571   002ED4  0EF0               	movlw	240
  7572   002ED6  1683               	andwf	131,f,c	;volatile
  7573   002ED8                     
  7574                           ;xlcd.c: 46:         PORTD |= 0b00000010;
  7575   002ED8  8283               	bsf	131,1,c	;volatile
  7576   002EDA                     
  7577                           ;xlcd.c: 49:         LATDbits.LATD6 = 1;
  7578   002EDA  8C8C               	bsf	140,6,c	;volatile
  7579   002EDC                     
  7580                           ;xlcd.c: 50:         Delay_1us();
  7581   002EDC  EC3B  F01A         	call	_Delay_1us	;wreg free
  7582   002EE0                     
  7583                           ;xlcd.c: 51:         LATDbits.LATD6 = 0;
  7584   002EE0  9C8C               	bcf	140,6,c	;volatile
  7585   002EE2                     
  7586                           ;xlcd.c: 53:     DelayXLCD();
  7587   002EE2  EC1D  F01A         	call	_DelayXLCD	;wreg free
  7588   002EE6                     
  7589                           ;xlcd.c: 63:         PORTD &= 0xf0;
  7590   002EE6  0EF0               	movlw	240
  7591   002EE8  1683               	andwf	131,f,c	;volatile
  7592   002EEA                     
  7593                           ;xlcd.c: 64:         PORTD |= 0b00000010;
  7594   002EEA  8283               	bsf	131,1,c	;volatile
  7595   002EEC                     
  7596                           ;xlcd.c: 67:         LATDbits.LATD6 = 1;
  7597   002EEC  8C8C               	bsf	140,6,c	;volatile
  7598   002EEE                     
  7599                           ;xlcd.c: 68:         Delay_1us();
  7600   002EEE  EC3B  F01A         	call	_Delay_1us	;wreg free
  7601   002EF2                     
  7602                           ;xlcd.c: 69:         LATDbits.LATD6 = 0;
  7603   002EF2  9C8C               	bcf	140,6,c	;volatile
  7604   002EF4                     
  7605                           ;xlcd.c: 72:     DelayXLCD();
  7606   002EF4  EC1D  F01A         	call	_DelayXLCD	;wreg free
  7607   002EF8                     
  7608                           ;xlcd.c: 82:         PORTD &= 0xf0;
  7609   002EF8  0EF0               	movlw	240
  7610   002EFA  1683               	andwf	131,f,c	;volatile
  7611   002EFC                     
  7612                           ;xlcd.c: 83:         PORTD |= 0b00000010;
  7613   002EFC  8283               	bsf	131,1,c	;volatile
  7614   002EFE                     
  7615                           ;xlcd.c: 86:         LATDbits.LATD6 = 1;
  7616   002EFE  8C8C               	bsf	140,6,c	;volatile
  7617   002F00                     
  7618                           ;xlcd.c: 87:         Delay_1us();
  7619   002F00  EC3B  F01A         	call	_Delay_1us	;wreg free
  7620   002F04                     
  7621                           ;xlcd.c: 88:         LATDbits.LATD6 = 0;
  7622   002F04  9C8C               	bcf	140,6,c	;volatile
  7623   002F06                     
  7624                           ;xlcd.c: 96:         TRISD |= 0x0f;
  7625   002F06  0E0F               	movlw	15
  7626   002F08  1295               	iorwf	149,f,c	;volatile
  7627   002F0A                     
  7628                           ;xlcd.c: 101:         WriteCmdXLCD(lcdtype);
  7629   002F0A  5005               	movf	OpenXLCD@lcdtype^0,w,c
  7630   002F0C  EC5F  F018         	call	_WriteCmdXLCD
  7631   002F10                     
  7632                           ;xlcd.c: 102:         WriteCmdXLCD(lcdtype);
  7633   002F10  5005               	movf	OpenXLCD@lcdtype^0,w,c
  7634   002F12  EC5F  F018         	call	_WriteCmdXLCD
  7635   002F16                     
  7636                           ;xlcd.c: 104:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  7637   002F16  0E08               	movlw	8
  7638   002F18  EC5F  F018         	call	_WriteCmdXLCD
  7639   002F1C                     
  7640                           ;xlcd.c: 105:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  7641   002F1C  0E0F               	movlw	15
  7642   002F1E  EC5F  F018         	call	_WriteCmdXLCD
  7643   002F22                     
  7644                           ;xlcd.c: 107:         WriteCmdXLCD(0x01);
  7645   002F22  0E01               	movlw	1
  7646   002F24  EC5F  F018         	call	_WriteCmdXLCD
  7647   002F28                     
  7648                           ;xlcd.c: 109:         WriteCmdXLCD(0b00010011);
  7649   002F28  0E13               	movlw	19
  7650   002F2A  EC5F  F018         	call	_WriteCmdXLCD
  7651   002F2E                     
  7652                           ;xlcd.c: 111:         SetDDRamAddr(0);
  7653   002F2E  0E00               	movlw	0
  7654   002F30  EC9B  F017         	call	_SetDDRamAddr
  7655   002F34  0012               	return		;funcret
  7656   002F36                     __end_of_OpenXLCD:
  7657                           	callstack 0
  7658                           
  7659 ;; *************** function _WriteCmdXLCD *****************
  7660 ;; Defined at:
  7661 ;;		line 348 in file "xlcd.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  cmd             1    wreg     unsigned char 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  cmd             1    0[COMRAM] unsigned char 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0
  7676 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7678 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7679 ;;Total ram usage:        1 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; Hardware stack levels required when called: 2
  7682 ;; This function calls:
  7683 ;;		_BusyXLCD
  7684 ;;		_DelayExecution
  7685 ;;		_Delay_1us
  7686 ;; This function is called by:
  7687 ;;		_OpenXLCD
  7688 ;;		_XLCDgotoXY
  7689 ;;		_XLCDInit
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           	psect	text32
  7694   0030BE                     __ptext32:
  7695                           	callstack 0
  7696   0030BE                     _WriteCmdXLCD:
  7697                           	callstack 27
  7698                           
  7699                           ;incstack = 0
  7700                           ;WriteCmdXLCD@cmd stored from wreg
  7701   0030BE  6E01               	movwf	WriteCmdXLCD@cmd^0,c
  7702   0030C0                     l3674:
  7703   0030C0  ECD5  F018         	call	_BusyXLCD	;wreg free
  7704   0030C4  0900               	iorlw	0
  7705   0030C6  A4D8               	btfss	status,2,c
  7706   0030C8  EF68  F018         	goto	u3641
  7707   0030CC  EF6A  F018         	goto	u3640
  7708   0030D0                     u3641:
  7709   0030D0  EF60  F018         	goto	l3674
  7710   0030D4                     u3640:
  7711   0030D4                     
  7712                           ;xlcd.c: 368:         TRISD &= 0xf0;
  7713   0030D4  0EF0               	movlw	240
  7714   0030D6  1695               	andwf	149,f,c	;volatile
  7715                           
  7716                           ;xlcd.c: 369:         PORTD &= 0xf0;
  7717   0030D8  0EF0               	movlw	240
  7718   0030DA  1683               	andwf	131,f,c	;volatile
  7719                           
  7720                           ;xlcd.c: 370:         PORTD |= (cmd>>4)&0x0f;
  7721   0030DC  3801               	swapf	WriteCmdXLCD@cmd^0,w,c
  7722   0030DE  0B0F               	andlw	15
  7723   0030E0  0B0F               	andlw	15
  7724   0030E2  1283               	iorwf	131,f,c	;volatile
  7725   0030E4                     
  7726                           ;xlcd.c: 372:         LATDbits.LATD4 = 0;
  7727   0030E4  988C               	bcf	140,4,c	;volatile
  7728   0030E6                     
  7729                           ;xlcd.c: 373:         LATDbits.LATD5 = 0;
  7730   0030E6  9A8C               	bcf	140,5,c	;volatile
  7731   0030E8                     
  7732                           ;xlcd.c: 374:         Delay_1us();
  7733   0030E8  EC3B  F01A         	call	_Delay_1us	;wreg free
  7734   0030EC                     
  7735                           ;xlcd.c: 375:         LATDbits.LATD6 = 1;
  7736   0030EC  8C8C               	bsf	140,6,c	;volatile
  7737   0030EE                     
  7738                           ;xlcd.c: 376:         Delay_1us();
  7739   0030EE  EC3B  F01A         	call	_Delay_1us	;wreg free
  7740   0030F2                     
  7741                           ;xlcd.c: 377:         LATDbits.LATD6 = 0;
  7742   0030F2  9C8C               	bcf	140,6,c	;volatile
  7743                           
  7744                           ;xlcd.c: 382:         PORTD &= 0xf0;
  7745   0030F4  0EF0               	movlw	240
  7746   0030F6  1683               	andwf	131,f,c	;volatile
  7747                           
  7748                           ;xlcd.c: 383:         PORTD |= cmd&0x0f;
  7749   0030F8  5001               	movf	WriteCmdXLCD@cmd^0,w,c
  7750   0030FA  0B0F               	andlw	15
  7751   0030FC  1283               	iorwf	131,f,c	;volatile
  7752   0030FE                     
  7753                           ;xlcd.c: 385:         Delay_1us();
  7754   0030FE  EC3B  F01A         	call	_Delay_1us	;wreg free
  7755   003102                     
  7756                           ;xlcd.c: 386:         LATDbits.LATD6 = 1;
  7757   003102  8C8C               	bsf	140,6,c	;volatile
  7758   003104                     
  7759                           ;xlcd.c: 387:         Delay_1us();
  7760   003104  EC3B  F01A         	call	_Delay_1us	;wreg free
  7761   003108                     
  7762                           ;xlcd.c: 388:         LATDbits.LATD6 = 0;
  7763   003108  9C8C               	bcf	140,6,c	;volatile
  7764                           
  7765                           ;xlcd.c: 392:         TRISD |= 0x0f;
  7766   00310A  0E0F               	movlw	15
  7767   00310C  1295               	iorwf	149,f,c	;volatile
  7768   00310E                     
  7769                           ;xlcd.c: 395:         DelayExecution();
  7770   00310E  EC36  F01A         	call	_DelayExecution	;wreg free
  7771   003112  0012               	return		;funcret
  7772   003114                     __end_of_WriteCmdXLCD:
  7773                           	callstack 0
  7774                           
  7775 ;; *************** function _SetDDRamAddr *****************
  7776 ;; Defined at:
  7777 ;;		line 165 in file "xlcd.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  DDaddr          1    wreg     unsigned char 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  DDaddr          1    3[COMRAM] unsigned char 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7791 ;;      Params:         0       0       0       0       0       0       0       0       0
  7792 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7793 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7794 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7795 ;;Total ram usage:        4 bytes
  7796 ;; Hardware stack levels used: 1
  7797 ;; Hardware stack levels required when called: 2
  7798 ;; This function calls:
  7799 ;;		_BusyXLCD
  7800 ;;		_DelayExecution
  7801 ;;		_Delay_1us
  7802 ;; This function is called by:
  7803 ;;		_OpenXLCD
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text33
  7808   002F36                     __ptext33:
  7809                           	callstack 0
  7810   002F36                     _SetDDRamAddr:
  7811                           	callstack 26
  7812                           
  7813                           ;incstack = 0
  7814                           ;SetDDRamAddr@DDaddr stored from wreg
  7815   002F36  6E04               	movwf	SetDDRamAddr@DDaddr^0,c
  7816   002F38                     l3704:
  7817   002F38  ECD5  F018         	call	_BusyXLCD	;wreg free
  7818   002F3C  0900               	iorlw	0
  7819   002F3E  A4D8               	btfss	status,2,c
  7820   002F40  EFA4  F017         	goto	u3651
  7821   002F44  EFA6  F017         	goto	u3650
  7822   002F48                     u3651:
  7823   002F48  EF9C  F017         	goto	l3704
  7824   002F4C                     u3650:
  7825   002F4C                     
  7826                           ;xlcd.c: 185:         TRISD &= 0xf0;
  7827   002F4C  0EF0               	movlw	240
  7828   002F4E  1695               	andwf	149,f,c	;volatile
  7829                           
  7830                           ;xlcd.c: 186:         PORTD &= 0xf0;
  7831   002F50  0EF0               	movlw	240
  7832   002F52  1683               	andwf	131,f,c	;volatile
  7833                           
  7834                           ;xlcd.c: 187:         PORTD |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  7835   002F54  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  7836   002F56  6E01               	movwf	??_SetDDRamAddr^0,c
  7837   002F58  6A02               	clrf	(??_SetDDRamAddr+1)^0,c
  7838   002F5A  0E80               	movlw	128
  7839   002F5C  1201               	iorwf	??_SetDDRamAddr^0,f,c
  7840   002F5E  0E00               	movlw	0
  7841   002F60  1202               	iorwf	(??_SetDDRamAddr+1)^0,f,c
  7842   002F62  0E04               	movlw	4
  7843   002F64  6E03               	movwf	(??_SetDDRamAddr+2)^0,c
  7844   002F66                     u3665:
  7845   002F66  3402               	rlcf	(??_SetDDRamAddr+1)^0,w,c
  7846   002F68  3202               	rrcf	(??_SetDDRamAddr+1)^0,f,c
  7847   002F6A  3201               	rrcf	??_SetDDRamAddr^0,f,c
  7848   002F6C  2E03               	decfsz	(??_SetDDRamAddr+2)^0,f,c
  7849   002F6E  EFB3  F017         	goto	u3665
  7850   002F72  5001               	movf	??_SetDDRamAddr^0,w,c
  7851   002F74  0B0F               	andlw	15
  7852   002F76  1283               	iorwf	131,f,c	;volatile
  7853   002F78                     
  7854                           ;xlcd.c: 189:         LATDbits.LATD4 = 0;
  7855   002F78  988C               	bcf	140,4,c	;volatile
  7856   002F7A                     
  7857                           ;xlcd.c: 190:         LATDbits.LATD5 = 0;
  7858   002F7A  9A8C               	bcf	140,5,c	;volatile
  7859   002F7C                     
  7860                           ;xlcd.c: 191:         Delay_1us();
  7861   002F7C  EC3B  F01A         	call	_Delay_1us	;wreg free
  7862   002F80                     
  7863                           ;xlcd.c: 192:         LATDbits.LATD6 = 1;
  7864   002F80  8C8C               	bsf	140,6,c	;volatile
  7865   002F82                     
  7866                           ;xlcd.c: 193:         Delay_1us();
  7867   002F82  EC3B  F01A         	call	_Delay_1us	;wreg free
  7868   002F86                     
  7869                           ;xlcd.c: 194:         LATDbits.LATD6 = 0;
  7870   002F86  9C8C               	bcf	140,6,c	;volatile
  7871                           
  7872                           ;xlcd.c: 199:         PORTD &= 0xf0;
  7873   002F88  0EF0               	movlw	240
  7874   002F8A  1683               	andwf	131,f,c	;volatile
  7875                           
  7876                           ;xlcd.c: 200:         PORTD |= (DDaddr&0x0f);
  7877   002F8C  5004               	movf	SetDDRamAddr@DDaddr^0,w,c
  7878   002F8E  0B0F               	andlw	15
  7879   002F90  1283               	iorwf	131,f,c	;volatile
  7880   002F92                     
  7881                           ;xlcd.c: 202:         Delay_1us();
  7882   002F92  EC3B  F01A         	call	_Delay_1us	;wreg free
  7883   002F96                     
  7884                           ;xlcd.c: 203:         LATDbits.LATD6 = 1;
  7885   002F96  8C8C               	bsf	140,6,c	;volatile
  7886   002F98                     
  7887                           ;xlcd.c: 204:         Delay_1us();
  7888   002F98  EC3B  F01A         	call	_Delay_1us	;wreg free
  7889   002F9C                     
  7890                           ;xlcd.c: 205:         LATDbits.LATD6 = 0;
  7891   002F9C  9C8C               	bcf	140,6,c	;volatile
  7892                           
  7893                           ;xlcd.c: 209:         TRISD |= 0x0f;
  7894   002F9E  0E0F               	movlw	15
  7895   002FA0  1295               	iorwf	149,f,c	;volatile
  7896   002FA2                     
  7897                           ;xlcd.c: 212:         DelayExecution();
  7898   002FA2  EC36  F01A         	call	_DelayExecution	;wreg free
  7899   002FA6  0012               	return		;funcret
  7900   002FA8                     __end_of_SetDDRamAddr:
  7901                           	callstack 0
  7902                           
  7903 ;; *************** function _DelayExecution *****************
  7904 ;; Defined at:
  7905 ;;		line 477 in file "xlcd.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      void 
  7912 ;; Registers used:
  7913 ;;		wreg
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0
  7920 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7922 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7923 ;;Total ram usage:        0 bytes
  7924 ;; Hardware stack levels used: 1
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_SetDDRamAddr
  7929 ;;		_WriteCmdXLCD
  7930 ;;		_WriteDataXLCD
  7931 ;;		_SetCGRamAddr
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           	psect	text34
  7936   00346C                     __ptext34:
  7937                           	callstack 0
  7938   00346C                     _DelayExecution:
  7939                           	callstack 28
  7940   00346C  0EA6               	movlw	166
  7941   00346E                     u4687:
  7942   00346E  2EE8               	decfsz	wreg,f,c
  7943   003470  D7FE               	bra	u4687
  7944   003472  D000               	nop2	
  7945   003474  0012               	return		;funcret
  7946   003476                     __end_of_DelayExecution:
  7947                           	callstack 0
  7948                           
  7949 ;; *************** function _BusyXLCD *****************
  7950 ;; Defined at:
  7951 ;;		line 216 in file "xlcd.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      unsigned char 
  7958 ;; Registers used:
  7959 ;;		wreg, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7968 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7969 ;;Total ram usage:        0 bytes
  7970 ;; Hardware stack levels used: 1
  7971 ;; Hardware stack levels required when called: 1
  7972 ;; This function calls:
  7973 ;;		_Delay_1us
  7974 ;; This function is called by:
  7975 ;;		_SetDDRamAddr
  7976 ;;		_WriteCmdXLCD
  7977 ;;		_WriteDataXLCD
  7978 ;;		_SetCGRamAddr
  7979 ;;		_ReadAddrXLCD
  7980 ;;		_ReadDataXLCD
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text35
  7985   0031AA                     __ptext35:
  7986                           	callstack 0
  7987   0031AA                     _BusyXLCD:
  7988                           	callstack 27
  7989   0031AA                     
  7990                           ;xlcd.c: 218:         LATDbits.LATD4 = 1;
  7991   0031AA  888C               	bsf	140,4,c	;volatile
  7992                           
  7993                           ;xlcd.c: 219:         LATDbits.LATD5 = 0;
  7994   0031AC  9A8C               	bcf	140,5,c	;volatile
  7995   0031AE                     
  7996                           ;xlcd.c: 220:         Delay_1us();
  7997   0031AE  EC3B  F01A         	call	_Delay_1us	;wreg free
  7998   0031B2                     
  7999                           ;xlcd.c: 221:         LATDbits.LATD6 = 1;
  8000   0031B2  8C8C               	bsf	140,6,c	;volatile
  8001                           
  8002                           ;xlcd.c: 222:         Delay_1us();
  8003   0031B4  EC3B  F01A         	call	_Delay_1us	;wreg free
  8004   0031B8                     
  8005                           ;xlcd.c: 240:       if( PORTD & 0x08 )
  8006   0031B8  A683               	btfss	131,3,c	;volatile
  8007   0031BA  EFE1  F018         	goto	u3261
  8008   0031BE  EFE3  F018         	goto	u3260
  8009   0031C2                     u3261:
  8010   0031C2  EFEE  F018         	goto	l115
  8011   0031C6                     u3260:
  8012   0031C6                     
  8013                           ;xlcd.c: 242:         {;xlcd.c: 243:                 LATDbits.LATD6 = 0;
  8014   0031C6  9C8C               	bcf	140,6,c	;volatile
  8015   0031C8                     
  8016                           ;xlcd.c: 244:                 Delay_1us();
  8017   0031C8  EC3B  F01A         	call	_Delay_1us	;wreg free
  8018   0031CC                     
  8019                           ;xlcd.c: 245:                 LATDbits.LATD6 = 1;
  8020   0031CC  8C8C               	bsf	140,6,c	;volatile
  8021                           
  8022                           ;xlcd.c: 246:                 Delay_1us();
  8023   0031CE  EC3B  F01A         	call	_Delay_1us	;wreg free
  8024   0031D2                     
  8025                           ;xlcd.c: 247:                 LATDbits.LATD6 = 0;
  8026   0031D2  9C8C               	bcf	140,6,c	;volatile
  8027   0031D4                     
  8028                           ;xlcd.c: 248:                 LATDbits.LATD4 = 0;
  8029   0031D4  988C               	bcf	140,4,c	;volatile
  8030   0031D6                     
  8031                           ;xlcd.c: 249:                 return 1;
  8032   0031D6  0E01               	movlw	1
  8033   0031D8  EFF7  F018         	goto	l116
  8034   0031DC                     l115:
  8035                           
  8036                           ;xlcd.c: 252:         {;xlcd.c: 253:                 LATDbits.LATD6 = 0;
  8037   0031DC  9C8C               	bcf	140,6,c	;volatile
  8038   0031DE                     
  8039                           ;xlcd.c: 254:                 Delay_1us();
  8040   0031DE  EC3B  F01A         	call	_Delay_1us	;wreg free
  8041   0031E2                     
  8042                           ;xlcd.c: 255:                 LATDbits.LATD6 = 1;
  8043   0031E2  8C8C               	bsf	140,6,c	;volatile
  8044                           
  8045                           ;xlcd.c: 256:                 Delay_1us();
  8046   0031E4  EC3B  F01A         	call	_Delay_1us	;wreg free
  8047   0031E8                     
  8048                           ;xlcd.c: 257:                 LATDbits.LATD6 = 0;
  8049   0031E8  9C8C               	bcf	140,6,c	;volatile
  8050   0031EA                     
  8051                           ;xlcd.c: 258:                 LATDbits.LATD4 = 0;
  8052   0031EA  988C               	bcf	140,4,c	;volatile
  8053   0031EC                     
  8054                           ;xlcd.c: 259:                 return 0;
  8055   0031EC  0E00               	movlw	0
  8056   0031EE                     l116:
  8057   0031EE  0012               	return		;funcret
  8058   0031F0                     __end_of_BusyXLCD:
  8059                           	callstack 0
  8060                           
  8061 ;; *************** function _Delay_1us *****************
  8062 ;; Defined at:
  8063 ;;		line 471 in file "xlcd.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8081 ;;Total ram usage:        0 bytes
  8082 ;; Hardware stack levels used: 1
  8083 ;; This function calls:
  8084 ;;		Nothing
  8085 ;; This function is called by:
  8086 ;;		_OpenXLCD
  8087 ;;		_SetDDRamAddr
  8088 ;;		_BusyXLCD
  8089 ;;		_WriteCmdXLCD
  8090 ;;		_WriteDataXLCD
  8091 ;;		_SetCGRamAddr
  8092 ;;		_ReadAddrXLCD
  8093 ;;		_ReadDataXLCD
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           	psect	text36
  8098   003476                     __ptext36:
  8099                           	callstack 0
  8100   003476                     _Delay_1us:
  8101                           	callstack 28
  8102   003476  0E03               	movlw	3
  8103   003478                     u4697:
  8104   003478  2EE8               	decfsz	wreg,f,c
  8105   00347A  D7FE               	bra	u4697
  8106   00347C  0000               	nop	
  8107   00347E  0012               	return		;funcret
  8108   003480                     __end_of_Delay_1us:
  8109                           	callstack 0
  8110                           
  8111 ;; *************** function _DelayXLCD *****************
  8112 ;; Defined at:
  8113 ;;		line 475 in file "xlcd.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;		None
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;		None
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  1    wreg      void 
  8120 ;; Registers used:
  8121 ;;		wreg
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8127 ;;      Params:         0       0       0       0       0       0       0       0       0
  8128 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8129 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8130 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8131 ;;Total ram usage:        1 bytes
  8132 ;; Hardware stack levels used: 1
  8133 ;; This function calls:
  8134 ;;		Nothing
  8135 ;; This function is called by:
  8136 ;;		_OpenXLCD
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           	psect	text37
  8141   00343A                     __ptext37:
  8142                           	callstack 0
  8143   00343A                     _DelayXLCD:
  8144                           	callstack 28
  8145   00343A  0E2E               	movlw	46
  8146   00343C  6E01               	movwf	??_DelayXLCD^0,c
  8147   00343E  0E73               	movlw	115
  8148   003440                     u4707:
  8149   003440  2EE8               	decfsz	wreg,f,c
  8150   003442  D7FE               	bra	u4707
  8151   003444  2E01               	decfsz	??_DelayXLCD^0,f,c
  8152   003446  D7FC               	bra	u4707
  8153   003448  0000               	nop	
  8154   00344A  0012               	return		;funcret
  8155   00344C                     __end_of_DelayXLCD:
  8156                           	callstack 0
  8157                           
  8158 ;; *************** function _DelayPORXLCD *****************
  8159 ;; Defined at:
  8160 ;;		line 473 in file "xlcd.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8174 ;;      Params:         0       0       0       0       0       0       0       0       0
  8175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8176 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8177 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8178 ;;Total ram usage:        1 bytes
  8179 ;; Hardware stack levels used: 1
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_OpenXLCD
  8184 ;;		_XLCDInit
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           	psect	text38
  8189   00344C                     __ptext38:
  8190                           	callstack 0
  8191   00344C                     _DelayPORXLCD:
  8192                           	callstack 28
  8193   00344C  0EA3               	movlw	163
  8194   00344E  6E01               	movwf	??_DelayPORXLCD^0,c
  8195   003450  0E55               	movlw	85
  8196   003452                     u4717:
  8197   003452  2EE8               	decfsz	wreg,f,c
  8198   003454  D7FE               	bra	u4717
  8199   003456  2E01               	decfsz	??_DelayPORXLCD^0,f,c
  8200   003458  D7FC               	bra	u4717
  8201   00345A  0000               	nop	
  8202   00345C  0012               	return		;funcret
  8203   00345E                     __end_of_DelayPORXLCD:
  8204                           	callstack 0
  8205                           
  8206 ;; *************** function _InitPort *****************
  8207 ;; Defined at:
  8208 ;;		line 16 in file "ADC_main.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      void 
  8215 ;; Registers used:
  8216 ;;		wreg, status,2
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used: 1
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_main
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           	psect	text39
  8236   00345E                     __ptext39:
  8237                           	callstack 0
  8238   00345E                     _InitPort:
  8239                           	callstack 30
  8240   00345E  0E00               	movlw	0
  8241   003460  6E95               	movwf	149,c	;volatile
  8242   003462                     
  8243                           ;ADC_main.c: 18:     TRISAbits.TRISA0=1;
  8244   003462  8092               	bsf	146,0,c	;volatile
  8245   003464                     
  8246                           ;ADC_main.c: 19:     TRISBbits.TRISB4=1;
  8247   003464  8893               	bsf	147,4,c	;volatile
  8248   003466                     
  8249                           ;ADC_main.c: 20:     TRISBbits.TRISB6=0;
  8250   003466  9C93               	bcf	147,6,c	;volatile
  8251   003468                     
  8252                           ;ADC_main.c: 21:     TRISAbits.TRISA1=0;
  8253   003468  9292               	bcf	146,1,c	;volatile
  8254   00346A  0012               	return		;funcret
  8255   00346C                     __end_of_InitPort:
  8256                           	callstack 0
  8257                           
  8258                           	psect	rparam
  8259   000000                     
  8260                           	psect	idloc
  8261                           
  8262                           ;Config register IDLOC0 @ 0x200000
  8263                           ;	unspecified, using default values
  8264   200000                     	org	2097152
  8265   200000  FF                 	db	255
  8266                           
  8267                           ;Config register IDLOC1 @ 0x200001
  8268                           ;	unspecified, using default values
  8269   200001                     	org	2097153
  8270   200001  FF                 	db	255
  8271                           
  8272                           ;Config register IDLOC2 @ 0x200002
  8273                           ;	unspecified, using default values
  8274   200002                     	org	2097154
  8275   200002  FF                 	db	255
  8276                           
  8277                           ;Config register IDLOC3 @ 0x200003
  8278                           ;	unspecified, using default values
  8279   200003                     	org	2097155
  8280   200003  FF                 	db	255
  8281                           
  8282                           ;Config register IDLOC4 @ 0x200004
  8283                           ;	unspecified, using default values
  8284   200004                     	org	2097156
  8285   200004  FF                 	db	255
  8286                           
  8287                           ;Config register IDLOC5 @ 0x200005
  8288                           ;	unspecified, using default values
  8289   200005                     	org	2097157
  8290   200005  FF                 	db	255
  8291                           
  8292                           ;Config register IDLOC6 @ 0x200006
  8293                           ;	unspecified, using default values
  8294   200006                     	org	2097158
  8295   200006  FF                 	db	255
  8296                           
  8297                           ;Config register IDLOC7 @ 0x200007
  8298                           ;	unspecified, using default values
  8299   200007                     	org	2097159
  8300   200007  FF                 	db	255
  8301                           
  8302                           	psect	config
  8303                           
  8304                           ;Config register CONFIG1L @ 0x300000
  8305                           ;	PLL Prescaler Selection bits
  8306                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8307                           ;	System Clock Postscaler Selection bits
  8308                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8309                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8310                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8311   300000                     	org	3145728
  8312   300000  00                 	db	0
  8313                           
  8314                           ;Config register CONFIG1H @ 0x300001
  8315                           ;	Oscillator Selection bits
  8316                           ;	FOSC = HS, HS oscillator (HS)
  8317                           ;	Fail-Safe Clock Monitor Enable bit
  8318                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8319                           ;	Internal/External Oscillator Switchover bit
  8320                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8321   300001                     	org	3145729
  8322   300001  0C                 	db	12
  8323                           
  8324                           ;Config register CONFIG2L @ 0x300002
  8325                           ;	Power-up Timer Enable bit
  8326                           ;	PWRT = ON, PWRT enabled
  8327                           ;	Brown-out Reset Enable bits
  8328                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8329                           ;	Brown-out Reset Voltage bits
  8330                           ;	BORV = 3, Minimum setting 2.05V
  8331                           ;	USB Voltage Regulator Enable bit
  8332                           ;	VREGEN = OFF, USB voltage regulator disabled
  8333   300002                     	org	3145730
  8334   300002  1E                 	db	30
  8335                           
  8336                           ;Config register CONFIG2H @ 0x300003
  8337                           ;	Watchdog Timer Enable bit
  8338                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8339                           ;	Watchdog Timer Postscale Select bits
  8340                           ;	WDTPS = 32768, 1:32768
  8341   300003                     	org	3145731
  8342   300003  1E                 	db	30
  8343                           
  8344                           ; Padding undefined space
  8345   300004                     	org	3145732
  8346   300004  FF                 	db	255
  8347                           
  8348                           ;Config register CONFIG3H @ 0x300005
  8349                           ;	CCP2 MUX bit
  8350                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8351                           ;	PORTB A/D Enable bit
  8352                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8353                           ;	Low-Power Timer 1 Oscillator Enable bit
  8354                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8355                           ;	MCLR Pin Enable bit
  8356                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8357   300005                     	org	3145733
  8358   300005  81                 	db	129
  8359                           
  8360                           ;Config register CONFIG4L @ 0x300006
  8361                           ;	Stack Full/Underflow Reset Enable bit
  8362                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8363                           ;	Single-Supply ICSP Enable bit
  8364                           ;	LVP = ON, Single-Supply ICSP enabled
  8365                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8366                           ;	ICPRT = OFF, ICPORT disabled
  8367                           ;	Extended Instruction Set Enable bit
  8368                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8369                           ;	Background Debugger Enable bit
  8370                           ;	DEBUG = 0x1, unprogrammed default
  8371   300006                     	org	3145734
  8372   300006  85                 	db	133
  8373                           
  8374                           ; Padding undefined space
  8375   300007                     	org	3145735
  8376   300007  FF                 	db	255
  8377                           
  8378                           ;Config register CONFIG5L @ 0x300008
  8379                           ;	Code Protection bit
  8380                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8381                           ;	Code Protection bit
  8382                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8383                           ;	Code Protection bit
  8384                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8385                           ;	Code Protection bit
  8386                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8387   300008                     	org	3145736
  8388   300008  0F                 	db	15
  8389                           
  8390                           ;Config register CONFIG5H @ 0x300009
  8391                           ;	Boot Block Code Protection bit
  8392                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8393                           ;	Data EEPROM Code Protection bit
  8394                           ;	CPD = OFF, Data EEPROM is not code-protected
  8395   300009                     	org	3145737
  8396   300009  C0                 	db	192
  8397                           
  8398                           ;Config register CONFIG6L @ 0x30000A
  8399                           ;	Write Protection bit
  8400                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8401                           ;	Write Protection bit
  8402                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8403                           ;	Write Protection bit
  8404                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8405                           ;	Write Protection bit
  8406                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8407   30000A                     	org	3145738
  8408   30000A  0F                 	db	15
  8409                           
  8410                           ;Config register CONFIG6H @ 0x30000B
  8411                           ;	Configuration Register Write Protection bit
  8412                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8413                           ;	Boot Block Write Protection bit
  8414                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8415                           ;	Data EEPROM Write Protection bit
  8416                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8417   30000B                     	org	3145739
  8418   30000B  E0                 	db	224
  8419                           
  8420                           ;Config register CONFIG7L @ 0x30000C
  8421                           ;	Table Read Protection bit
  8422                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8423                           ;	Table Read Protection bit
  8424                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8425                           ;	Table Read Protection bit
  8426                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8427                           ;	Table Read Protection bit
  8428                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8429   30000C                     	org	3145740
  8430   30000C  0F                 	db	15
  8431                           
  8432                           ;Config register CONFIG7H @ 0x30000D
  8433                           ;	Boot Block Table Read Protection bit
  8434                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8435   30000D                     	org	3145741
  8436   30000D  40                 	db	64
  8437                           tosu	equ	0xFFF
  8438                           tosh	equ	0xFFE
  8439                           tosl	equ	0xFFD
  8440                           stkptr	equ	0xFFC
  8441                           pclatu	equ	0xFFB
  8442                           pclath	equ	0xFFA
  8443                           pcl	equ	0xFF9
  8444                           tblptru	equ	0xFF8
  8445                           tblptrh	equ	0xFF7
  8446                           tblptrl	equ	0xFF6
  8447                           tablat	equ	0xFF5
  8448                           prodh	equ	0xFF4
  8449                           prodl	equ	0xFF3
  8450                           indf0	equ	0xFEF
  8451                           postinc0	equ	0xFEE
  8452                           postdec0	equ	0xFED
  8453                           preinc0	equ	0xFEC
  8454                           plusw0	equ	0xFEB
  8455                           fsr0h	equ	0xFEA
  8456                           fsr0l	equ	0xFE9
  8457                           wreg	equ	0xFE8
  8458                           indf1	equ	0xFE7
  8459                           postinc1	equ	0xFE6
  8460                           postdec1	equ	0xFE5
  8461                           preinc1	equ	0xFE4
  8462                           plusw1	equ	0xFE3
  8463                           fsr1h	equ	0xFE2
  8464                           fsr1l	equ	0xFE1
  8465                           bsr	equ	0xFE0
  8466                           indf2	equ	0xFDF
  8467                           postinc2	equ	0xFDE
  8468                           postdec2	equ	0xFDD
  8469                           preinc2	equ	0xFDC
  8470                           plusw2	equ	0xFDB
  8471                           fsr2h	equ	0xFDA
  8472                           fsr2l	equ	0xFD9
  8473                           status	equ	0xFD8

Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         103
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      94
    BANK0           160    105     128
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    putrsXLCD@buffer	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), STR_10(CODE[6]), STR_11(CODE[6]), STR_12(CODE[6]), 
		 -> STR_3(CODE[5]), STR_4(CODE[2]), STR_5(CODE[6]), STR_6(CODE[6]), 
		 -> STR_7(CODE[6]), STR_8(CODE[6]), STR_9(CODE[6]), 

    putsXLCD@buffer	PTR unsigned char  size(1) Largest target is 40
		 -> main@string_volt(BANK0[40]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1068$buffer	PTR unsigned char  size(2) Largest target is 0

    S1068$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@string_volt(BANK0[40]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_13(CODE[4]), STR_16(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___flmul
    _putsXLCD->_WriteDataXLCD
    _putrsXLCD->_WriteDataXLCD
    _XLCDgotoXY->_WriteCmdXLCD
    _XLCDInit->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0   34893
                                             63 BANK0     42    42      0
                           _InitPort
                           _XLCDInit
                         _XLCDgotoXY
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                           _adc_Init
                          _putrsXLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   24850
                                             44 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   24352
                                             90 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     9      3   23855
                                             78 COMRAM    12     9      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     643
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   21427
                                             70 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2689
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             50 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1702
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _putsXLCD                                             1     0      1     165
                                              1 COMRAM     1     0      1
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _putrsXLCD                                            1     0      1     925
                                              1 COMRAM     1     0      1
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                           _BusyXLCD
                     _DelayExecution
                          _Delay_1us
 ---------------------------------------------------------------------------------
 (1) _adc_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _XLCDgotoXY                                           4     0      4    1782
                                              1 COMRAM     4     0      4
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _XLCDInit                                             0     0      0     176
                       _DelayPORXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     132
                                              4 COMRAM     1     1      0
                       _DelayPORXLCD
                          _DelayXLCD
                          _Delay_1us
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                           _BusyXLCD
                     _DelayExecution
                          _Delay_1us
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      44
                                              0 COMRAM     4     4      0
                           _BusyXLCD
                     _DelayExecution
                          _Delay_1us
 ---------------------------------------------------------------------------------
 (3) _DelayExecution                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                          _Delay_1us
 ---------------------------------------------------------------------------------
 (3) _Delay_1us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPort
   _XLCDInit
     _DelayPORXLCD
     _OpenXLCD
       _DelayPORXLCD
       _DelayXLCD
       _Delay_1us
       _SetDDRamAddr
         _BusyXLCD
           _Delay_1us
         _DelayExecution
         _Delay_1us
       _WriteCmdXLCD
         _BusyXLCD
         _DelayExecution
         _Delay_1us
     _WriteCmdXLCD
   _XLCDgotoXY
     _WriteCmdXLCD
   ___fldiv
     ___flmul (ARG)
   ___flge
     ___flmul (ARG)
   ___flmul
   ___xxtofl
   _adc_Init
   _putrsXLCD
     _WriteDataXLCD
       _BusyXLCD
       _DelayExecution
       _Delay_1us
   _putsXLCD
     _WriteDataXLCD
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     69      80       5       80.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5E       1       98.9%
BITBIGSFRhhh        3B      0       0      20        0.0%
BITBIGSFRhl         2A      0       0      21        0.0%
BITBIGSFRlll        21      0       0      27        0.0%
BITBIGSFRllhhh       5      0       0      23        0.0%
BITBIGSFRllhlh       5      0       0      25        0.0%
BITBIGSFRllhhl       1      0       0      24        0.0%
BITBIGSFRllhll       1      0       0      26        0.0%
BITBIGSFRlh          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      28        0.0%
DATA                 0      0     12E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Dec 01 18:36:38 2023

              ___fldiv@aexp 0032                ___fldiv@bexp 0031             main@string_volt 00A1  
              ___fldiv@sign 002A                          l45 346A                          l54 1758  
                        l48 33A8                          l66 1A94                          l59 1918  
                        l68 1BB0         ___wmul@multiplicand 0003                         l100 2F34  
                       l112 2FA6                         l115 31DC                         l116 31EE  
                       l141 3066                         l135 3112                         l153 334A  
                       l162 344A                         l170 337A                         l147 33D2  
                       l156 347E                         l165 3474                         l173 3438  
                       l181 33F8                         l159 345C                         l440 2E0A  
                       l451 2BB8                         l446 2B72                         l710 1466  
                       l455 3316                         l711 142C                         l802 1E72  
                       l812 1FA2                         l804 1EEA                         l805 1ED8  
                       l709 1478                         l901 1288                         l726 1592  
                       l718 1748                         l478 2AB4                         l735 1662  
                       l751 31A8                         l736 1650                         l904 0BBE  
                       l850 2946                         l906 0A04                         l843 28EA  
                       l763 237A                         l836 2852                         l765 21DA  
                       l774 2220                         l934 1006                         l839 29AE  
                       l776 2298                         l768 219E                         l952 2EA8  
                       l777 2286                         l890 300C                         l795 1C7C  
                       l859 32DE                         l956 2EB0                         l886 2FBE  
                       l990 326C                         l799 1FE0                         l983 25E8  
                       _pad 2FA8                         wreg 0FE8                ___flmul@aexp 0012  
              ___flmul@bexp 0013                ___flmul@sign 000D                ___flmul@temp 0018  
              ___flmul@prod 0014                ___fltol@exp1 000A                        l1000 2CB6  
                      l1010 273E                        l1021 30BC                        l1007 27FA  
                      l1050 3480                        l1027 3162                        l1039 2D60  
                      l1047 322E                        l3000 219C                        l1056 32A6  
                      l3010 21EA                        l3002 21A8                        l3012 2200  
                      l3020 2230                        l3004 21C6                        l3100 1C9C  
                      l3022 223E                        l3014 2206                        l3006 21C8  
                      l3110 1CDC                        l4000 33BA                        l3032 22A8  
                      l3040 22F0                        l3024 2242                        l3016 2210  
                      l3008 21D8                        l3200 2D62                        l3120 1D26  
                      l3112 1CE8                        l3104 1CB0                        l4002 33BC  
                      l3050 235A                        l3042 230A                        l3034 22B4  
                      l3026 2250                        l3018 221E                        l3210 2E02  
                      l3202 2D90                        l3130 1D78                        l3122 1D32  
                      l3114 1D00                        l3106 1CBC                        l3052 2368  
                      l3044 2320                        l3036 22C2                        l3028 227E  
                      l3212 2E08                        l3204 2DA0                        l3220 2AF4  
                      l3140 1DF6                        l3132 1D88                        l3124 1D42  
                      l3116 1D0C                        l3108 1CC6                        l3054 236E  
                      l3046 233A                        l3038 22EC                        l3206 2DCE  
                      l3230 2B60                        l3222 2B22                        l3150 1E70  
                      l3142 1E2C                        l3134 1DA4                        l3126 1D4E  
                      l3118 1D18                        l3070 1BD4                        l3310 2C4C  
                      l3302 2BBA                        l3400 31DE                        l4040 2862  
                      l3056 2370                        l3048 2356                        l3208 2DDE  
                      l3232 2BB0                        l3224 2B32                        l3216 2AB6  
                      l3160 1ED0                        l3152 1E82                        l3144 1E3A  
                      l3136 1DB0                        l3128 1D5E                        l3080 1C1A  
                      l3072 1BE4                        l3064 1BB8                        l3240 32F6  
                      l3320 2CAE                        l3304 2BDA                        l3402 31E2  
                      l4050 28A0                        l4042 2878                        l4034 27FE  
                      l3234 2BB6                        l3226 2B40                        l3218 2AE4  
                      l3170 1F3E                        l3154 1E90                        l3146 1E58  
                      l3138 1DCC                        l3090 1C46                        l3082 1C20  
                      l3074 1BF4                        l3066 1BC4                        l3242 3306  
                      l3306 2C18                        l3314 2C58                        l3330 3076  
                      l3404 31E8                        l3412 346C                        l4060 2928  
                      l4052 28D2                        l4036 280E                        l3228 2B52  
                      l3180 1FA6                        l3164 1EFA                        l3172 1F42  
                      l3156 1E94                        l3148 1E62                        l3092 1C56  
                      l3084 1C26                        l3076 1C04                        l3068 1BD2  
                      l3260 2A1A                        l3252 29DA                        l3316 2C6A  
                      l3308 2C40                        l3340 2660                        l3332 308A  
                      l2700 2CFE                        l3406 31EA                        l4070 297E  
                      l4062 2936                        l4054 28D4                        l4046 288C  
                      l4038 281C                        l3190 1FD0                        l3182 1FB6  
                      l3174 1F5C                        l3166 1F06                        l3158 1EA2  
                      l3094 1C66                        l3086 1C34                        l3078 1C0A  
                      l3238 32E0                        l2710 12A4                        l3270 2A4A  
                      l3262 2A28                        l3254 2A04                        l3246 29B0  
                      l3350 272E                        l3342 2674                        l2702 2D30  
                      l3408 31EC                        l4072 298E                        l4064 2954  
                      l4056 28E0                        l4048 2894                        l3184 1FC4  
                      l3176 1F70                        l3168 1F14                        l3096 1C6C  
                      l3088 1C36                        l2800 1458                        l2720 12D8  
                      l2712 12A6                        l3280 2A74                        l3272 2A54  
                      l3256 2A06                        l3248 29C6                        l3360 27EA  
                      l3344 2682                        l3352 2762                        l3336 25EA  
                      l3328 3068                        l4400 092C                        l4074 299C  
                      l4066 2956                        l4058 291C                        l3186 1FC6  
                      l3178 1F8A                        l3098 1C8C                        l2802 145A  
                      l2730 130A                        l2714 12B6                        l2722 12E0  
                      l2706 128A                        l3194 3164                        l3282 2A84  
                      l3258 2A16                        l3354 279E                        l3338 260A  
                      l4330 31FC                        l4410 098A                        l4402 0936  
                      l3380 31B2                        l4076 299E                        l4068 295A  
                      l3188 1FCC                        l2900 1728                        l2820 14E2  
                      l2812 14AA                        l2804 1464                        l2740 1340  
                      l2732 1310                        l2724 12F0                        l2716 12C6  
                      l2708 1296                        l3196 3174                        l3284 2A94  
                      l3268 2A40                        l3356 27B2                        l3348 26F2  
                      l4332 320A                        l4340 2FCA                        l4500 0E56  
                      l4412 098E                        l3390 31D2                        l3382 31B8  
                      l3710 2F7A                        l3702 2F38                        l2902 1736  
                      l2822 14E6                        l2814 14BA                        l2806 1486  
                      l2830 1506                        l2750 137C                        l2742 1350  
                      l2734 131E                        l2726 12F6                        l2718 12D6  
                      l3286 2AA4                        l3278 2A68                        l3358 27DA  
                      l4334 320E                        l4342 2FDA                        l4350 3276  
                      l4510 0F2E                        l4502 0E8A                        l4430 0A14  
                      l4414 0994                        l4406 0952                        l3392 31D4  
                      l3384 31C6                        l3376 31AA                        l3720 2F92  
                      l3712 2F7C                        l3704 2F38                        l2904 1738  
                      l2832 152C                        l2840 1582                        l2824 14F4  
                      l2816 14C8                        l2808 1496                        l2760 139A  
                      l2752 138A                        l2744 1352                        l2736 1320  
                      l2728 1308                        l4360 3144                        l4352 3114  
                      l4328 31F0                        l4344 2FDE                        l4336 2FA8  
                      l4520 0F58                        l4504 0EE0                        l4512 0F32  
                      l4440 0AFC                        l4432 0A1A                        l4416 099C  
                      l4408 0978                        l4424 09B4                        l2920 33D4  
                      l4600 239E                        l3394 31D6                        l3386 31C8  
                      l3378 31AE                        l3722 2F96                        l3714 2F80  
                      l3706 2F4C                        l2930 1FFC                        l2850 15D6  
                      l2842 15A8                        l2834 1560                        l2826 14F6  
                      l2818 14D6                        l2770 13AE                        l2762 139E  
                      l2754 138E                        l2738 1330                        l2746 135A  
                      l4354 3128                        l4362 3148                        l4346 2FFC  
                      l4338 2FB6                        l4530 1026                        l4522 0F64  
                      l4514 0F42                        l4506 0EE6                        l4442 0B10  
                      l4450 0B8C                        l4434 0A4E                        l4426 09CE  
                      l4370 085C                        l2922 33F0                        l3650 2E0C  
                      l4610 23C4                        l4602 23A6                        l2916 3476  
                      l3388 31CC                        l3724 2F98                        l3716 2F82  
                      l3708 2F78                        l3820 2EB4                        l3900 3036  
                      l2940 2030                        l2932 1FFE                        l2860 1600  
                      l2852 15E4                        l2844 15B8                        l2836 1562  
                      l2828 1500                        l2780 13C2                        l2772 13B2  
                      l2764 13A2                        l2756 1392                        l2748 136A  
                      l4356 3134                        l2692 2CB8                        l4348 326E  
                      l4540 1058                        l4532 1036                        l4524 0FDC  
                      l4516 0F4A                        l4508 0F1A                        l4460 0BF2  
                      l4452 0BC6                        l4444 0B44                        l4436 0A8C  
                      l4380 08A6                        l4372 0860                        l4364 0838  
                      l3660 2E7A                        l3652 2E14                        l4620 241A  
                      l4612 23D0                        l4604 23B4                        l4700 32BA  
                      l3726 2F9C                        l3718 2F86                        l3830 2EC4  
                      l3822 2EB8                        l3910 3044                        l3902 3038  
                      l2950 2062                        l2934 200E                        l2942 2038  
                      l2926 1FE2                        l2870 1632                        l2862 1610  
                      l2854 15E6                        l2838 1572                        l2790 1414  
                      l2782 13C6                        l2774 13B6                        l2766 13A6  
                      l2758 1396                        l4358 3138                        l2694 2CC8  
                      l4550 108C                        l4542 105C                        l4534 103A  
                      l4526 0FFC                        l4518 0F50                        l4470 0C40  
                      l4462 0BF6                        l4454 0BD6                        l4446 0B4C  
                      l4438 0ABE                        l4390 08F4                        l4382 08B6  
                      l4374 0884                        l4366 083E                        l3654 2E36  
                      l3662 2E82                        l4630 2474                        l4622 243C  
                      l4606 23B8                        l4702 32C2                        l4710 174E  
                      ?_pad 000F                        l3664 344C                        l3728 2FA2  
                      l3680 30E6                        l3672 30C0                        l3840 2ED4  
                      l3832 2EC6                        l3824 2EBC                        l3920 3058  
                      l3912 3048                        l3904 303C                        l2960 2096  
                      l2952 2064                        l2944 2048                        l2936 201E  
                      l2928 1FEE                        l2880 168C                        l2872 1648  
                      l2856 15F4                        l2848 15CC                        l2864 1612  
                      l2792 1424                        l2776 13BA                        l2768 13AA  
                      l2784 13CA                        l2696 2CD8                        l4560 112A  
                      l4552 1090                        l4544 1062                        l4536 1040  
                      l4528 1018                        l4480 0CD8                        l4464 0C08  
                      l4472 0C48                        l4456 0BE2                        l4392 0906  
                      l4384 08C2                        l4376 088E                        l4368 084E  
                      l3656 2E3E                        l4632 247A                        l4640 24BC  
                      l4624 2444                        l4616 23D8                        l4608 23C0  
                      l4704 32D2                        l4800 1B76                        l4720 17C8  
                      l4712 1752                        l3690 30FE                        l3682 30E8  
                      l3674 30C0                        l3850 2EE2                        l3842 2ED8  
                      l3834 2EC8                        l3826 2EC0                        l3922 305C  
                      l3914 304C                        l3906 303E                        l2970 20DC  
                      l2954 2074                        l2962 209E                        l2946 204E  
                      l2938 202E                        l2890 1708                        l2882 16C6  
                      l2858 15FC                        l2866 1620                        l2794 143A  
                      l2786 13CE                        l2778 13BE                        l2698 2CE2  
                      l4570 117E                        l4554 1096                        l4538 1048  
                      l4546 1068                        l4562 112E                        l4490 0DBC  
                      l4482 0D30                        l4474 0C50                        l4466 0C16  
                      l4458 0BEA                        l4394 090A                        l4386 08CA  
                      l4378 0896                        l3658 2E5A                        l4650 2556  
                      l4642 24DC                        l4634 2482                        l4626 2458  
                      l4618 240A                        l4802 1B8A                        l4730 186E  
                      l4722 17DC                        l4714 1756                        l3940 3462  
                      l3668 343A                        l3692 3102                        l3684 30EC  
                      l3676 30D4                        l3860 2EF2                        l3852 2EE6  
                      l3844 2EDA                        l3836 2ECA                        l3828 2EC2  
                      l3924 305E                        l3916 3052                        l3908 3042  
                      l2980 2104                        l2972 20E0                        l2964 20AE  
                      l2956 2084                        l2948 2054                        l2892 170C  
                      l2876 1672                        l2884 16C8                        l2868 1624  
                      l2796 1446                        l2788 13F8                        l4580 11E6  
                      l4572 11AE                        l4564 114C                        l4556 10EE  
                      l4548 107A                        l4492 0DEE                        l4484 0D64  
                      l4476 0C60                        l4468 0C2E                        l4396 0910  
                      l4388 08CE                        l4652 2564                        l4644 2504  
                      l4660 25BA                        l4628 2462                        l4740 18B4  
                      l4732 1882                        l4724 17E4                        l4716 1766  
                      l4708 174A                        l3942 3464                        l3694 3104  
                      l3686 30EE                        l3678 30E4                        l3870 2F00  
                      l3862 2EF4                        l3854 2EEA                        l3846 2EDC  
                      l3838 2ED0                        l3950 338C                        l3918 3056  
                      l2990 2152                        l2966 20C4                        l2958 2094  
                      l2894 171A                        l2886 16D8                        l2878 167E  
                      l2798 144A                        l4590 124E                        l4582 11FC  
                      l4574 11BC                        l4566 1168                        l4558 1122  
                      l4494 0E04                        l4478 0C74                        l4486 0D6A  
                      l4398 0918                        l4638 248A                        l4750 1946  
                      l4742 18E6                        l4734 188A                        l4726 17F8  
                      l4718 17A6                        l3944 3466                        l3696 3108  
                      l3688 30F2                        l3880 2F16                        l3872 2F04  
                      l3864 2EF8                        l3856 2EEC                        l3848 2EE0  
                      l3960 3420                        l3952 339E                        l2992 2162  
                      l2984 2118                        l2968 20D4                        l2976 20F4  
                      l2896 1720                        l2888 16E8                        l4592 1264  
                      l4584 1202                        l4576 11D4                        l4568 1170  
                      l4496 0E36                        l4488 0D88                        l4648 252C  
                      l4664 25C6                        l4760 19C2                        l4752 1962  
                      l4744 1926                        l4736 1892                        l4728 1850  
                      l3946 3468                        l3938 345E                        l3698 310E  
                      l3882 2F1C                        l3874 2F06                        l3866 2EFC  
                      l3858 2EEE                        l3962 3426                        l3970 3366  
                      l3954 33A0                        l2994 216A                        l2986 2132  
                      l2978 2104                        l2898 1722                        l4594 126C  
                      l4586 1220                        l4498 0E46                        l4658 258E  
                      l4690 3248                        l4770 1A0E                        l4762 19DC  
                      l4746 192A                        l4754 1980                        l4738 189A  
                      l3884 2F22                        l3876 2F0A                        l3868 2EFE  
                      l3964 342C                        l3972 3372                        l3956 33A2  
                      l3948 337C                        l3892 3010                        l3980 332C  
                      l2996 217A                        l2988 2142                        l4588 123E  
                      l4692 3264                        l4780 1ABA                        l4764 19DE  
                      l4756 19B2                        l4748 193E                        l4772 1A30  
                      l3886 2F28                        l3878 2F10                        l3966 3432  
                      l3958 341C                        l3894 3010                        l3982 332E  
                      l2998 218E                        l4598 237C                        l4686 3230  
                      l4790 1B3C                        l4782 1AC2                        l4774 1A62  
                      l4766 19F2                        l4758 19C0                        l3888 2F2E  
                      l3968 334C                        l3896 3024                        l3976 3318  
                      l4688 3238                        l4696 32A8                        l4792 1B3E  
                      l4784 1ADE                        l4776 1AA2                        l4768 19FA  
                      l3898 3034                        l3978 331C                        l4890 25AC  
                      l4698 32B2                        l4794 1B58                        l4778 1AA6  
                      l4786 1AFC                        l3996 33AA                        l4884 23FC  
                      l4796 1B5A                        l4788 1B2E                        l3998 33AE  
                      l4886 249E                        l4798 1B6E                        l4888 2540  
                      STR_1 0801                        STR_2 0823                        STR_3 0829  
                      STR_4 0809                        STR_5 080B                        STR_6 0811  
                      STR_7 0817                        STR_8 081D                        STR_9 080B  
                      u2100 131E                        u2020 2CC8                        u2101 131A  
                      u2021 2CC4                        u2110 1330                        u2030 2CD8  
                      u2111 132C                        u2031 2CD4                        u2200 1478  
                      u2120 1340                        u3000 2A3C                        u2040 2CFE  
                      u2201 1474                        u2121 133C                        u3001 2A38  
                      u2041 2CFA                        u2210 1486                        u2130 137C  
                      u3010 2A64                        u2050 2D30                        u2211 1482  
                      u2131 1378                        u3011 2A60                        u2051 2D2C  
                      u2300 15E4                        u2220 1496                        u2140 138A  
                      u2060 12A4                        u3020 2A84                        u2301 15E0  
                      u2221 1492                        u2141 1386                        u2061 12A0  
                      u3021 2A80                        u2310 15F4                        u2230 14C8  
                      u2150 13F8                        u2070 12B6                        u3030 2A94  
                      u3110 2CA4                        u2311 15F0                        u2231 14C4  
                      u2151 13F4                        u2071 12B2                        u3031 2A90  
                      u3111 2C9E                        u2400 16D8                        u2320 1610  
                      u2240 14D6                        u2160 1410                        u2080 12C6  
                      u3120 2CA6                        u3200 2712                        u2401 16D4  
                      u2321 160C                        u2241 14D2                        u2161 140A  
                      u2081 12C2                        u3105 2C7C                        u2410 16E8  
                      u2330 1620                        u2250 14F4                        u2170 1412  
                      u2090 1308                        u3210 272E                        u2411 16E4  
                      u2331 161C                        u2251 14F0                        u2091 1304  
                      u3211 272A                        u2500 2074                        u2420 1708  
                      u2340 1632                        u2260 152C                        u2180 143A  
                      u3060 2BFA                        u3220 2782                        u3140 3076  
                      u4100 08B6                        u2501 2070                        u2421 1704  
                      u2341 162E                        u2261 1528                        u2181 1436  
                      u3205 2708                        u3141 3072                        u4101 08B2  
                      u2510 2084                        u2430 171A                        u2350 1648  
                      u2270 1572                        u2190 1458                        u3070 2C18  
                      u3230 279E                        u3150 2632                        u4030 322E  
                      u4110 08F4                        u2511 2080                        u2431 1716  
                      u2351 1644                        u2271 156E                        u2191 1454  
                      u3071 2C14                        u3231 279A                        u4031 322A  
                      u4111 08F0                        u2600 223E                        u2520 20C4  
                      u2440 1736                        u2360 165E                        u2280 15A8  
                      u3080 2C40                        u3240 27DA                        u3160 2660  
                      u4040 2FB6                        u4200 0BBE                        u4120 0906  
                      u2601 223A                        u2521 20C0                        u2441 1732  
                      u2361 165A                        u2281 15A4                        u3081 2C3C  
                      u3065 2BF0                        u3241 27D6                        u3225 2778  
                      u3161 265C                        u4041 2FB2                        u4201 0BBA  
                      u4121 0902                        u2610 2250                        u2530 2104  
                      u2370 1672                        u2290 15B8                        u3090 2C6A  
                      u3170 2682                        u4050 2FFC                        u4210 0BD6  
                      u4130 0978                        u2611 224C                        u2531 2100  
                      u2371 166E                        u2291 15B4                        u3091 2C66  
                      u3171 267E                        u3155 2628                        u4051 2FF8  
                      u4211 0BD2                        u4131 0974                        u3260 31C6  
                      u2620 227E                        u2540 217A                        u2460 1FFC  
                      u2700 1BE4                        u2380 168C                        u4060 32A6  
                      u4300 0F2E                        u4220 0C08                        u4140 098A  
                      u3261 31C2                        u2621 227A                        u2541 2176  
                      u2461 1FF8                        u2701 1BE0                        u2381 1688  
                      u4061 32A2                        u4301 0F2A                        u4221 0C04  
                      u4141 0986                        u2630 2294                        u2550 219C  
                      u2470 200E                        u2710 1BF4                        u2390 16C6  
                      u3190 26EE                        u4070 3162                        u4310 0FDC  
                      u4230 0C16                        u4150 0A00                        u2631 2290  
                      u2551 2198                        u2471 200A                        u2711 1BF0  
                      u2391 16C2                        u3191 26EA                        u4071 315E  
                      u4311 0FD8                        u4231 0C12                        u4151 09FC  
                      u2640 22A8                        u2560 21C6                        u2480 201E  
                      u2800 1EA2                        u2720 1C34                        u4400 1220  
                      u4320 1018                        u4240 0C40                        u4160 0A8C  
                      u4080 085C                        u2641 22A4                        u2561 21C2  
                      u2481 201A                        u2801 1E9E                        u2721 1C30  
                      u3185 2696                        u4401 121C                        u4321 1014  
                      u4241 0C3C                        u4161 0A88                        u4081 0858  
                      u2650 22C2                        u2570 21EA                        u2490 2062  
                      u2810 1ED0                        u2730 1C46                        u3186 26A0  
                      u4410 123E                        u4330 1026                        u4250 0D88  
                      u4170 0ABE                        u4090 08A6                        u2651 22BE  
                      u2571 21E6                        u2491 205E                        u2811 1ECC  
                      u2731 1C42                        u3187 26B0                        u4411 123A  
                      u4331 1022                        u4251 0D84                        u4171 0ABA  
                      u4091 08A2                        u2660 230A                        u2580 2200  
                      u2900 2E02                        u2820 1EE6                        u2740 1C56  
                      u4420 124E                        u4340 107A                        u4260 0DEE  
                      u4180 0AFC                        u3620 2E36                        u4500 18E6  
                      u2661 2306                        u2581 21FC                        u2901 2DFE  
                      u2821 1EE2                        u2741 1C52                        u4421 124A  
                      u4341 1076                        u4261 0DEA                        u4181 0AF8  
                      u3621 2E32                        u4501 18E2                        u3710 3024  
                      u2670 233A                        u2590 221E                        u2910 2AE4  
                      u2830 1EFA                        u2750 1C8C                        u4350 114C  
                      u4270 0E36                        u4190 0B88                        u3630 2EA8  
                      u4430 239E                        u4510 1918                        u3711 3020  
                      u2671 2336                        u2591 221A                        u2911 2AE0  
                      u2831 1EF6                        u2751 1C88                        u4351 1148  
                      u4271 0E32                        u4191 0B84                        u3631 2EA4  
                      u4431 239A                        u4511 1914                        u3640 30D4  
                      u3800 2878                        u2680 2368                        u2920 2B22  
                      u2840 1F14                        u2760 1C9C                        u4360 1168  
                      u4280 0E46                        u4440 241A                        u4520 1926  
                      u3641 30D0                        u3801 2874                        u2681 2364  
                      u2921 2B1E                        u2841 1F10                        u2761 1C98  
                      u4361 1164                        u4281 0E42                        u4441 2416  
                      u4521 1922                        u3650 2F4C                        u3730 3366  
                      u3810 28CE                        u2930 2B40                        u2850 1F5C  
                      u2770 1E16                        u2690 1BD2                        u4370 11CE  
                      u4290 0EE0                        u4450 243C                        u4530 19B2  
                      u3651 2F48                        u3731 3362                        u3811 28CA  
                      u2931 2B3C                        u2851 1F58                        u2691 1BCE  
                      u4371 11C8                        u4291 0EDC                        u4451 2438  
                      u4531 19AE                        u3820 2918                        u3740 334A  
                      u2940 2B60                        u2860 1F8A                        u2780 1E70  
                      u4380 11D0                        u4460 24D8                        u4540 19C0  
                      u3821 2914                        u3741 3346                        u2941 2B5C  
                      u2861 1F86                        u2781 1E6C                        u4461 24D4  
                      u4541 19BC                        u3830 2936                        u3750 33D2  
                      u2950 2BB0                        u2870 1FC4                        u2790 1E90  
                      u4390 11E2                        u4470 3264                        u4550 1A62  
                      u3831 2932                        u3751 33CE                        u2951 2BAC  
                      u2871 1FC0                        u2791 1E8C                        u2775 1E0C  
                      u4391 11DE                        u4471 3260                        u4551 1A5E  
                      u4607 18A6                        u3840 2946                        u2880 2D90  
                      u2960 32F6                        u4560 1A94                        u4480 1766  
                      u3665 2F66                        u3841 2942                        u2881 2D8C  
                      u2961 32F2                        u4561 1A90                        u4617 196E  
                      u4481 1762                        u3850 2954                        u2890 2DCE  
                      u2970 29C6                        u4570 1AA2                        u4707 3440  
                      u3851 2950                        u2891 2DCA                        u2971 29C2  
                      u4571 1A9E                        u4627 19CE                        u3860 298E  
                      u3780 280E                        u2980 29FA                        u4580 1B2E  
                      u4717 3452                        u3861 298A                        u3781 280A  
                      u4581 1B2A                        u4637 1A22                        u3870 299C  
                      u3790 281C                        u2990 2A28                        u4590 1B3C  
                      u3871 2998                        u3791 2818                        u2991 2A24  
                      u4591 1B38                        u4647 1AEA                        u4495 178A  
                      u2985 29F0                        u4657 1B4A                        u4667 1B9E  
                      u4677 33A4                        u4687 346E                        u4697 3478  
                      _dbuf 0100                        _labs 3068                        _main 174A  
                      _prec 00D7                        pad@i 0015                        pad@p 0012  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        _volt 00D1  
             ___fpclassifyf 2BBA                        prodh 0FF4                        prodl 0FF3  
                      start 0000             ___fldiv@new_exp 002B                ___param_bank 0000  
                     ??_pad 0014                _WriteCmdXLCD 30BE               ___fltol@sign1 0009  
                     ?_labs 0001               ?_SetDDRamAddr 0001             __end_of___fladd 174A  
                     ?_main 0001             __end_of___fldiv 237C             __end_of___flneg 3318  
                     STR_10 0811                       STR_11 080B                       STR_12 081D  
                     STR_13 082E                       STR_16 0832             __end_of___flmul 1FE2  
           __end_of___flsub 31AA             __end_of___fltol 2AB6                vfpfcnvrt@fmt 0050  
                     _PORTD 0F83                       _TRISD 0F95                       _flags 00DF  
          __end_of_XLCDInit 343A         read_prec_or_width@c 0009         read_prec_or_width@n 000A  
                     _fputc 2CB8                       _fputs 31F0                       labs@a 0001  
                     pad@fp 000F                       _width 00D5                       _putch 3480  
                     tablat 0FF5                       status 0FD8             __end_of_sprintf 32E0  
            ?___fpclassifyf 0001                 ?_XLCDgotoXY 0002             __initialization 33FA  
              __end_of_labs 30BE                __end_of_main 1BB8            __end_of_BusyXLCD 31F0  
          __end_of_InitPort 346C              ??_SetDDRamAddr 0001            __end_of_OpenXLCD 2F36  
                    ??_labs 0005                      ??_main 009F               __activetblptr 0002  
             _WriteDataXLCD 300E  __end_of_read_prec_or_width 2EB2                      ?_fputc 0001  
                    ?_fputs 0009                      _ADRESH 0FC4                      _ADRESL 0FC3  
          __end_of_adc_Init 33AA                      ?_putch 0001               vfpfcnvrt@done 0058  
          __end_of___xxtofl 29B0                  _ValorADC_H 00DB                  _ValorADC_L 00D9  
              _DelayPORXLCD 344C                vfprintf@cfmt 005E                      ___flge 2AB6  
                    ___fleq 2D62                   ??___fladd 0009                      ___wmul 33D4  
                 ??___fldiv 0022                   ??___flneg 0005                   ??___flmul 0009  
                 ??___flsub 0022                   ??___fltol 0005                      _efgtoa 0838  
                    _floorf 25EA                      _memcpy 3114        read_prec_or_width@ap 0008  
                    clear_0 3400                      clear_1 340C                      isa$std 0001  
                    pad@buf 0010              ?_WriteDataXLCD 0001                      _strcpy 326E  
                    fputc@c 0001                      fputs@c 000C                      fputs@i 000D  
                    fputs@s 0009             ___fpclassifyf@e 0009             ___fpclassifyf@u 000B  
           ___fpclassifyf@x 0001                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 0001  
          __end_of_putsXLCD 33D4            __end_of_vfprintf 326E                   ??_sprintf 005F  
          ??_DelayExecution 0001           __end_of_DelayXLCD 344C                  ___flge@ff1 001A  
                ___flge@ff2 001E             ??___fpclassifyf 0005           __end_of_Delay_1us 3480  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                ___fleq@ff1 0001                  ___fleq@ff2 0005                  __accesstop 0060  
   __end_of__initialization 3412                  ___flneg@f1 0001               ___rparam_used 0001  
                ___fltol@f1 0001              __pcstackCOMRAM 0001               __end_of_fputc 2D62  
             __end_of_fputs 3230                   ?_XLCDInit 0001               __end_of_putch 3482  
                   ??_fputc 0004                     ??_fputs 000C                     ??_putch 0001  
                __pbssBANK0 00C9                  __pbssBANK1 0100                   ?_BusyXLCD 0001  
           WriteCmdXLCD@cmd 0001                   ?_InitPort 0001        __end_of_SetDDRamAddr 2FA8  
                 ?_OpenXLCD 0001                     ?___flge 001A                     ?___fleq 0001  
         WriteDataXLCD@data 0001                     ?___wmul 0001                     ?_efgtoa 0047  
                   ?_floorf 0033                  ??_XLCDInit 0006             ??_WriteDataXLCD 0001  
                   ?_memcpy 0001                   ?_adc_Init 0001                     ?_strcpy 0001  
                 ?___xxtofl 0001                  ??_BusyXLCD 0001                  ??_InitPort 0001  
                ??_OpenXLCD 0005                     __Hparam 0000                     __Lparam 0000  
              ??_XLCDgotoXY 0006                     ___fladd 128A                     ___fldiv 1FE2  
                   ___flneg 32E0                     ___flmul 1BB8                     ___flsub 3164  
                   ___fltol 29B0                   ?_putsXLCD 0002                   ?_vfprintf 005B  
              __psmallconst 0800                  ??_adc_Init 0001                     __pcinit 33FA  
           putrsXLCD@buffer 0002                     __ramtop 0800                     __ptext0 174A  
                   __ptext1 32A8                     __ptext2 3230                     __ptext3 237C  
                   __ptext4 2E0C                     __ptext5 33D4                     __ptext6 0838  
                   __ptext7 326E                     __ptext8 2FA8                     __ptext9 31F0  
     read_prec_or_width@fmt 0007                  ??___xxtofl 0005                     efgtoa@c 004C  
                   efgtoa@d 006B                     efgtoa@e 006F                     efgtoa@f 0048  
                   efgtoa@g 0082                     efgtoa@h 0077                     efgtoa@i 007F  
                   efgtoa@l 007B                     efgtoa@m 006D                     efgtoa@n 0086  
                   efgtoa@p 0062                     efgtoa@t 0064                     efgtoa@u 0088  
                   efgtoa@w 0075                     _sprintf 32A8          __end_of_XLCDgotoXY 337C  
      end_of_initialization 3412                     floorf@e 0041                     floorf@m 003D  
                   floorf@u 0043                     floorf@x 0033                     memcpy@d 0008  
                   memcpy@n 0005                     memcpy@s 000A                     fputc@fp 0003  
             __Lmediumconst 0000                     fputs@fp 000B          _read_prec_or_width 2E0C  
         __end_of_vfpfcnvrt 25EA                  efgtoa@mode 0069                  efgtoa@sign 0081  
                   postdec2 0FDD         ?_read_prec_or_width 0007                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0054  
                ??_putsXLCD 0003                  ??_vfprintf 005E                     strcpy@d 0005  
         __end_of_putrsXLCD 334C                   _PORTBbits 0F81                 ___fladd@grs 0010  
             ___xxtofl@sign 0009                   _TRISAbits 0F92                   _TRISBbits 0F93  
                 _TRISDbits 0F95        ??_read_prec_or_width 0009                 ___fldiv@grs 002D  
               ___fldiv@rem 0026                 ___flmul@grs 000E                   _DelayXLCD 343A  
                 _Delay_1us 3476              __end_of___flge 2BBA              __end_of___fleq 2E0C  
               vfpfcnvrt@ap 0051                 vfpfcnvrt@cp 005A                 vfpfcnvrt@fp 004F  
            __end_of___wmul 33FA              __end_of_efgtoa 128A              __end_of_floorf 27FC  
            __end_of_memcpy 3164                  floorf@F521 00C9                _SetDDRamAddr 2F36  
        SetDDRamAddr@DDaddr 0004              __end_of_strcpy 32A8         start_initialization 33FA  
               __end_of_pad 300E                 XLCDgotoXY@x 0002                 XLCDgotoXY@y 0004  
     __end_of___fpclassifyf 2CB8                  ?_DelayXLCD 0001                  ?_Delay_1us 0001  
               vfprintf@fmt 005C                    ??___flge 0022                    ??___fleq 0009  
                  ??___wmul 0005                    ??_efgtoa 004D               ?_WriteCmdXLCD 0001  
                  ??_floorf 0037                    ??_memcpy 0007                    ??_strcpy 0004  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 001E  
                 ___fldiv@b 001A                   ___flmul@a 0005                   ___flmul@b 0001  
                 ___flsub@a 001E                   ___flsub@b 001A               __pcstackBANK0 0060  
               _efgtoa$1193 0066               _ValorleidoADC 00DD              putsXLCD@buffer 0002  
            ??_WriteCmdXLCD 0001                    ?___fladd 0001                    ?___fldiv 001A  
                  ?___flneg 0001                    ?___flmul 0001                    ?___flsub 001A  
                  ?___fltol 0001       __end_of_WriteDataXLCD 3068                 __smallconst 0800  
                  ?_sprintf 008C              ___wmul@product 0005                    _LATAbits 0F89  
                  _LATBbits 0F8A                    _LATDbits 0F8C                 ??_DelayXLCD 0001  
               ??_Delay_1us 0001               ?_DelayPORXLCD 0001             OpenXLCD@lcdtype 0005  
                  _XLCDInit 341C                   _vfpfcnvrt 237C                  _ADCON0bits 0FC2  
                _ADCON1bits 0FC1                  _ADCON2bits 0FC0           ___wmul@multiplier 0001  
                 _putrsXLCD 3318                  vfpfcnvrt@c 0059                    _BusyXLCD 31AA  
                  _InitPort 345E              ??_DelayPORXLCD 0001                    _OpenXLCD 2EB2  
                  __Hrparam 0000                   memcpy@tmp 0007                  vfprintf@ap 005D  
                  __Lrparam 0000                  vfprintf@fp 005B                  ?_vfpfcnvrt 004F  
                  _adc_Init 337C          ___fpclassifyf@F465 00CD                  sprintf@fmt 008D  
                ?_putrsXLCD 0002                    ___xxtofl 27FC                    __ptext10 2CB8  
                  __ptext11 3480                    __ptext20 1BB8                    __ptext12 3114  
                  __ptext21 2AB6                    __ptext13 3068                    __ptext30 341C  
                  __ptext22 2D62                    __ptext14 25EA                    __ptext31 2EB2  
                  __ptext23 1FE2                    __ptext15 2BBA                    __ptext32 30BE  
                  __ptext24 33AA                    __ptext16 29B0                    __ptext33 2F36  
                  __ptext25 3318                    __ptext17 3164                    __ptext34 346C  
                  __ptext26 300E                    __ptext18 128A                    __ptext35 31AA  
                  __ptext27 337C                    __ptext19 32E0                    __ptext36 3476  
                  __ptext28 27FC                    __ptext37 343A                    __ptext29 334C  
                  __ptext38 344C                    __ptext39 345E        __end_of_WriteCmdXLCD 3114  
                strcpy@dest 0001              _DelayExecution 346C                    efgtoa@fp 0047  
                  efgtoa@ne 0060                    efgtoa@pp 0068                    efgtoa@ou 0071  
                  isa$xinst 0000                    _putsXLCD 33AA                    _vfprintf 3230  
                  memcpy@d1 0001                    memcpy@s1 0003                   sprintf@ap 0092  
    __end_of_DelayExecution 3476                   strcpy@src 0003                 efgtoa@nmode 006A  
               ??_vfpfcnvrt 0052                    sprintf@f 0093                    sprintf@s 008C  
      __end_of_DelayPORXLCD 345E                 ??_putrsXLCD 0003               ___fladd@signs 000D  
              ___fladd@aexp 000E                ___fladd@bexp 000F             ?_DelayExecution 0001  
                _XLCDgotoXY 334C  
